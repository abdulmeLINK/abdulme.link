version: "3.8"

services:
  git-sync:
    image: alpine:3.18
    volumes:
      - /AmberPRO/abdulme.link/codebase:/work
      - /AmberPRO/abdulme.link/vendor:/work/vendor
    working_dir: /work
    command: 'sh -c "apk add --no-cache git shadow curl php81 php81-phar php81-openssl php81-curl php81-fileinfo php81-tokenizer php81-dom php81-xml php81-mbstring php81-zip php81-iconv php81-pdo php81-pdo_mysql composer && getent group www-data || addgroup -g 1000 www-data && getent passwd www-data || adduser -u 1000 -G www-data -H -D www-data && mkdir -p storage/logs storage/framework/sessions storage/framework/views storage/framework/cache bootstrap/cache public && touch .env.example && chmod -R 775 /work && find /work/storage -type d | xargs -I{} chmod 777 {} 2>/dev/null || true && find /work/bootstrap/cache -type d | xargs -I{} chmod 777 {} 2>/dev/null || true && echo \"APP_NAME=Laravel\nAPP_ENV=local\nAPP_DEBUG=true\nAPP_URL=https://abdulme.link\nCIPHER=aes-256-cbc\" > .env.example && chown -R 1000:1000 /work && echo \"Setup complete, sleeping...\" && sleep infinity"'
    healthcheck:
      test: ["CMD-SHELL", "test -d /work/storage"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  app:
    image: php:8.1-fpm-alpine
    container_name: me
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
      COMPOSER_PROCESS_TIMEOUT: 2000
      # Add these environment variables for Laravel to properly detect HTTPS
      HTTPS: "on"
      HTTP_X_FORWARDED_PROTO: "https"
      HTTP_X_FORWARDED_PORT: "443"
    working_dir: /var/www
    volumes:
      - /AmberPRO/abdulme.link/codebase:/var/www
      - /AmberPRO/abdulme.link/vendor:/var/www/vendor
    user: "1000:1000"
    command: 'sh -c "cd /var/www && mkdir -p storage/logs storage/framework/sessions storage/framework/views storage/framework/cache bootstrap/cache public app/Providers && if [ ! -f .env ] || [ ! -s .env ]; then cp .env.example .env || printf \"APP_NAME=Laravel\nAPP_ENV=local\nAPP_DEBUG=true\nAPP_URL=https://abdulme.link\nCIPHER=aes-256-cbc\nTRUST_PROXIES=*\n\" > .env; fi && chmod -f 666 .env || true && touch artisan && echo \"<?php namespace App\\Providers; use Illuminate\\Support\\ServiceProvider; use Illuminate\\Support\\Facades\\URL; class AppServiceProvider extends ServiceProvider { public function boot() { if(config(\\\"app.env\\\") === \\\"production\\\") { URL::forceScheme(\\\"https\\\"); } } public function register() { } }\" > app/Providers/AppServiceProvider.php && php-fpm"'
    depends_on:
      git-sync:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "php -v"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  nginx:
    image: nginx:stable-alpine
    container_name: nginx-service
    restart: unless-stopped
    tty: true
    ports:
      - "8081:80"
    volumes:
      - /AmberPRO/abdulme.link/codebase:/var/www
    command: sh -c "echo 'server { listen 80; server_name localhost; root /var/www/public; index index.php index.html; location / { try_files $$uri $$uri/ /index.php?$$query_string; } location ~* \\.(js|css|png|jpg|jpeg|gif|ico|svg)$ { expires max; } location ~ \\.php$ { fastcgi_pass app:9000; fastcgi_index index.php; fastcgi_param HTTPS on; fastcgi_param HTTP_X_FORWARDED_PROTO https; fastcgi_param HTTP_X_FORWARDED_PORT 443; fastcgi_param SCRIPT_FILENAME $$document_root$$fastcgi_script_name; include fastcgi_params; } }' > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network

  mix:
    image: node:18-alpine
    working_dir: /app
    # Running with more privileges temporarily to handle npm installs
    user: "root"
    volumes:
      - /AmberPRO/abdulme.link/codebase:/app
      - node_modules:/app/node_modules
    # Initialize package.json if missing, then use npm to install and build
    command: 'sh -c "mkdir -p /app/public/js /app/public/css && if [ ! -f /app/package.json ]; then echo \"{\\\"private\\\": true, \\\"scripts\\\": {\\\"dev\\\": \\\"mix\\\", \\\"development\\\": \\\"mix\\\", \\\"watch\\\": \\\"mix watch\\\", \\\"production\\\": \\\"mix --production\\\"}, \\\"dependencies\\\": {\\\"bootstrap\\\": \\\"^5.3.2\\\", \\\"xterm\\\": \\\"^5.3.0\\\"}, \\\"devDependencies\\\": {\\\"laravel-mix\\\": \\\"^6.0.49\\\"}}\" > /app/package.json; fi && mkdir -p /app/resources/js && if [ ! -f /app/resources/js/app.js ]; then echo \"window.isFirstVisit = localStorage.getItem(\\\"visited\\\") === null; localStorage.setItem(\\\"visited\\\", \\\"true\\\");\" > /app/resources/js/app.js; fi && if [ ! -f /app/webpack.mix.js ]; then echo \"const mix = require(\\\"laravel-mix\\\"); mix.js(\\\"resources/js/app.js\\\", \\\"public/js\\\");\" > /app/webpack.mix.js; fi && npm install && npm run production || echo \\\"Build failed but continuing\\\" && chown -R node:node /app/node_modules && chmod -R 775 /app/public/js /app/public/css && tail -f /dev/null"'
    environment:
      - NODE_ENV=production
      - NODE_OPTIONS=--max_old_space_size=512
    restart: unless-stopped
    depends_on:
      git-sync:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  codebase:
  vendor:
  node_modules:
