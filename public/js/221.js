"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[221],{221:(e,n,a)=>{a.r(n),a.d(n,{default:()=>m});var t=a(641),r=a(848),c=a(467),o=a(29),i=a(901),l=a(756),s=a.n(l),p=a(454),d=a(670),u=a(674);function v(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function f(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?v(Object(a),!0).forEach((function(n){(0,r.A)(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):v(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}var m=function(){return(0,i.A)((function e(){(0,o.A)(this,e),this.currentTab="appearance",this.preferences=null,this.unsavedChanges=!1,this.previewTimeout=null,this.tabs=[{id:"appearance",name:"Appearance",icon:"🎨"},{id:"desktop",name:"Desktop",icon:"🖥️"},{id:"dock",name:"Dock",icon:"📱"},{id:"terminal",name:"Terminal",icon:"💻"},{id:"performance",name:"Performance",icon:"⚡"},{id:"privacy",name:"Privacy",icon:"🔒"}]}),[{key:"init",value:(a=(0,c.A)(s().mark((function e(){var n;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.loadPreferences();case 3:return n=this.render(),this.attachEventListeners(n),this.applyStoredPreferences(),e.abrupt("return",n);case 9:return e.prev=9,e.t0=e.catch(0),e.abrupt("return",this.renderError());case 13:case"end":return e.stop()}}),e,this,[[0,9]])}))),function(){return a.apply(this,arguments)})},{key:"loadPreferences",value:(n=(0,c.A)(s().mark((function e(){var n,a,t;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,(n=localStorage.getItem("userPreferences"))&&(this.preferences=JSON.parse(n)),e.next=5,fetch("/api/preferences");case 5:if(!(a=e.sent).ok){e.next=11;break}return e.next=9,a.json();case 9:t=e.sent,this.preferences=this.mergePreferences(t,this.preferences||{});case 11:e.next=17;break;case 13:e.prev=13,e.t0=e.catch(0),this.preferences=this.getDefaultPreferences();case 17:case"end":return e.stop()}}),e,this,[[0,13]])}))),function(){return n.apply(this,arguments)})},{key:"mergePreferences",value:function(e,n){return f(f(f({},e),n),{},{appearance:f(f({},e.appearance),n.appearance),desktop:f(f({},e.desktop),n.desktop),dock:f(f({},e.dock),n.dock),terminal:f(f({},e.terminal),n.terminal),performance:f(f({},e.performance),n.performance),privacy:f(f({},e.privacy),n.privacy)})}},{key:"render",value:function(){var e=document.createElement("div");return e.className="preferences-container",e.innerHTML='\n            <div class="preferences-sidebar">\n                '.concat(this.renderSidebar(),'\n            </div>\n            <div class="preferences-content">\n                ').concat(this.renderContent(),"\n            </div>\n        "),e}},{key:"renderSidebar",value:function(){var e=this;return this.tabs.map((function(n){return'\n            <button \n                class="preferences-tab '.concat(n.id===e.currentTab?"active":"",'"\n                data-tab="').concat(n.id,'"\n            >\n                <span class="tab-icon">').concat(n.icon,'</span>\n                <span class="tab-name">').concat(n.name,"</span>\n            </button>\n        ")})).join("")}},{key:"renderContent",value:function(){switch(this.currentTab){case"appearance":return this.renderAppearanceTab();case"desktop":return this.renderDesktopTab();case"dock":return this.renderDockTab();case"terminal":return this.renderTerminalTab();case"performance":return this.renderPerformanceTab();case"privacy":return this.renderPrivacyTab();default:return"<div>Select a category</div>"}}},{key:"renderAppearanceTab",value:function(){var e,n=(null===(e=this.preferences)||void 0===e?void 0:e.appearance)||{};return'\n            <div class="preferences-tab-content" data-tab="appearance">\n                <h2>Appearance</h2>\n                \n                <div class="preference-group">\n                    <label>Theme</label>\n                    <div class="theme-selector">\n                        '.concat(this.renderThemeOptions(n.theme||"auto"),'\n                    </div>\n                </div>\n\n                <div class="preference-group">\n                    <label>Accent Color</label>\n                    <input \n                        type="color" \n                        class="color-picker" \n                        data-pref="appearance.accent_color"\n                        value="').concat(n.accent_color||u.A.SYSTEM_BLUE,'"\n                    />\n                </div>\n\n                <div class="preference-group">\n                    <label>Transparency <span class="value-label">').concat(Math.round(100*(n.transparency||.8)),'%</span></label>\n                    <input \n                        type="range" \n                        min="0" \n                        max="100" \n                        value="').concat(100*(n.transparency||.8),'"\n                        class="slider"\n                        data-pref="appearance.transparency"\n                    />\n                </div>\n            </div>\n        ')}},{key:"renderDesktopTab",value:function(){var e,n=(null===(e=this.preferences)||void 0===e?void 0:e.desktop)||{},a=n.wallpaper||{};return'\n            <div class="preferences-tab-content" data-tab="desktop">\n                <h2>Desktop & Wallpaper</h2>\n                \n                <div class="preference-group">\n                    <label>\n                        <input \n                            type="checkbox" \n                            data-pref="desktop.wallpaper.auto_rotation"\n                            '.concat(a.auto_rotation?"checked":"",'\n                        />\n                        Auto-rotate wallpaper\n                    </label>\n                </div>\n\n                <div class="preference-group">\n                    <label>Rotation Interval</label>\n                    <select data-pref="desktop.wallpaper.rotation_interval">\n                        <option value="900000" ').concat(9e5===a.rotation_interval?"selected":"",'>15 minutes</option>\n                        <option value="1800000" ').concat(18e5===a.rotation_interval?"selected":"",'>30 minutes</option>\n                        <option value="3600000" ').concat(36e5===a.rotation_interval?"selected":"",'>1 hour</option>\n                        <option value="21600000" ').concat(216e5===a.rotation_interval?"selected":"",'>6 hours</option>\n                    </select>\n                </div>\n\n                <div class="preference-group">\n                    <label>\n                        <input \n                            type="checkbox" \n                            data-pref="desktop.wallpaper.time_based_switching"\n                            ').concat(a.time_based_switching?"checked":"",'\n                        />\n                        Time-based light/dark switching\n                    </label>\n                </div>\n\n                <div class="preference-group wallpaper-gallery-group">\n                    <label>Choose Wallpaper</label>\n                    <div class="wallpaper-gallery-note">Click to select your preferred wallpaper</div>\n                    <div id="wallpaper-gallery-container">\n                        <div class="wallpaper-loading">Loading wallpapers...</div>\n                    </div>\n                </div>\n\n                <div class="preference-group">\n                    <label>Icon Size</label>\n                    <div class="icon-size-preview">\n                        ').concat(["small","medium","large"].map((function(e){var a;return'\n                            <button \n                                class="icon-size-btn '.concat(((null===(a=n.icons)||void 0===a?void 0:a.size)||"medium")===e?"active":"",'"\n                                data-pref="desktop.icons.size"\n                                data-value="').concat(e,'"\n                            >\n                                ').concat(e.charAt(0).toUpperCase()+e.slice(1),"\n                            </button>\n                        ")})).join(""),"\n                    </div>\n                </div>\n            </div>\n        ")}},{key:"renderDockTab",value:function(){var e,n,a,t,r,c=(null===(e=this.preferences)||void 0===e?void 0:e.dock)||{};return'\n            <div class="preferences-tab-content" data-tab="dock">\n                <h2>Dock Settings</h2>\n                \n                <div class="preference-group">\n                    <label>Position</label>\n                    <div class="dock-position-selector">\n                        '.concat(["bottom","left","right"].map((function(e){return'\n                            <button \n                                class="position-btn '.concat((c.position||"bottom")===e?"active":"",'"\n                                data-pref="dock.position"\n                                data-value="').concat(e,'"\n                            >\n                                ').concat(e.charAt(0).toUpperCase()+e.slice(1),"\n                            </button>\n                        ")})).join(""),'\n                    </div>\n                </div>\n\n                <div class="preference-group">\n                    <label>Size <span class="value-label">').concat(c.size||64,'px</span></label>\n                    <input \n                        type="range" \n                        min="44" \n                        max="96" \n                        value="').concat(c.size||64,'"\n                        class="slider"\n                        data-pref="dock.size"\n                    />\n                </div>\n\n                <div class="preference-group">\n                    <label>\n                        <input \n                            type="checkbox" \n                            data-pref="dock.magnification.enabled"\n                            ').concat(null!==(n=c.magnification)&&void 0!==n&&n.enabled?"checked":"","\n                        />\n                        Enable magnification\n                    </label>\n                </div>\n\n                ").concat(null!==(a=c.magnification)&&void 0!==a&&a.enabled?'\n                    <div class="preference-group">\n                        <label>Magnification Scale <span class="value-label">'.concat((null===(t=c.magnification)||void 0===t?void 0:t.scale)||1.5,'x</span></label>\n                        <input \n                            type="range" \n                            min="1.2" \n                            max="2.0" \n                            step="0.1"\n                            value="').concat((null===(r=c.magnification)||void 0===r?void 0:r.scale)||1.5,'"\n                            class="slider"\n                            data-pref="dock.magnification.scale"\n                        />\n                    </div>\n                '):"",'\n\n                <div class="preference-group">\n                    <label>\n                        <input \n                            type="checkbox" \n                            data-pref="dock.auto_hide"\n                            ').concat(c.auto_hide?"checked":"","\n                        />\n                        Auto-hide dock\n                    </label>\n                </div>\n            </div>\n        ")}},{key:"renderTerminalTab",value:function(){var e,n=(null===(e=this.preferences)||void 0===e?void 0:e.terminal)||{},a=n.appearance||{},r=n.behavior||{},c=a.theme||"default",o=d.A[c],i=Object.entries(d.A).map((function(e){var n=(0,t.A)(e,2),a=n[0],r=n[1],o=c===a?"selected":"";return'<option value="'.concat(a,'" ').concat(o,">").concat(r.name,"</option>")})).join("");return'\n            <div class="preferences-tab-content" data-tab="terminal">\n                <h2>Terminal Settings</h2>\n                \n                <div class="preference-group">\n                    <label>Current Theme</label>\n                    <div class="current-theme-display">\n                        <div class="theme-preview" style="\n                            background: '.concat(o.background,";\n                            color: ").concat(o.foreground,';\n                            border: 1px solid var(--pref-border);\n                            border-radius: 6px;\n                            padding: 12px;\n                            font-family: monospace;\n                            font-size: 11px;\n                            margin-bottom: 8px;\n                        ">\n                            <div>').concat(o.name,'</div>\n                            <div style="opacity: 0.7; font-size: 10px;">').concat(o.description||"Terminal theme",'</div>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class="preference-group">\n                    <label>Theme</label>\n                    <select data-pref="terminal.appearance.theme">\n                        ').concat(i,'\n                    </select>\n                </div>\n\n                <div class="preference-group">\n                    <label>Font Family</label>\n                    <select data-pref="terminal.appearance.font_family">\n                        <option value="Menlo" ').concat("Menlo"===a.font_family?"selected":"",'>Menlo (Default)</option>\n                        <option value="Monaco" ').concat("Monaco"===a.font_family?"selected":"",'>Monaco</option>\n                        <option value="Fira Code" ').concat("Fira Code"===a.font_family?"selected":"",'>Fira Code (Ligatures)</option>\n                        <option value="JetBrains Mono" ').concat("JetBrains Mono"===a.font_family?"selected":"",'>JetBrains Mono</option>\n                        <option value="Cascadia Code" ').concat("Cascadia Code"===a.font_family?"selected":"",'>Cascadia Code</option>\n                        <option value="Source Code Pro" ').concat("Source Code Pro"===a.font_family?"selected":"",'>Source Code Pro</option>\n                        <option value="Hack" ').concat("Hack"===a.font_family?"selected":"",'>Hack</option>\n                        <option value="IBM Plex Mono" ').concat("IBM Plex Mono"===a.font_family?"selected":"",'>IBM Plex Mono</option>\n                        <option value="Inconsolata" ').concat("Inconsolata"===a.font_family?"selected":"",'>Inconsolata</option>\n                        <option value="Roboto Mono" ').concat("Roboto Mono"===a.font_family?"selected":"",'>Roboto Mono</option>\n                        <option value="Ubuntu Mono" ').concat("Ubuntu Mono"===a.font_family?"selected":"",'>Ubuntu Mono</option>\n                        <option value="Courier New" ').concat("Courier New"===a.font_family?"selected":"",'>Courier New</option>\n                        <option value="Consolas" ').concat("Consolas"===a.font_family?"selected":"",'>Consolas</option>\n                        <option value="SF Mono" ').concat("SF Mono"===a.font_family?"selected":"",'>SF Mono</option>\n                    </select>\n                </div>\n\n                <div class="preference-group">\n                    <label>Font Size <span class="value-label">').concat(a.font_size||11,'px</span></label>\n                    <input \n                        type="range" \n                        min="8" \n                        max="24" \n                        value="').concat(a.font_size||11,'"\n                        class="slider"\n                        data-pref="terminal.appearance.font_size"\n                    />\n                </div>\n\n                <div class="preference-group">\n                    <label>Line Height <span class="value-label">').concat(a.line_height||1.2,'</span></label>\n                    <input \n                        type="range" \n                        min="1.0" \n                        max="2.0" \n                        step="0.1"\n                        value="').concat(a.line_height||1.2,'"\n                        class="slider"\n                        data-pref="terminal.appearance.line_height"\n                    />\n                </div>\n\n                <div class="preference-group">\n                    <label>Cursor Style</label>\n                    <select data-pref="terminal.appearance.cursor_style">\n                        <option value="block" ').concat("block"===a.cursor_style?"selected":"",'>Block</option>\n                        <option value="underline" ').concat("underline"===a.cursor_style?"selected":"",'>Underline</option>\n                        <option value="bar" ').concat("bar"===a.cursor_style?"selected":"",'>Bar</option>\n                    </select>\n                </div>\n\n                <div class="preference-group">\n                    <label>\n                        <input \n                            type="checkbox" \n                            data-pref="terminal.appearance.cursor_blink"\n                            ').concat(!1!==a.cursor_blink?"checked":"",'\n                        />\n                        Blinking Cursor\n                    </label>\n                </div>\n\n                <div class="preference-group">\n                    <label>History Size <span class="value-label">').concat(r.history_size||1e3,'</span></label>\n                    <input \n                        type="range" \n                        min="100" \n                        max="10000" \n                        step="100"\n                        value="').concat(r.history_size||1e3,'"\n                        class="slider"\n                        data-pref="terminal.behavior.history_size"\n                    />\n                </div>\n\n                <div class="preference-group">\n                    <label>\n                        <input \n                            type="checkbox" \n                            data-pref="terminal.behavior.bell_sound"\n                            ').concat(!1!==r.bell_sound?"checked":"","\n                        />\n                        Bell Sound\n                    </label>\n                </div>\n            </div>\n        ")}},{key:"renderPerformanceTab",value:function(){null===(e=this.preferences)||void 0===e||e.performance;var e,n,a,t=(null===(n=this.preferences)||void 0===n?void 0:n.boot)||{},r=(null===(a=this.preferences)||void 0===a?void 0:a.animations)||{};return'\n            <div class="preferences-tab-content" data-tab="performance">\n                <h2>Performance Settings</h2>\n                \n                <div class="preference-group">\n                    <label>\n                        <input \n                            type="checkbox" \n                            data-pref="boot.animation_enabled"\n                            '.concat(!1!==t.animation_enabled?"checked":"",'\n                        />\n                        Enable boot animation\n                    </label>\n                </div>\n\n                <div class="preference-group">\n                    <label>\n                        <input \n                            type="checkbox" \n                            data-pref="boot.skip_after_session"\n                            ').concat(t.skip_after_session?"checked":"",'\n                        />\n                        Skip boot after session\n                    </label>\n                </div>\n\n                <div class="preference-group">\n                    <label>Animation Speed</label>\n                    <select data-pref="animations.speed">\n                        <option value="slow" ').concat("slow"===r.speed?"selected":"",'>Slow</option>\n                        <option value="normal" ').concat("normal"!==r.speed&&r.speed?"":"selected",'>Normal</option>\n                        <option value="fast" ').concat("fast"===r.speed?"selected":"",'>Fast</option>\n                        <option value="off" ').concat("off"===r.speed?"selected":"",'>Off</option>\n                    </select>\n                </div>\n\n                <div class="preference-group">\n                    <label>\n                        <input \n                            type="checkbox" \n                            data-pref="animations.reduced_motion"\n                            ').concat(r.reduced_motion?"checked":"",'\n                        />\n                        Reduce motion (accessibility)\n                    </label>\n                </div>\n\n                <div class="preference-group">\n                    <button class="btn-secondary" data-action="clear-cache">Clear Cache</button>\n                </div>\n            </div>\n        ')}},{key:"renderPrivacyTab",value:function(){var e,n=(null===(e=this.preferences)||void 0===e?void 0:e.privacy)||{};return'\n            <div class="preferences-tab-content" data-tab="privacy">\n                <h2>Privacy Settings</h2>\n                \n                <div class="preference-group">\n                    <label>\n                        <input \n                            type="checkbox" \n                            data-pref="privacy.remember_session"\n                            '.concat(!1!==n.remember_session?"checked":"",'\n                        />\n                        Remember session\n                    </label>\n                </div>\n\n                <div class="preference-group">\n                    <label>\n                        <input \n                            type="checkbox" \n                            data-pref="privacy.restore_windows"\n                            ').concat(n.restore_windows?"checked":"",'\n                        />\n                        Restore window positions\n                    </label>\n                </div>\n\n                <div class="preference-group">\n                    <label>\n                        <input \n                            type="checkbox" \n                            data-pref="privacy.analytics"\n                            ').concat(n.analytics?"checked":"",'\n                        />\n                        Enable analytics\n                    </label>\n                </div>\n\n                <div class="preference-group">\n                    <button class="btn-secondary" data-action="export-settings">Export Settings</button>\n                    <button class="btn-secondary" data-action="import-settings">Import Settings</button>\n                </div>\n\n                <div class="preference-group">\n                    <button class="btn-danger" data-action="reset-all">Reset to Defaults</button>\n                </div>\n            </div>\n        ')}},{key:"renderThemeOptions",value:function(e){return["light","dark","auto"].map((function(n){return'\n            <button \n                class="theme-btn '.concat(e===n?"active":"",'"\n                data-pref="appearance.theme"\n                data-value="').concat(n,'"\n            >\n                ').concat(n.charAt(0).toUpperCase()+n.slice(1),"\n            </button>\n        ")})).join("")}},{key:"attachEventListeners",value:function(e){this.attachTabListeners(e),this.attachPreferenceListeners(e),this.attachActionListeners(e)}},{key:"attachPreferenceListeners",value:function(e){var n=this;e.addEventListener("change",(function(e){var a=e.target.dataset.pref;if(a){var t=e.target.value;"checkbox"===e.target.type&&(t=e.target.checked),"range"===e.target.type&&(t=parseFloat(t),"appearance.transparency"===a&&(t/=100)),n.updatePreference(a,t)}})),e.addEventListener("input",(function(e){if("range"===e.target.type){var n=e.target.parentElement.querySelector(".value-label");if(n){var a,t=e.target.value;if("appearance.transparency"===e.target.dataset.pref)t+="%";else if(null!==(a=e.target.dataset.pref)&&void 0!==a&&a.includes("scale"))t=parseFloat(t).toFixed(1)+"x";else{var r;t+=null!==(r=e.target.dataset.pref)&&void 0!==r&&r.includes("size")?"px":""}n.textContent=t}}})),e.addEventListener("click",(function(e){var a=e.target.closest("[data-pref][data-value]");if(a){var t=a.dataset.pref,r=a.dataset.value;n.updatePreference(t,r),a.parentElement.querySelectorAll("[data-pref]").forEach((function(e){return e.classList.remove("active")})),a.classList.add("active")}}))}},{key:"attachActionListeners",value:function(e){var n=this;e.addEventListener("click",(function(e){var a=e.target.dataset.action;if(a)switch(a){case"clear-cache":n.clearCache();break;case"export-settings":n.exportSettings();break;case"import-settings":n.importSettings();break;case"reset-all":n.resetToDefaults()}}))}},{key:"updatePreference",value:function(e,n){for(var a=e.split("."),t=this.preferences,r=0;r<a.length-1;r++)t[a[r]]||(t[a[r]]={}),t=t[a[r]];t[a[a.length-1]]=n,this.savePreferences(),this.applyPreference(e,n),this.unsavedChanges=!0}},{key:"applyPreference",value:function(e,n){var a=this;"appearance.accent_color"===e&&document.documentElement.style.setProperty("--accent-color",n),this.previewTimeout&&clearTimeout(this.previewTimeout),this.previewTimeout=setTimeout((function(){p.A.emit("preference:changed",{path:e,value:n,preferences:a.preferences}),p.A.emit("preferences:changed",{data:a.preferences})}),300)}},{key:"savePreferences",value:function(){try{localStorage.setItem("userPreferences",JSON.stringify(this.preferences))}catch(e){}}},{key:"applyStoredPreferences",value:function(){var e,n=this;this.preferences&&(null!==(e=this.preferences.appearance)&&void 0!==e&&e.accent_color&&document.documentElement.style.setProperty("--accent-color",this.preferences.appearance.accent_color),p.A.emit("preferences:loaded",this.preferences),setTimeout((function(){return n.loadWallpapersIfNeeded()}),100))}},{key:"loadWallpapersIfNeeded",value:(e=(0,c.A)(s().mark((function e(){var n,a,t;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=document.getElementById("wallpaper-gallery-container")){e.next=3;break}return e.abrupt("return");case 3:return e.prev=3,e.next=6,fetch("/wallpapers-manifest.json");case 6:return a=e.sent,e.next=9,a.json();case 9:t=e.sent,this.renderWallpaperGallery(n,t.wallpapers||[]),e.next=17;break;case 13:e.prev=13,e.t0=e.catch(3),n.innerHTML='<div class="wallpaper-error">Failed to load wallpapers</div>';case 17:case"end":return e.stop()}}),e,this,[[3,13]])}))),function(){return e.apply(this,arguments)})},{key:"renderWallpaperGallery",value:function(e,n){var a=this,t="sonoma-light";try{var r=localStorage.getItem("current_wallpaper");if(r){var c=JSON.parse(r);t=c.id||c}}catch(i){t=localStorage.getItem("current_wallpaper")||"sonoma-light"}var o=document.createElement("div");o.className="wallpaper-gallery",n.forEach((function(e){var n=document.createElement("div"),r=t===e.id;n.className="wallpaper-item ".concat(r?"selected":""),n.dataset.wallpaperId=e.id,n.dataset.wallpaperFilename=e.filename;var c=document.createElement("img"),i="/images/wallpapers/thumbnails/".concat(e.filename),l="/images/wallpapers/".concat(e.filename);c.src=i,c.alt=e.name,c.loading="lazy";var s=!1;c.onerror=function(){!s&&e.filename?(s=!0,c.src=l):e.filename||(c.style.display="none")};var p=document.createElement("div");p.className="wallpaper-info",p.innerHTML='\n                <div class="wallpaper-name">'.concat(e.name,'</div>\n                <div class="wallpaper-version">').concat(e.version,"</div>\n            "),n.appendChild(c),n.appendChild(p),n.addEventListener("click",(function(){return a.selectWallpaper(e,n)})),o.appendChild(n)})),e.innerHTML="",e.appendChild(o)}},{key:"selectWallpaper",value:function(e,n){document.querySelectorAll(".wallpaper-item").forEach((function(e){e.classList.remove("selected")})),n.classList.add("selected"),localStorage.setItem("current_wallpaper",e.id),p.A.emit("wallpaper:change",{id:e.id,filename:e.filename,type:e.type})}},{key:"updateUI",value:function(e){e.querySelector(".preferences-sidebar").innerHTML=this.renderSidebar(),e.querySelector(".preferences-content").innerHTML=this.renderContent(),this.attachTabListeners(e),this.attachPreferenceListeners(e),this.attachActionListeners(e),"desktop"===this.currentTab&&this.loadWallpapersIfNeeded()}},{key:"attachTabListeners",value:function(e){var n=this;e.querySelectorAll(".preferences-tab").forEach((function(a){a.addEventListener("click",(function(a){n.currentTab=a.currentTarget.dataset.tab,n.updateUI(e)}))}))}},{key:"clearCache",value:function(){confirm("Clear all cached data? This will reload the page.")&&(localStorage.removeItem("wallpaperCache"),localStorage.removeItem("portfolioCache"),location.reload())}},{key:"exportSettings",value:function(){var e=JSON.stringify(this.preferences,null,2),n=new Blob([e],{type:"application/json"}),a=URL.createObjectURL(n),t=document.createElement("a");t.href=a,t.download="preferences-export.json",t.click(),URL.revokeObjectURL(a)}},{key:"importSettings",value:function(){var e=this,n=document.createElement("input");n.type="file",n.accept="application/json",n.onchange=function(n){var a=n.target.files[0],t=new FileReader;t.onload=function(n){try{var a=JSON.parse(n.target.result);e.preferences=a,e.savePreferences(),location.reload()}catch(t){alert("Invalid preferences file")}},t.readAsText(a)},n.click()}},{key:"resetToDefaults",value:function(){confirm("Reset all preferences to defaults? This cannot be undone.")&&(localStorage.removeItem("userPreferences"),location.reload())}},{key:"getDefaultPreferences",value:function(){return{appearance:{theme:"auto",accent_color:u.A.SYSTEM_BLUE,transparency:.8},desktop:{wallpaper:{auto_rotation:!0},icons:{size:"medium"}},dock:{position:"bottom",size:64,magnification:{enabled:!0,scale:1.5}},terminal:{appearance:{theme:"matrix",font_size:14},behavior:{history_size:1e3}},performance:{},privacy:{remember_session:!0}}}},{key:"renderError",value:function(){var e=document.createElement("div");return e.className="preferences-error",e.innerHTML="\n            <h2>Failed to Load Preferences</h2>\n            <p>Please try again later.</p>\n        ",e}},{key:"switchTab",value:function(e){if(this.tabs.find((function(n){return n.id===e}))){this.currentTab=e;var n=document.querySelector(".preferences-container");n&&(this.updateUI(n),n.querySelectorAll(".preferences-tab").forEach((function(n){n.dataset.tab===e?(n.classList.add("active"),n.scrollIntoView({behavior:"smooth",block:"nearest"})):n.classList.remove("active")})))}}},{key:"destroy",value:function(){this.previewTimeout&&clearTimeout(this.previewTimeout)}}]);var e,n,a}()}}]);