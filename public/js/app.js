/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 5495:
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _services_ThemeService_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./services/ThemeService.js */ 3985);\n/* harmony import */ var _components_LinkOS_Desktop_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/LinkOS/Desktop.js */ 3352);\n/* harmony import */ var _components_LinkOS_Dock_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/LinkOS/Dock.js */ 1813);\n/* harmony import */ var _components_LinkOS_WindowManager_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/LinkOS/WindowManager.js */ 6659);\n/* harmony import */ var _components_terminal_Terminal_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/terminal/Terminal.js */ 6796);\n/* harmony import */ var _components_portfolio_Portfolio_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/portfolio/Portfolio.js */ 3026);\n/* harmony import */ var _components_about_About_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/about/About.js */ 430);\n/* harmony import */ var _components_contact_Contact_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components/contact/Contact.js */ 9766);\n/* harmony import */ var _components_finder_Finder_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/finder/Finder.js */ 8720);\n/* harmony import */ var _components_browser_Browser_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./components/browser/Browser.js */ 4270);\n/* harmony import */ var _components_preferences_PreferencesIntegration_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./components/preferences/PreferencesIntegration.js */ 6370);\n/* harmony import */ var _components_EventBus_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./components/EventBus.js */ 947);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * AbdulmeLink Portfolio - LinkOS Desktop Experience\n * Main application entry point\n */\nvar App = /*#__PURE__*/function () {\n  function App() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, App);\n    this.themeService = _services_ThemeService_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; // Singleton\n    this.desktop = null;\n    this.dock = null;\n    this.windowManager = null;\n    this.preferencesIntegration = null;\n    this.isInitialized = false;\n    this.components = new Map();\n    this.init();\n  }\n\n  /**\n   * Initialize application\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(App, [{\n    key: \"init\",\n    value: function () {\n      var _init = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee() {\n        var _this = this;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              console.log('üöÄ Initializing AbdulmeLink Portfolio...');\n\n              // Wait for DOM to be ready\n              if (!(document.readyState === 'loading')) {\n                _context.next = 6;\n                break;\n              }\n              document.addEventListener('DOMContentLoaded', function () {\n                return _this.start();\n              });\n              _context.next = 8;\n              break;\n            case 6:\n              _context.next = 8;\n              return this.start();\n            case 8:\n              _context.next = 14;\n              break;\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Failed to initialize app:', _context.t0);\n              this.handleError(_context.t0);\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 10]]);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n    /**\n     * Start application\n     */\n  }, {\n    key: \"start\",\n    value: function () {\n      var _start = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee2() {\n        var _this2 = this;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              try {\n                // Setup global error handling\n                this.setupErrorHandling();\n\n                // Setup performance monitoring\n                this.setupPerformanceMonitoring();\n\n                // Initialize EventBus\n                this.setupEventBus();\n\n                // Initialize Desktop (CRITICAL PRIORITY - Phase 2)\n                this.desktop = new _components_LinkOS_Desktop_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\n                this.components.set('desktop', this.desktop);\n\n                // Expose Desktop globally for debugging\n                window.DesktopInstance = this.desktop;\n                window.testWallpaperPersistence = function () {\n                  return _this2.desktop.testWallpaperPersistence();\n                };\n                window.simulateNewUser = function () {\n                  return _this2.desktop.simulateNewUser();\n                };\n                window.testRandomAssignment = function () {\n                  return _this2.desktop.testRandomAssignment();\n                };\n\n                // Wait for desktop to be ready before loading other components\n                _components_EventBus_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].once('desktop:ready', function () {\n                  console.log('‚úÖ Desktop initialized successfully');\n                  console.log('üîß Debug helpers:');\n                  console.log('  - window.testWallpaperPersistence() - Test persistence system');\n                  console.log('  - window.simulateNewUser() - Clear data to test new user experience');\n                  console.log('  - window.testRandomAssignment() - Test random wallpaper assignment');\n                  _this2.loadAdditionalComponents();\n                });\n                this.isInitialized = true;\n                console.log('‚úÖ App initialization complete');\n              } catch (error) {\n                console.error('Failed to start app:', error);\n                this.handleError(error);\n              }\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function start() {\n        return _start.apply(this, arguments);\n      }\n      return start;\n    }()\n    /**\n     * Load additional components after desktop is ready\n     */\n  }, {\n    key: \"loadAdditionalComponents\",\n    value: function () {\n      var _loadAdditionalComponents = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee3() {\n        var _this3 = this;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              try {\n                console.log('üìã Loading Phase 2 components...');\n\n                // Initialize Preferences Integration (Phase 6)\n                console.log('‚öôÔ∏è Initializing Preferences Integration...');\n                this.preferencesIntegration = new _components_preferences_PreferencesIntegration_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"]();\n                this.components.set('preferencesIntegration', this.preferencesIntegration);\n                console.log('‚úÖ Preferences Integration initialized');\n\n                // Phase 2 components (CRITICAL PRIORITY):\n\n                // Initialize Dock (CRITICAL)\n                console.log('üé™ Initializing Dock component...');\n                this.dock = new _components_LinkOS_Dock_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]();\n                this.components.set('dock', this.dock);\n\n                // Wait for dock to be ready\n                _components_EventBus_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].once('dock:ready', function () {\n                  console.log('‚úÖ Dock initialized successfully');\n\n                  // Initialize Window Manager (CRITICAL)\n                  console.log('ü™ü Initializing Window Manager...');\n                  _this3.windowManager = new _components_LinkOS_WindowManager_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]();\n                  _this3.components.set('windowManager', _this3.windowManager);\n                  console.log('‚úÖ Window Manager initialized successfully');\n                  console.log('üîß Window Debug helpers:');\n                  console.log('  - window.WindowManager = this.windowManager');\n                  console.log('  - window.createTestWindow() - Create test window');\n\n                  // Expose Window Manager globally for debugging\n                  window.WindowManager = _this3.windowManager;\n                  window.createTestWindow = function () {\n                    return _this3.createTestWindow();\n                  };\n                  window.createTerminalWindow = function () {\n                    return _this3.createTerminalWindow();\n                  };\n\n                  // Setup app launch handlers\n                  _this3.setupAppLaunchers();\n\n                  // Future Phase 2 components:\n                  // - Window Manager (HIGH)\n                });\n\n                // Phase 3 components (will be added later):\n                // - Terminal (HIGH)\n\n                // Phase 4 components (will be added later):\n                // - Portfolio (HIGH)\n                // - About (MEDIUM)\n                // - Contact (MEDIUM)\n              } catch (error) {\n                console.error('Failed to load additional components:', error);\n              }\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function loadAdditionalComponents() {\n        return _loadAdditionalComponents.apply(this, arguments);\n      }\n      return loadAdditionalComponents;\n    }()\n    /**\n     * Setup EventBus global event handling\n     */\n  }, {\n    key: \"setupEventBus\",\n    value: function setupEventBus() {\n      // Enable debug mode in development\n      if (window.location.hostname === 'localhost' || window.location.search.includes('debug=true')) {\n        _components_EventBus_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].setDebugMode(true);\n      }\n\n      // Global error events\n      _components_EventBus_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].on('desktop:error', this.onDesktopError.bind(this));\n\n      // Performance events\n      _components_EventBus_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].on('performance:warning', this.onPerformanceWarning.bind(this));\n\n      // File viewer events\n      _components_EventBus_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].on('file:open', this.openFileViewer.bind(this));\n\n      // Notification events\n      _components_EventBus_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].on('notification:show', this.showNotification.bind(this));\n      console.log('üì° EventBus configured');\n    }\n\n    /**\n     * Setup global error handling\n     */\n  }, {\n    key: \"setupErrorHandling\",\n    value: function setupErrorHandling() {\n      // Uncaught JavaScript errors\n      window.addEventListener('error', function (event) {\n        console.error('Uncaught error:', event.error);\n        _components_EventBus_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].emit('app:error', {\n          type: 'javascript',\n          error: event.error,\n          filename: event.filename,\n          lineno: event.lineno,\n          colno: event.colno\n        });\n      });\n\n      // Unhandled promise rejections\n      window.addEventListener('unhandledrejection', function (event) {\n        console.error('Unhandled promise rejection:', event.reason);\n        _components_EventBus_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].emit('app:error', {\n          type: 'promise',\n          error: event.reason\n        });\n      });\n\n      // Resource loading errors\n      window.addEventListener('error', function (event) {\n        if (event.target !== window) {\n          console.warn('Resource loading error:', event.target.src || event.target.href);\n          _components_EventBus_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].emit('app:resource-error', {\n            type: 'resource',\n            element: event.target,\n            src: event.target.src || event.target.href\n          });\n        }\n      }, true);\n    }\n\n    /**\n     * Setup performance monitoring\n     */\n  }, {\n    key: \"setupPerformanceMonitoring\",\n    value: function setupPerformanceMonitoring() {\n      // Monitor FPS\n      var fps = 0;\n      var lastTime = performance.now();\n      var frameCount = 0;\n      var measureFPS = function measureFPS(currentTime) {\n        frameCount++;\n        if (currentTime - lastTime >= 1000) {\n          fps = Math.round(frameCount * 1000 / (currentTime - lastTime));\n\n          // Warn if FPS drops below targets\n          var isMobile = /Mobi|Android/i.test(navigator.userAgent);\n          var targetFPS = isMobile ? 30 : 60;\n          if (fps < targetFPS * 0.8) {\n            // 80% of target\n            _components_EventBus_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].emit('performance:warning', {\n              type: 'fps',\n              current: fps,\n              target: targetFPS,\n              severity: fps < targetFPS * 0.5 ? 'high' : 'medium'\n            });\n          }\n          lastTime = currentTime;\n          frameCount = 0;\n        }\n        requestAnimationFrame(measureFPS);\n      };\n      requestAnimationFrame(measureFPS);\n\n      // Monitor memory usage (if available)\n      if (performance.memory) {\n        setInterval(function () {\n          var memInfo = performance.memory;\n          var usedMB = Math.round(memInfo.usedJSHeapSize / 1024 / 1024);\n\n          // Warn if memory usage exceeds 100MB\n          if (usedMB > 100) {\n            _components_EventBus_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].emit('performance:warning', {\n              type: 'memory',\n              usedMB: usedMB,\n              limitMB: 100,\n              severity: usedMB > 150 ? 'high' : 'medium'\n            });\n          }\n        }, 30000); // Check every 30 seconds\n      }\n    }\n\n    /**\n     * Handle desktop errors\n     */\n  }, {\n    key: \"onDesktopError\",\n    value: function onDesktopError(data) {\n      console.error('Desktop error:', data);\n\n      // Show fallback UI if desktop fails critically\n      if (data.error && data.error.includes('initialization')) {\n        this.showFallbackUI();\n      }\n    }\n\n    /**\n     * Handle performance warnings\n     */\n  }, {\n    key: \"onPerformanceWarning\",\n    value: function onPerformanceWarning(data) {\n      console.warn('Performance warning:', data);\n\n      // Automatically reduce quality for severe performance issues\n      if (data.severity === 'high') {\n        _components_EventBus_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].emit('app:reduce-quality', data);\n      }\n    }\n\n    /**\n     * Show notification\n     */\n  }, {\n    key: \"showNotification\",\n    value: function showNotification(data) {\n      var title = data.title,\n        message = data.message,\n        _data$type = data.type,\n        type = _data$type === void 0 ? 'info' : _data$type,\n        _data$duration = data.duration,\n        duration = _data$duration === void 0 ? 3000 : _data$duration;\n\n      // Format message with proper line breaks\n      var formattedMessage = message ? message.replace(/\\n/g, '<br>') : '';\n\n      // Create notification element\n      var notification = document.createElement('div');\n      notification.className = \"LinkOS-notification notification-\".concat(type);\n      notification.innerHTML = \"\\n            <div class=\\\"notification-content\\\">\\n                <div class=\\\"notification-title\\\">\".concat(title || 'Notification', \"</div>\\n                \").concat(formattedMessage ? \"<div class=\\\"notification-message\\\">\".concat(formattedMessage, \"</div>\") : '', \"\\n            </div>\\n        \");\n\n      // Add styles with LinkOS authenticity\n      Object.assign(notification.style, {\n        position: 'fixed',\n        top: '20px',\n        right: '20px',\n        minWidth: '320px',\n        maxWidth: '420px',\n        padding: '16px 20px',\n        background: 'rgba(28, 28, 30, 0.85)',\n        border: '0.5px solid rgba(255, 255, 255, 0.12)',\n        borderRadius: '10px',\n        boxShadow: '0 20px 60px rgba(0, 0, 0, 0.5), 0 0 0 0.5px rgba(255, 255, 255, 0.05) inset',\n        zIndex: '10000',\n        fontFamily: '-apple-system, BlinkMacSystemFont, \"SF Pro Text\", \"Helvetica Neue\", sans-serif',\n        fontSize: '13px',\n        color: 'var(--text-primary)',\n        animation: 'slideIn 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\n        backdropFilter: 'blur(40px) saturate(180%)',\n        WebkitBackdropFilter: 'blur(40px) saturate(180%)',\n        cursor: 'pointer'\n      });\n\n      // Click to dismiss\n      notification.addEventListener('click', function () {\n        notification.style.animation = 'slideOut 0.3s cubic-bezier(0.4, 0, 0.2, 1)';\n        setTimeout(function () {\n          return notification.remove();\n        }, 300);\n      });\n\n      // Add to DOM\n      document.body.appendChild(notification);\n\n      // Auto-remove after duration\n      setTimeout(function () {\n        notification.style.animation = 'slideOut 0.3s cubic-bezier(0.4, 0, 0.2, 1)';\n        setTimeout(function () {\n          return notification.remove();\n        }, 300);\n      }, duration);\n      console.log('üì¢ Notification shown:', title, message);\n    }\n\n    /**\n     * Show fallback UI for critical errors\n     */\n  }, {\n    key: \"showFallbackUI\",\n    value: function showFallbackUI() {\n      var fallbackHTML = \"\\n            <div style=\\\"\\n                position: fixed;\\n                top: 0;\\n                left: 0;\\n                width: 100vw;\\n                height: 100vh;\\n                background: linear-gradient(135deg, #000 0%, #1a1a1a 100%);\\n                display: flex;\\n                align-items: center;\\n                justify-content: center;\\n                color: white;\\n                font-family: -apple-system, BlinkMacSystemFont, sans-serif;\\n                z-index: 99999;\\n            \\\">\\n                <div style=\\\"text-align: center; max-width: 400px; padding: 2rem;\\\">\\n                    <h1 style=\\\"font-size: 2rem; margin-bottom: 1rem;\\\">\\u26A0\\uFE0F Loading Error</h1>\\n                    <p style=\\\"margin-bottom: 2rem; opacity: 0.8;\\\">\\n                        The desktop experience failed to load properly. Please refresh the page or try again later.\\n                    </p>\\n                    <button onclick=\\\"window.location.reload()\\\" style=\\\"\\n                        background: #007AFF;\\n                        color: white;\\n                        border: none;\\n                        padding: 12px 24px;\\n                        border-radius: 8px;\\n                        font-size: 16px;\\n                        cursor: pointer;\\n                    \\\">\\n                        Refresh Page\\n                    </button>\\n                </div>\\n            </div>\\n        \";\n      document.body.insertAdjacentHTML('beforeend', fallbackHTML);\n    }\n\n    /**\n     * Handle critical application errors\n     */\n  }, {\n    key: \"handleError\",\n    value: function handleError(error) {\n      console.error('Critical app error:', error);\n\n      // Try to recover or show fallback\n      if (!this.isInitialized) {\n        this.showFallbackUI();\n      }\n    }\n\n    /**\n     * Setup app launcher handlers\n     */\n  }, {\n    key: \"setupAppLaunchers\",\n    value: function setupAppLaunchers() {\n      var _this4 = this;\n      _components_EventBus_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].on('app:launch', function (data) {\n        console.log('App launch requested:', data);\n\n        // Handle document type by converting to file:open event\n        if (data.type === 'document') {\n          var fileName = data.filePath ? data.filePath.split('/').pop() : data.name + '.pdf';\n          _components_EventBus_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].emit('file:open', {\n            path: data.filePath || \"/documents/\".concat(fileName),\n            name: data.name || fileName,\n            content: '',\n            // PDF content loaded by iframe\n            size: 0,\n            modified: new Date().toISOString(),\n            type: data.fileType || 'pdf'\n          });\n          return;\n        }\n        switch (data.appId) {\n          case 'finder':\n            _this4.createFinderWindow();\n            break;\n          case 'terminal':\n            _this4.createTerminalWindow();\n            break;\n          case 'portfolio':\n            _this4.createPortfolioWindow();\n            break;\n          case 'about':\n            _this4.createAboutWindow();\n            break;\n          case 'contact':\n            _this4.createContactWindow();\n            break;\n          case 'preferences':\n            _this4.createPreferencesWindow(data.initialPane);\n            break;\n          case 'browser':\n            _this4.createBrowserWindow(data.url);\n            break;\n          default:\n            console.warn('Unknown app:', data.appId);\n            break;\n        }\n      });\n    }\n\n    /**\n     * Create Finder window\n     */\n  }, {\n    key: \"createFinderWindow\",\n    value: function createFinderWindow() {\n      if (!this.windowManager) {\n        console.warn('WindowManager not initialized yet');\n        return;\n      }\n\n      // Check if Finder window already exists\n      var existingWindows = this.windowManager.getWindowsByApp('finder');\n      if (existingWindows.length > 0) {\n        var firstWindow = existingWindows[0];\n        if (firstWindow.isMinimized) {\n          firstWindow.restore();\n        } else {\n          this.windowManager.focusWindow(firstWindow.id);\n        }\n        return;\n      }\n\n      // Create finder instance and let it manage its own container\n      var finder = new _components_finder_Finder_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"]();\n      var window = this.windowManager.createWindow({\n        appId: 'finder',\n        title: 'Finder',\n        content: '',\n        // Empty initially, Finder will populate\n        size: {\n          width: 900,\n          height: 600\n        },\n        position: {\n          x: 100,\n          y: 80\n        },\n        minSize: {\n          width: 600,\n          height: 400\n        },\n        resizable: true\n      });\n      if (window) {\n        // Get the window content area and initialize Finder directly in it\n        var windowContent = window.contentArea;\n\n        // Initialize finder in the window content\n        finder.init(windowContent).then(function () {\n          console.log('Finder initialized in window');\n        });\n\n        // Show the window with animation\n        window.show();\n\n        // Store component reference\n        this.components.set(window.id, finder);\n      }\n    }\n\n    /**\n     * Create terminal window\n     */\n  }, {\n    key: \"createTerminalWindow\",\n    value: function createTerminalWindow() {\n      if (!this.windowManager) {\n        console.warn('WindowManager not initialized yet');\n        return;\n      }\n\n      // Check if terminal window already exists\n      var existingWindows = this.windowManager.getWindowsByApp('terminal');\n      if (existingWindows.length > 0) {\n        // Focus existing window instead of creating new one\n        var firstWindow = existingWindows[0];\n        if (firstWindow.isMinimized) {\n          firstWindow.restore();\n        } else {\n          this.windowManager.focusWindow(firstWindow.id);\n        }\n\n        // Also focus the terminal component to ensure cursor blinks\n        setTimeout(function () {\n          var terminalElement = firstWindow.contentElement.querySelector('.xterm-helper-textarea');\n          if (terminalElement) {\n            terminalElement.focus();\n          }\n        }, 100);\n        return;\n      }\n\n      // Create terminal container\n      var terminalContainer = document.createElement('div');\n      terminalContainer.className = 'terminal-container';\n      terminalContainer.style.cssText = \"\\n            width: 100%;\\n            height: 100%;\\n            background: #000000;\\n        \";\n\n      // Create terminal instance\n      var terminal = new _components_terminal_Terminal_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"](terminalContainer);\n      var window = this.windowManager.createWindow({\n        appId: 'terminal',\n        title: 'Terminal',\n        content: terminalContainer,\n        size: {\n          width: 800,\n          height: 500\n        },\n        position: {\n          x: 150,\n          y: 100\n        },\n        minSize: {\n          width: 400,\n          height: 300\n        }\n      });\n      if (window) {\n        window.show();\n\n        // Focus terminal to enable cursor blinking\n        setTimeout(function () {\n          terminal.focus();\n        }, 100);\n\n        // Resize terminal when window is resized\n        var originalSetSize = window.setSize.bind(window);\n        window.setSize = function (width, height) {\n          originalSetSize(width, height);\n          setTimeout(function () {\n            terminal.resize();\n          }, 100);\n        };\n        console.log('Terminal window created:', window.id);\n      }\n      return window;\n    }\n\n    /**\n     * Create portfolio window\n     */\n  }, {\n    key: \"createPortfolioWindow\",\n    value: function createPortfolioWindow() {\n      if (!this.windowManager) {\n        console.warn('WindowManager not initialized yet');\n        return;\n      }\n\n      // Check if portfolio window already exists\n      var existingWindows = this.windowManager.getWindowsByApp('portfolio');\n      if (existingWindows.length > 0) {\n        var firstWindow = existingWindows[0];\n        if (firstWindow.isMinimized) {\n          firstWindow.restore();\n        } else {\n          this.windowManager.focusWindow(firstWindow.id);\n        }\n        return;\n      }\n\n      // Create portfolio container\n      var portfolioContainer = document.createElement('div');\n      portfolioContainer.className = 'portfolio-container';\n      portfolioContainer.style.cssText = \"\\n            width: 100%;\\n            height: 100%;\\n            background: #f8fafc;\\n            overflow: hidden;\\n        \";\n\n      // Create portfolio instance\n      var portfolio = new _components_portfolio_Portfolio_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"](portfolioContainer);\n      var window = this.windowManager.createWindow({\n        appId: 'portfolio',\n        title: 'Portfolio - My Projects',\n        content: portfolioContainer,\n        size: {\n          width: 1200,\n          height: 800\n        },\n        position: {\n          x: 100,\n          y: 100\n        },\n        minSize: {\n          width: 800,\n          height: 600\n        },\n        resizable: true\n      });\n      if (window) {\n        window.show();\n\n        // Setup window-specific event handlers\n        window.onResize = function () {\n          // Portfolio component handles its own responsive layout\n          _components_EventBus_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].emit('portfolio:window-resized', {\n            windowId: window.id,\n            size: window.getSize()\n          });\n        };\n        window.onClose = function () {\n          // Cleanup portfolio component\n          if (portfolio && typeof portfolio.destroy === 'function') {\n            portfolio.destroy();\n          }\n        };\n      }\n      return window;\n    }\n\n    /**\n     * Create about window\n     */\n  }, {\n    key: \"createAboutWindow\",\n    value: function createAboutWindow() {\n      if (!this.windowManager) {\n        console.warn('WindowManager not initialized yet');\n        return;\n      }\n\n      // Check if about window already exists\n      var existingWindows = this.windowManager.getWindowsByApp('about');\n      if (existingWindows.length > 0) {\n        var firstWindow = existingWindows[0];\n        if (firstWindow.isMinimized) {\n          firstWindow.restore();\n        } else {\n          this.windowManager.focusWindow(firstWindow.id);\n        }\n        return;\n      }\n\n      // Create about container\n      var aboutContainer = document.createElement('div');\n      aboutContainer.className = 'about-container-wrapper';\n      aboutContainer.style.cssText = \"\\n            width: 100%;\\n            height: 100%;\\n            background: #ffffff;\\n            overflow: hidden;\\n        \";\n\n      // Create about instance\n      var about = new _components_about_About_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"](aboutContainer);\n      var window = this.windowManager.createWindow({\n        appId: 'about',\n        title: 'About Me',\n        content: aboutContainer,\n        size: {\n          width: 1000,\n          height: 700\n        },\n        position: {\n          x: 200,\n          y: 100\n        },\n        minSize: {\n          width: 800,\n          height: 600\n        },\n        resizable: true\n      });\n      if (window) {\n        window.show();\n\n        // Setup window-specific event handlers\n        window.onResize = function () {\n          _components_EventBus_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].emit('about:window-resized', {\n            windowId: window.id,\n            size: window.getSize()\n          });\n        };\n        window.onClose = function () {\n          // Cleanup about component\n          if (about && typeof about.destroy === 'function') {\n            about.destroy();\n          }\n        };\n        console.log('About window created:', window.id);\n      }\n      return window;\n    }\n\n    /**\n     * Create browser window\n     */\n  }, {\n    key: \"createBrowserWindow\",\n    value: function createBrowserWindow() {\n      var _this5 = this;\n      var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (!this.windowManager) {\n        console.warn('WindowManager not initialized yet');\n        return;\n      }\n      console.log('üåê Creating browser window with URL:', url);\n\n      // Create browser instance\n      var browser = new _components_browser_Browser_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"]();\n      var window = this.windowManager.createWindow({\n        appId: 'browser',\n        title: 'Safari',\n        content: '',\n        // Empty initially, Browser will populate\n        size: {\n          width: 1000,\n          height: 700\n        },\n        position: {\n          x: 120,\n          y: 60\n        },\n        minSize: {\n          width: 600,\n          height: 400\n        },\n        resizable: true\n      });\n      if (window) {\n        // Get the window content area and initialize Browser directly in it\n        var windowContent = window.contentArea;\n\n        // Initialize browser in the window content\n        browser.init(windowContent).then(function () {\n          console.log('üåê Browser initialized in window');\n\n          // Navigate to URL if provided\n          if (url) {\n            browser.navigateTo(url);\n          }\n        });\n\n        // Show the window with animation\n        window.show();\n\n        // Store component reference\n        this.components.set(window.id, browser);\n\n        // Cleanup on window close\n        window.onClose = function () {\n          if (browser && typeof browser.destroy === 'function') {\n            browser.destroy();\n          }\n          _this5.components[\"delete\"](window.id);\n        };\n        console.log('üåê Browser window created:', window.id);\n      }\n      return window;\n    }\n\n    /**\n     * Create contact window\n     */\n  }, {\n    key: \"createContactWindow\",\n    value: function createContactWindow() {\n      if (!this.windowManager) {\n        console.warn('WindowManager not initialized yet');\n        return;\n      }\n\n      // Check if contact window already exists\n      var existingWindows = this.windowManager.getWindowsByApp('contact');\n      if (existingWindows.length > 0) {\n        var firstWindow = existingWindows[0];\n        if (firstWindow.isMinimized) {\n          firstWindow.restore();\n        } else {\n          this.windowManager.focusWindow(firstWindow.id);\n        }\n        return;\n      }\n\n      // Create contact container\n      var contactContainer = document.createElement('div');\n      contactContainer.className = 'contact-container-wrapper';\n      contactContainer.style.cssText = \"\\n            width: 100%;\\n            height: 100%;\\n            background: #ffffff;\\n            overflow: hidden;\\n        \";\n\n      // Create contact instance\n      var contact = new _components_contact_Contact_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"](contactContainer);\n      var window = this.windowManager.createWindow({\n        appId: 'contact',\n        title: 'Contact Me',\n        content: contactContainer,\n        size: {\n          width: 1000,\n          height: 700\n        },\n        position: {\n          x: 250,\n          y: 100\n        },\n        minSize: {\n          width: 800,\n          height: 600\n        },\n        resizable: true\n      });\n      if (window) {\n        window.show();\n\n        // Setup window-specific event handlers\n        window.onResize = function () {\n          _components_EventBus_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].emit('contact:window-resized', {\n            windowId: window.id,\n            size: window.getSize()\n          });\n        };\n        window.onClose = function () {\n          // Cleanup contact component\n          if (contact && typeof contact.destroy === 'function') {\n            contact.destroy();\n          }\n        };\n        console.log('Contact window created:', window.id);\n      }\n      return window;\n    }\n\n    /**\n     * Create preferences window\n     */\n  }, {\n    key: \"createPreferencesWindow\",\n    value: function () {\n      var _createPreferencesWindow = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee4() {\n        var initialPane,\n          existingWindows,\n          firstWindow,\n          _yield$import,\n          Preferences,\n          preferences,\n          container,\n          _window,\n          windowContent,\n          _window$element,\n          altContent,\n          fallbackWindow,\n          _args4 = arguments;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              initialPane = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : 'appearance';\n              console.log('üîß Creating Preferences window with initial pane:', initialPane);\n\n              // Check if preferences window already exists\n              existingWindows = this.windowManager.getWindowsByApp('preferences');\n              if (!(existingWindows.length > 0)) {\n                _context4.next = 9;\n                break;\n              }\n              console.log('Preferences window already exists, focusing and switching pane...');\n              firstWindow = existingWindows[0];\n              if (firstWindow.isMinimized) {\n                firstWindow.restore();\n              } else {\n                this.windowManager.focusWindow(firstWindow.id);\n              }\n\n              // Switch to requested pane if component instance exists\n              if (firstWindow.componentInstance && firstWindow.componentInstance.switchTab) {\n                firstWindow.componentInstance.switchTab(initialPane);\n              }\n              return _context4.abrupt(\"return\");\n            case 9:\n              _context4.prev = 9;\n              console.log('Importing Preferences component...');\n              // Import Preferences component\n              _context4.next = 13;\n              return __webpack_require__.e(/*! import() */ \"resources_js_components_preferences_Preferences_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./components/preferences/Preferences.js */ 154));\n            case 13:\n              _yield$import = _context4.sent;\n              Preferences = _yield$import[\"default\"];\n              console.log('Creating Preferences instance...');\n              // Create instance and initialize\n              preferences = new Preferences();\n              _context4.next = 19;\n              return preferences.init();\n            case 19:\n              container = _context4.sent;\n              console.log('Preferences container created:', container);\n\n              // Create window\n              _window = this.windowManager.createWindow({\n                appId: 'preferences',\n                title: 'System Preferences',\n                content: '',\n                size: {\n                  width: 800,\n                  height: 600\n                },\n                position: {\n                  x: 150,\n                  y: 80\n                },\n                minSize: {\n                  width: 600,\n                  height: 400\n                }\n              });\n              console.log('Window created:', _window);\n\n              // Wait for next frame to ensure window is in DOM\n              _context4.next = 25;\n              return new Promise(function (resolve) {\n                return requestAnimationFrame(resolve);\n              });\n            case 25:\n              // Add preferences component to window\n              windowContent = document.querySelector(\"[data-window-id=\\\"\".concat(_window.id, \"\\\"] .window-content\"));\n              if (!windowContent) {\n                _context4.next = 37;\n                break;\n              }\n              console.log('Adding container to window content...');\n              windowContent.appendChild(container);\n\n              // Store component instance for cleanup\n              _window.componentInstance = preferences;\n              console.log('‚úÖ Preferences component added to window');\n\n              // Switch to initial pane AFTER component is in DOM\n              if (!(initialPane && preferences.switchTab)) {\n                _context4.next = 35;\n                break;\n              }\n              _context4.next = 34;\n              return new Promise(function (resolve) {\n                return requestAnimationFrame(resolve);\n              });\n            case 34:\n              preferences.switchTab(initialPane);\n            case 35:\n              _context4.next = 51;\n              break;\n            case 37:\n              console.error('Window content not found for window:', _window.id);\n              // Try alternative selector\n              altContent = (_window$element = _window.element) === null || _window$element === void 0 ? void 0 : _window$element.querySelector('.window-content');\n              if (!altContent) {\n                _context4.next = 50;\n                break;\n              }\n              console.log('Found window content via window.element, adding container...');\n              altContent.appendChild(container);\n              _window.componentInstance = preferences;\n              console.log('‚úÖ Preferences component added via alternative method');\n\n              // Switch to initial pane AFTER component is in DOM\n              if (!(initialPane && preferences.switchTab)) {\n                _context4.next = 48;\n                break;\n              }\n              _context4.next = 47;\n              return new Promise(function (resolve) {\n                return requestAnimationFrame(resolve);\n              });\n            case 47:\n              preferences.switchTab(initialPane);\n            case 48:\n              _context4.next = 51;\n              break;\n            case 50:\n              console.error('Could not find window content element at all!');\n            case 51:\n              // Show the window\n              if (_window && _window.show) {\n                _window.show();\n                console.log('‚úÖ Preferences window shown');\n              }\n\n              // Listen for window close to cleanup\n              _components_EventBus_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].on('window:closed', function (data) {\n                if (data.windowId === _window.id && _window.componentInstance) {\n                  _window.componentInstance.destroy();\n                }\n              });\n              console.log('Preferences window created:', _window.id);\n              return _context4.abrupt(\"return\", _window);\n            case 57:\n              _context4.prev = 57;\n              _context4.t0 = _context4[\"catch\"](9);\n              console.error('Failed to create preferences window:', _context4.t0);\n\n              // Fallback UI\n              fallbackWindow = this.windowManager.createWindow({\n                appId: 'preferences',\n                title: 'System Preferences',\n                content: \"\\n                    <div style=\\\"padding: 2rem; text-align: center; color: #86868b;\\\">\\n                        <h2>Failed to Load Preferences</h2>\\n                        <p>Please refresh the page and try again.</p>\\n                        <pre style=\\\"margin-top: 1rem; text-align: left; font-size: 12px; color: #ff3b30;\\\">\".concat(_context4.t0.message, \"</pre>\\n                    </div>\\n                \"),\n                size: {\n                  width: 500,\n                  height: 300\n                },\n                position: {\n                  x: 200,\n                  y: 150\n                }\n              });\n              if (fallbackWindow) {\n                fallbackWindow.show();\n              }\n              return _context4.abrupt(\"return\", fallbackWindow);\n            case 63:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[9, 57]]);\n      }));\n      function createPreferencesWindow() {\n        return _createPreferencesWindow.apply(this, arguments);\n      }\n      return createPreferencesWindow;\n    }()\n    /**\n     * Create a test window for debugging\n     */\n  }, {\n    key: \"createTestWindow\",\n    value: function createTestWindow() {\n      if (!this.windowManager) {\n        console.warn('WindowManager not initialized yet');\n        return;\n      }\n      var testContent = \"\\n            <div style=\\\"padding: 2rem; font-family: -apple-system, BlinkMacSystemFont, sans-serif;\\\">\\n                <h2 style=\\\"margin-top: 0; color: #1d1d1f;\\\">Test Window</h2>\\n                <p style=\\\"color: #86868b; line-height: 1.6;\\\">\\n                    This is a test window to demonstrate the LinkOS window system. \\n                    You can drag it around, resize it using the handles, and interact with the traffic light buttons.\\n                </p>\\n                <div style=\\\"margin: 1.5rem 0;\\\">\\n                    <button onclick=\\\"alert('Button clicked!')\\\" style=\\\"\\n                        background: #007AFF;\\n                        color: white;\\n                        border: none;\\n                        padding: 8px 16px;\\n                        border-radius: 6px;\\n                        cursor: pointer;\\n                        margin-right: 8px;\\n                    \\\">Test Button</button>\\n                    \\n                    <button onclick=\\\"this.closest('.LinkOS-window').style.background = 'rgba(255,100,100,0.9)'\\\" style=\\\"\\n                        background: #ff3b30;\\n                        color: white;\\n                        border: none;\\n                        padding: 8px 16px;\\n                        border-radius: 6px;\\n                        cursor: pointer;\\n                    \\\">Change Color</button>\\n                </div>\\n                <div style=\\\"\\n                    background: rgba(0, 122, 255, 0.1);\\n                    padding: 1rem;\\n                    border-radius: 8px;\\n                    border-left: 4px solid #007AFF;\\n                    margin-top: 1.5rem;\\n                \\\">\\n                    <strong>Keyboard Shortcuts:</strong><br>\\n                    \\u2022 <kbd>\\u2318M</kbd> - Minimize<br>\\n                    \\u2022 <kbd>\\u2318W</kbd> - Close<br>\\n                    \\u2022 <kbd>\\u2318Tab</kbd> - Cycle windows\\n                </div>\\n            </div>\\n        \";\n      var window = this.windowManager.createWindow({\n        appId: 'test-app',\n        title: 'Test Window',\n        content: testContent,\n        size: {\n          width: 500,\n          height: 400\n        },\n        position: {\n          x: 200,\n          y: 150\n        }\n      });\n      if (window) {\n        window.show();\n        console.log('Test window created:', window.id);\n      }\n      return window;\n    }\n\n    /**\n     * Open file viewer window\n     */\n  }, {\n    key: \"openFileViewer\",\n    value: function openFileViewer(data) {\n      if (!this.windowManager) {\n        console.warn('WindowManager not initialized yet');\n        return;\n      }\n      var name = data.name,\n        content = data.content,\n        path = data.path,\n        size = data.size,\n        modified = data.modified,\n        type = data.type;\n\n      // If PDF, check browser and decide whether to open externally or in iframe\n      if (type === 'pdf') {\n        // Build a safe URL relative to public/documents\n        var safeName = encodeURIComponent(name);\n        var pdfUrl = \"/documents/\".concat(safeName);\n\n        // Detect Firefox (use iframe for Firefox, external for all others)\n        var isFirefox = /Firefox/i.test(navigator.userAgent);\n        console.log('üìÑ PDF open requested - Browser:', isFirefox ? 'Firefox' : 'Non-Firefox');\n\n        // Open PDFs externally in non-Firefox browsers for better native support\n        if (!isFirefox) {\n          console.log('üìÑ Attempting to open PDF externally...');\n          try {\n            var fullUrl = \"\".concat(location.origin).concat(pdfUrl);\n            // Use globalThis.open or self.open as fallback if window is not available\n            var openWindow = globalThis.open || self.open || window.open;\n            var newWindow = openWindow(fullUrl, '_blank', 'noopener,noreferrer');\n            console.log('üìÑ PDF opened externally (non-Firefox browser):', fullUrl);\n            return; // CRITICAL: Stop here, don't create iframe\n          } catch (error) {\n            console.warn('Failed to open PDF externally, falling back to iframe:', error);\n            // Fall through to iframe viewer\n          }\n        }\n        console.log('üìÑ Using iframe viewer for PDF');\n\n        // For Firefox, use iframe viewer\n        var iframeContent = \"\\n                <div style=\\\"display:flex;flex-direction:column;height:100%;background:var(--bg-primary)\\\">\\n                    <div style=\\\"padding:12px 16px;border-bottom:1px solid var(--border-light);background:var(--bg-secondary);flex-shrink:0;display:flex;align-items:center;justify-content:space-between\\\">\\n                        <div>\\n                            <div style=\\\"font-weight:600;font-size:13px;\\\">\".concat(this.escapeHtml(name), \"</div>\\n                            <div style=\\\"font-size:11px;color:var(--text-tertiary);margin-top:2px;\\\">\").concat(this.escapeHtml(path), \" \\u2022 \").concat(this.formatFileSize(size), \" \\u2022 Modified: \").concat(this.escapeHtml(modified), \"</div>\\n                        </div>\\n                    </div>\\n                    <div style=\\\"flex:1;overflow:hidden;display:flex;\\\">\\n                        <iframe src=\\\"\").concat(pdfUrl, \"\\\" style=\\\"border:0;width:100%;height:100%;\\\" sandbox=\\\"allow-scripts allow-same-origin allow-forms\\\"></iframe>\\n                    </div>\\n                </div>\\n            \");\n        var win = this.windowManager.createWindow({\n          appId: 'file-viewer',\n          title: \"PDF \\u2014 \".concat(name),\n          content: iframeContent,\n          size: {\n            width: 900,\n            height: 700\n          },\n          position: {\n            x: 120,\n            y: 80\n          },\n          minSize: {\n            width: 480,\n            height: 320\n          }\n        });\n        if (win) {\n          win.show();\n          console.log('üìÑ PDF viewer opened in iframe:', pdfUrl);\n        }\n        return;\n      }\n\n      // Fallback: plain text/file viewer for other file types\n      var fileContent = \"\\n            <div style=\\\"\\n                display: flex;\\n                flex-direction: column;\\n                height: 100%;\\n                background: var(--bg-primary);\\n                color: var(--text-primary);\\n                font-family: var(--font-family-system);\\n            \\\">\\n                <div style=\\\"\\n                    padding: 12px 16px;\\n                    border-bottom: 1px solid var(--border-light);\\n                    background: var(--bg-secondary);\\n                    display: flex;\\n                    justify-content: space-between;\\n                    align-items: center;\\n                    flex-shrink: 0;\\n                \\\">\\n                    <div>\\n                        <div style=\\\"font-weight: 600; font-size: 13px;\\\">\".concat(this.escapeHtml(name), \"</div>\\n                        <div style=\\\"font-size: 11px; color: var(--text-tertiary); margin-top: 2px;\\\">\\n                            \").concat(this.escapeHtml(path), \" \\u2022 \").concat(this.formatFileSize(size), \" \\u2022 Modified: \").concat(this.escapeHtml(modified), \"\\n                        </div>\\n                    </div>\\n                </div>\\n                <div style=\\\"\\n                    flex: 1;\\n                    overflow: auto;\\n                    padding: 16px;\\n                    font-family: var(--font-family-mono);\\n                    font-size: 12px;\\n                    line-height: 1.6;\\n                    white-space: pre-wrap;\\n                    word-break: break-word;\\n                    user-select: text;\\n                    -webkit-user-select: text;\\n                    cursor: text;\\n                \\\">\").concat(this.escapeHtml(content || 'Empty file'), \"</div>\\n            </div>\\n        \");\n      var window = this.windowManager.createWindow({\n        appId: 'file-viewer',\n        title: \"\\uD83D\\uDCC4 \".concat(name),\n        content: fileContent,\n        size: {\n          width: 700,\n          height: 500\n        },\n        position: {\n          x: 150,\n          y: 100\n        },\n        minSize: {\n          width: 400,\n          height: 300\n        }\n      });\n      if (window) {\n        window.show();\n        console.log('üìÑ File viewer opened:', name);\n      }\n    }\n\n    /**\n     * Format file size\n     */\n  }, {\n    key: \"formatFileSize\",\n    value: function formatFileSize(bytes) {\n      if (!bytes) return '0 B';\n      if (bytes < 1024) return bytes + ' B';\n      if (bytes < 1024 * 1024) return Math.round(bytes / 1024) + ' KB';\n      return (bytes / (1024 * 1024)).toFixed(1) + ' MB';\n    }\n\n    /**\n     * Escape HTML to prevent XSS\n     */\n  }, {\n    key: \"escapeHtml\",\n    value: function escapeHtml(text) {\n      var div = document.createElement('div');\n      div.textContent = text;\n      return div.innerHTML;\n    }\n\n    /**\n     * Get application status\n     */\n  }, {\n    key: \"getStatus\",\n    value: function getStatus() {\n      return {\n        initialized: this.isInitialized,\n        components: Array.from(this.components.keys()),\n        eventBusActive: !!window.EventBus,\n        activeEvents: window.EventBus ? window.EventBus.getActiveEvents() : {}\n      };\n    }\n  }]);\n}(); // Initialize app when script loads\nvar app = new App();\n\n// Make app globally available for debugging\nwindow.AbdulmeApp = app;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (App);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5495\n");

/***/ }),

/***/ 947:
/*!*********************************************!*\
  !*** ./resources/js/components/EventBus.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n\n\n/**\n * EventBus - Global event system for component communication\n * Provides publish/subscribe pattern for decoupled architecture\n */\nvar EventBus = /*#__PURE__*/function () {\n  function EventBus() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, EventBus);\n    this.events = new Map();\n    this.debugMode = window.location.search.includes('debug=true');\n  }\n\n  /**\n   * Subscribe to an event\n   * @param {string} event Event name\n   * @param {Function} callback Event handler\n   * @param {Object} options Subscription options\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(EventBus, [{\n    key: \"on\",\n    value: function on(event, callback) {\n      var _this = this;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (typeof callback !== 'function') {\n        console.error(\"EventBus: Invalid callback for event \\\"\".concat(event, \"\\\"\"));\n        return function () {};\n      }\n      if (!this.events.has(event)) {\n        this.events.set(event, new Set());\n      }\n      var listener = {\n        callback: callback,\n        once: options.once || false,\n        priority: options.priority || 0,\n        id: Symbol('listener')\n      };\n      this.events.get(event).add(listener);\n      if (this.debugMode) {\n        console.log(\"EventBus: Subscribed to \\\"\".concat(event, \"\\\"\"), {\n          options: options,\n          listenerId: listener.id\n        });\n      }\n\n      // Return unsubscribe function\n      return function () {\n        return _this.off(event, listener.id);\n      };\n    }\n\n    /**\n     * Subscribe to event once\n     * @param {string} event Event name\n     * @param {Function} callback Event handler\n     */\n  }, {\n    key: \"once\",\n    value: function once(event, callback) {\n      return this.on(event, callback, {\n        once: true\n      });\n    }\n\n    /**\n     * Unsubscribe from event\n     * @param {string} event Event name\n     * @param {Symbol} listenerId Listener ID\n     */\n  }, {\n    key: \"off\",\n    value: function off(event, listenerId) {\n      if (!this.events.has(event)) return;\n      var listeners = this.events.get(event);\n      var listener = Array.from(listeners).find(function (l) {\n        return l.id === listenerId;\n      });\n      if (listener) {\n        listeners[\"delete\"](listener);\n        if (this.debugMode) {\n          console.log(\"EventBus: Unsubscribed from \\\"\".concat(event, \"\\\"\"), {\n            listenerId: listenerId\n          });\n        }\n\n        // Clean up empty event sets\n        if (listeners.size === 0) {\n          this.events[\"delete\"](event);\n        }\n      }\n    }\n\n    /**\n     * Emit event to all subscribers\n     * @param {string} event Event name\n     * @param {*} data Event data\n     */\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      var _this2 = this;\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      if (!this.events.has(event)) {\n        if (this.debugMode) {\n          console.log(\"EventBus: No listeners for \\\"\".concat(event, \"\\\"\"));\n        }\n        return;\n      }\n      var listeners = Array.from(this.events.get(event)).sort(function (a, b) {\n        return b.priority - a.priority;\n      }); // Higher priority first\n\n      if (this.debugMode) {\n        console.log(\"EventBus: Emitting \\\"\".concat(event, \"\\\"\"), {\n          data: data,\n          listenerCount: listeners.length\n        });\n      }\n      listeners.forEach(function (listener) {\n        try {\n          listener.callback(data, event);\n\n          // Remove one-time listeners\n          if (listener.once) {\n            _this2.events.get(event)[\"delete\"](listener);\n          }\n        } catch (error) {\n          console.error(\"EventBus: Error in listener for \\\"\".concat(event, \"\\\":\"), error);\n        }\n      });\n\n      // Clean up empty event sets\n      if (this.events.get(event).size === 0) {\n        this.events[\"delete\"](event);\n      }\n    }\n\n    /**\n     * Get all active event subscriptions\n     * @returns {Object} Event subscription summary\n     */\n  }, {\n    key: \"getActiveEvents\",\n    value: function getActiveEvents() {\n      var summary = {};\n      this.events.forEach(function (listeners, event) {\n        summary[event] = listeners.size;\n      });\n      return summary;\n    }\n\n    /**\n     * Clear all event subscriptions\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.events.clear();\n      if (this.debugMode) {\n        console.log('EventBus: Cleared all subscriptions');\n      }\n    }\n\n    /**\n     * Enable/disable debug mode\n     * @param {boolean} enabled Debug mode state\n     */\n  }, {\n    key: \"setDebugMode\",\n    value: function setDebugMode(enabled) {\n      this.debugMode = enabled;\n    }\n  }]);\n}(); // Global instance\nwindow.EventBus = new EventBus();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (window.EventBus);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QSxFQUdBLFNBQUF5QyxNQUFBLEVBQVE7TUFDSixJQUFJLENBQUNsRCxNQUFNLENBQUNrRCxLQUFLLENBQUMsQ0FBQztNQUVuQixJQUFJLElBQUksQ0FBQ2hELFNBQVMsRUFBRTtRQUNoQmdCLE9BQU8sQ0FBQ2EsR0FBRyxDQUFDLHFDQUFxQyxDQUFDO01BQ3REO0lBQ0o7O0lBRUE7QUFDSjtBQUNBO0FBQ0E7RUFISTtJQUFBdkIsR0FBQTtJQUFBQyxLQUFBLEVBSUEsU0FBQTBDLGFBQWFDLE9BQU8sRUFBRTtNQUNsQixJQUFJLENBQUNsRCxTQUFTLEdBQUdrRCxPQUFPO0lBQzVCO0VBQUM7QUFBQSxLQUdMO0FBQ0FqRCxNQUFNLENBQUNMLFFBQVEsR0FBRyxJQUFJQSxRQUFRLENBQUMsQ0FBQztBQUVoQyxpRUFBZUssTUFBTSxDQUFDTCxRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvRXZlbnRCdXMuanM/ZTQ5NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV2ZW50QnVzIC0gR2xvYmFsIGV2ZW50IHN5c3RlbSBmb3IgY29tcG9uZW50IGNvbW11bmljYXRpb25cbiAqIFByb3ZpZGVzIHB1Ymxpc2gvc3Vic2NyaWJlIHBhdHRlcm4gZm9yIGRlY291cGxlZCBhcmNoaXRlY3R1cmVcbiAqL1xuY2xhc3MgRXZlbnRCdXMge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmV2ZW50cyA9IG5ldyBNYXAoKTtcbiAgICAgICAgdGhpcy5kZWJ1Z01vZGUgPSB3aW5kb3cubG9jYXRpb24uc2VhcmNoLmluY2x1ZGVzKCdkZWJ1Zz10cnVlJyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU3Vic2NyaWJlIHRvIGFuIGV2ZW50XG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50IEV2ZW50IG5hbWVcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBFdmVudCBoYW5kbGVyXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgU3Vic2NyaXB0aW9uIG9wdGlvbnNcbiAgICAgKi9cbiAgICBvbihldmVudCwgY2FsbGJhY2ssIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBpZiAodHlwZW9mIGNhbGxiYWNrICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGBFdmVudEJ1czogSW52YWxpZCBjYWxsYmFjayBmb3IgZXZlbnQgXCIke2V2ZW50fVwiYCk7XG4gICAgICAgICAgICByZXR1cm4gKCkgPT4ge307XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIXRoaXMuZXZlbnRzLmhhcyhldmVudCkpIHtcbiAgICAgICAgICAgIHRoaXMuZXZlbnRzLnNldChldmVudCwgbmV3IFNldCgpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGxpc3RlbmVyID0ge1xuICAgICAgICAgICAgY2FsbGJhY2ssXG4gICAgICAgICAgICBvbmNlOiBvcHRpb25zLm9uY2UgfHwgZmFsc2UsXG4gICAgICAgICAgICBwcmlvcml0eTogb3B0aW9ucy5wcmlvcml0eSB8fCAwLFxuICAgICAgICAgICAgaWQ6IFN5bWJvbCgnbGlzdGVuZXInKVxuICAgICAgICB9O1xuXG4gICAgICAgIHRoaXMuZXZlbnRzLmdldChldmVudCkuYWRkKGxpc3RlbmVyKTtcblxuICAgICAgICBpZiAodGhpcy5kZWJ1Z01vZGUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBFdmVudEJ1czogU3Vic2NyaWJlZCB0byBcIiR7ZXZlbnR9XCJgLCB7IG9wdGlvbnMsIGxpc3RlbmVySWQ6IGxpc3RlbmVyLmlkIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gUmV0dXJuIHVuc3Vic2NyaWJlIGZ1bmN0aW9uXG4gICAgICAgIHJldHVybiAoKSA9PiB0aGlzLm9mZihldmVudCwgbGlzdGVuZXIuaWQpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFN1YnNjcmliZSB0byBldmVudCBvbmNlXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50IEV2ZW50IG5hbWVcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBFdmVudCBoYW5kbGVyXG4gICAgICovXG4gICAgb25jZShldmVudCwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub24oZXZlbnQsIGNhbGxiYWNrLCB7IG9uY2U6IHRydWUgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVW5zdWJzY3JpYmUgZnJvbSBldmVudFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudCBFdmVudCBuYW1lXG4gICAgICogQHBhcmFtIHtTeW1ib2x9IGxpc3RlbmVySWQgTGlzdGVuZXIgSURcbiAgICAgKi9cbiAgICBvZmYoZXZlbnQsIGxpc3RlbmVySWQpIHtcbiAgICAgICAgaWYgKCF0aGlzLmV2ZW50cy5oYXMoZXZlbnQpKSByZXR1cm47XG5cbiAgICAgICAgY29uc3QgbGlzdGVuZXJzID0gdGhpcy5ldmVudHMuZ2V0KGV2ZW50KTtcbiAgICAgICAgY29uc3QgbGlzdGVuZXIgPSBBcnJheS5mcm9tKGxpc3RlbmVycykuZmluZChsID0+IGwuaWQgPT09IGxpc3RlbmVySWQpO1xuICAgICAgICBcbiAgICAgICAgaWYgKGxpc3RlbmVyKSB7XG4gICAgICAgICAgICBsaXN0ZW5lcnMuZGVsZXRlKGxpc3RlbmVyKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKHRoaXMuZGVidWdNb2RlKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coYEV2ZW50QnVzOiBVbnN1YnNjcmliZWQgZnJvbSBcIiR7ZXZlbnR9XCJgLCB7IGxpc3RlbmVySWQgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIENsZWFuIHVwIGVtcHR5IGV2ZW50IHNldHNcbiAgICAgICAgICAgIGlmIChsaXN0ZW5lcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRzLmRlbGV0ZShldmVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBFbWl0IGV2ZW50IHRvIGFsbCBzdWJzY3JpYmVyc1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudCBFdmVudCBuYW1lXG4gICAgICogQHBhcmFtIHsqfSBkYXRhIEV2ZW50IGRhdGFcbiAgICAgKi9cbiAgICBlbWl0KGV2ZW50LCBkYXRhID0gbnVsbCkge1xuICAgICAgICBpZiAoIXRoaXMuZXZlbnRzLmhhcyhldmVudCkpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmRlYnVnTW9kZSkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGBFdmVudEJ1czogTm8gbGlzdGVuZXJzIGZvciBcIiR7ZXZlbnR9XCJgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGxpc3RlbmVycyA9IEFycmF5LmZyb20odGhpcy5ldmVudHMuZ2V0KGV2ZW50KSlcbiAgICAgICAgICAgIC5zb3J0KChhLCBiKSA9PiBiLnByaW9yaXR5IC0gYS5wcmlvcml0eSk7IC8vIEhpZ2hlciBwcmlvcml0eSBmaXJzdFxuXG4gICAgICAgIGlmICh0aGlzLmRlYnVnTW9kZSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coYEV2ZW50QnVzOiBFbWl0dGluZyBcIiR7ZXZlbnR9XCJgLCB7IGRhdGEsIGxpc3RlbmVyQ291bnQ6IGxpc3RlbmVycy5sZW5ndGggfSk7XG4gICAgICAgIH1cblxuICAgICAgICBsaXN0ZW5lcnMuZm9yRWFjaChsaXN0ZW5lciA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyLmNhbGxiYWNrKGRhdGEsIGV2ZW50KTtcblxuICAgICAgICAgICAgICAgIC8vIFJlbW92ZSBvbmUtdGltZSBsaXN0ZW5lcnNcbiAgICAgICAgICAgICAgICBpZiAobGlzdGVuZXIub25jZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmV2ZW50cy5nZXQoZXZlbnQpLmRlbGV0ZShsaXN0ZW5lcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGBFdmVudEJ1czogRXJyb3IgaW4gbGlzdGVuZXIgZm9yIFwiJHtldmVudH1cIjpgLCBlcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIENsZWFuIHVwIGVtcHR5IGV2ZW50IHNldHNcbiAgICAgICAgaWYgKHRoaXMuZXZlbnRzLmdldChldmVudCkuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgdGhpcy5ldmVudHMuZGVsZXRlKGV2ZW50KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldCBhbGwgYWN0aXZlIGV2ZW50IHN1YnNjcmlwdGlvbnNcbiAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSBFdmVudCBzdWJzY3JpcHRpb24gc3VtbWFyeVxuICAgICAqL1xuICAgIGdldEFjdGl2ZUV2ZW50cygpIHtcbiAgICAgICAgY29uc3Qgc3VtbWFyeSA9IHt9O1xuICAgICAgICBcbiAgICAgICAgdGhpcy5ldmVudHMuZm9yRWFjaCgobGlzdGVuZXJzLCBldmVudCkgPT4ge1xuICAgICAgICAgICAgc3VtbWFyeVtldmVudF0gPSBsaXN0ZW5lcnMuc2l6ZTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIHN1bW1hcnk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2xlYXIgYWxsIGV2ZW50IHN1YnNjcmlwdGlvbnNcbiAgICAgKi9cbiAgICBjbGVhcigpIHtcbiAgICAgICAgdGhpcy5ldmVudHMuY2xlYXIoKTtcbiAgICAgICAgXG4gICAgICAgIGlmICh0aGlzLmRlYnVnTW9kZSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ0V2ZW50QnVzOiBDbGVhcmVkIGFsbCBzdWJzY3JpcHRpb25zJyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBFbmFibGUvZGlzYWJsZSBkZWJ1ZyBtb2RlXG4gICAgICogQHBhcmFtIHtib29sZWFufSBlbmFibGVkIERlYnVnIG1vZGUgc3RhdGVcbiAgICAgKi9cbiAgICBzZXREZWJ1Z01vZGUoZW5hYmxlZCkge1xuICAgICAgICB0aGlzLmRlYnVnTW9kZSA9IGVuYWJsZWQ7XG4gICAgfVxufVxuXG4vLyBHbG9iYWwgaW5zdGFuY2VcbndpbmRvdy5FdmVudEJ1cyA9IG5ldyBFdmVudEJ1cygpO1xuXG5leHBvcnQgZGVmYXVsdCB3aW5kb3cuRXZlbnRCdXM7Il0sIm5hbWVzIjpbIkV2ZW50QnVzIiwiX2NsYXNzQ2FsbENoZWNrIiwiZXZlbnRzIiwiTWFwIiwiZGVidWdNb2RlIiwid2luZG93IiwibG9jYXRpb24iLCJzZWFyY2giLCJpbmNsdWRlcyIsIl9jcmVhdGVDbGFzcyIsImtleSIsInZhbHVlIiwib24iLCJldmVudCIsImNhbGxiYWNrIiwiX3RoaXMiLCJvcHRpb25zIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiY29uc29sZSIsImVycm9yIiwiY29uY2F0IiwiaGFzIiwic2V0IiwiU2V0IiwibGlzdGVuZXIiLCJvbmNlIiwicHJpb3JpdHkiLCJpZCIsIlN5bWJvbCIsImdldCIsImFkZCIsImxvZyIsImxpc3RlbmVySWQiLCJvZmYiLCJsaXN0ZW5lcnMiLCJBcnJheSIsImZyb20iLCJmaW5kIiwibCIsInNpemUiLCJlbWl0IiwiX3RoaXMyIiwiZGF0YSIsInNvcnQiLCJhIiwiYiIsImxpc3RlbmVyQ291bnQiLCJmb3JFYWNoIiwiZ2V0QWN0aXZlRXZlbnRzIiwic3VtbWFyeSIsImNsZWFyIiwic2V0RGVidWdNb2RlIiwiZW5hYmxlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///947\n");

/***/ }),

/***/ 3352:
/*!***************************************************!*\
  !*** ./resources/js/components/LinkOS/Desktop.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 4467);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _EventBus_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../EventBus.js */ 947);\n/* harmony import */ var _config_ColorConstants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../config/ColorConstants.js */ 4923);\n\n\n\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n\n\n\n\n/**\n * Desktop - LinkOS desktop experience with embedded boot animation and wallpaper system\n * Handles embedded boot sequence (via Blade), wallpaper management, icons, and context menu\n * Smart boot logic: 4-5s static on first visit, 1s quick on return visits\n */\nvar Desktop = /*#__PURE__*/function () {\n  function Desktop() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, Desktop);\n    this.container = null;\n    this.bootOverlay = null;\n    this.wallpaperContainer = null;\n    this.iconsContainer = null;\n    this.contextMenu = null;\n\n    // State\n    this.isBooting = true; // Start with boot screen\n    this.currentWallpaper = null;\n    this.wallpapers = [];\n    this.desktopApps = [];\n    this.loadedAssets = new Set();\n    this.preferences = {};\n    this.sessionData = null;\n    this.rotationTimer = null;\n    this.wallpaperCache = new Map();\n    this.progressiveLoading = true;\n    this.bootScreen = null;\n    this.lastWallpaperChange = null; // Debounce wallpaper changes\n\n    // Configuration\n    this.config = {\n      bootDuration: 4000,\n      wallpaperTransitionDuration: 1000,\n      rotationInterval: 30 * 60 * 1000,\n      // 30 minutes\n      maxCacheSize: 100 * 1024 * 1024,\n      // 100MB\n      iconGridSize: 80,\n      performanceMode: this.detectPerformanceMode()\n    };\n    this.init();\n  }\n\n  /**\n   * Initialize desktop component\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Desktop, [{\n    key: \"init\",\n    value: function () {\n      var _init = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee() {\n        var _this = this;\n        var bootOverlay;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                this.createElements();\n                this.bindEvents();\n\n                // Listen for boot completion from embedded boot screen\n                window.addEventListener('boot-complete', function () {\n                  _this.initializeAfterBoot();\n                });\n\n                // If no embedded boot screen is shown, initialize immediately\n                bootOverlay = document.getElementById('boot-screen-overlay');\n                if (!bootOverlay) {\n                  this.initializeAfterBoot();\n                }\n              } catch (error) {\n                console.error('Desktop: Initialization failed:', error);\n                this.showErrorState(error);\n              }\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n    /**\n     * Initialize desktop after boot sequence completes\n     */\n  }, {\n    key: \"initializeAfterBoot\",\n    value: function () {\n      var _initializeAfterBoot = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee2() {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return Promise.all([this.loadPreferences(), this.loadWallpapers(),\n              // Load wallpapers first so they're available during boot\n              this.loadSessionData()]);\n            case 3:\n              _context2.next = 5;\n              return this.setInitialWallpaper();\n            case 5:\n              _context2.next = 7;\n              return this.loadDesktopApps();\n            case 7:\n              // Load saved icon positions before setup\n              this.loadIconPositions();\n\n              // Initialize desktop\n              _context2.next = 10;\n              return this.setupDesktop();\n            case 10:\n              // Mark desktop as ready\n              this.isBooting = false;\n              _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('desktop:ready', {\n                wallpapers: this.wallpapers.length,\n                preferences: Object.keys(this.preferences).length,\n                performanceMode: this.config.performanceMode\n              });\n              _context2.next = 17;\n              break;\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](0);\n              this.handleError(_context2.t0);\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 14]]);\n      }));\n      function initializeAfterBoot() {\n        return _initializeAfterBoot.apply(this, arguments);\n      }\n      return initializeAfterBoot;\n    }()\n    /**\n     * Create DOM elements\n     */\n  }, {\n    key: \"createElements\",\n    value: function createElements() {\n      // Get desktop container\n      this.container = document.getElementById('desktop');\n      if (!this.container) {\n        throw new Error('Desktop container not found');\n      }\n\n      // Create wallpaper container\n      this.wallpaperContainer = document.createElement('div');\n      this.wallpaperContainer.className = 'wallpaper-container';\n      this.wallpaperContainer.style.cssText = \"\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n            background-size: cover;\\n            background-position: center;\\n            background-repeat: no-repeat;\\n            z-index: 1;\\n        \";\n\n      // Create icons container\n      this.iconsContainer = document.createElement('div');\n      this.iconsContainer.className = 'desktop-icons';\n      this.iconsContainer.style.cssText = \"\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n            z-index: 2;\\n        \";\n\n      // Create context menu\n      this.contextMenu = document.createElement('div');\n      this.contextMenu.className = 'context-menu';\n      this.contextMenu.style.cssText = \"\\n            position: fixed;\\n            display: none;\\n            z-index: 9999;\\n        \";\n      this.contextMenu.innerHTML = this.createContextMenuHTML();\n\n      // Append to container\n      this.container.appendChild(this.wallpaperContainer);\n      this.container.appendChild(this.iconsContainer);\n      this.container.appendChild(this.contextMenu);\n    }\n\n    /**\n     * Create context menu HTML\n     */\n  }, {\n    key: \"createContextMenuHTML\",\n    value: function createContextMenuHTML() {\n      var _targetElement$closes;\n      var targetElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      // Check if right-clicked on an app icon\n      var isAppIcon = targetElement === null || targetElement === void 0 || (_targetElement$closes = targetElement.closest) === null || _targetElement$closes === void 0 ? void 0 : _targetElement$closes.call(targetElement, '.desktop-icon');\n      if (isAppIcon) {\n        var _isAppIcon$querySelec;\n        var appId = isAppIcon.dataset.appId;\n        var app = this.desktopApps.find(function (a) {\n          return a.id === appId;\n        });\n        var appName = ((_isAppIcon$querySelec = isAppIcon.querySelector('.icon-label')) === null || _isAppIcon$querySelec === void 0 ? void 0 : _isAppIcon$querySelec.textContent) || 'Application';\n\n        // Build menu based on app type\n        var menuItems = \"\\n                <div class=\\\"menu-item\\\" data-action=\\\"open_app\\\">\\n                    Open\\n                </div>\";\n\n        // Add \"Open Externally\" for external links and documents\n        if (app && (app.type === 'external' || app.type === 'document')) {\n          menuItems += \"\\n                <div class=\\\"menu-item\\\" data-action=\\\"open_externally\\\">\\n                    Open Externally\\n                </div>\";\n        }\n        menuItems += \"\\n                <div class=\\\"menu-separator\\\"></div>\\n                <div class=\\\"menu-item\\\" data-action=\\\"get_app_info\\\">\\n                    Get Info\\n                </div>\";\n        return menuItems;\n      }\n\n      // Desktop context menu\n      return \"\\n            <div class=\\\"menu-item\\\" data-action=\\\"wallpaper_settings\\\">\\n                Wallpaper Settings...\\n            </div>\\n            <div class=\\\"menu-item\\\" data-action=\\\"next_wallpaper\\\">\\n                Next Wallpaper\\n            </div>\\n            <div class=\\\"menu-separator\\\"></div>\\n            <div class=\\\"menu-item\\\" data-action=\\\"get_info\\\">\\n                Get Desktop Info\\n            </div>\\n        \";\n    }\n\n    /**\n     * Bind event handlers\n     */\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      // Global events\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].on('preferences:changed', this.onPreferencesChanged.bind(this));\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].on('wallpaper:change', this.changeWallpaper.bind(this));\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].on('theme:changed', this.handleThemeChanged.bind(this));\n\n      // Window events\n      window.addEventListener('resize', this.onWindowResize.bind(this));\n      window.addEventListener('beforeunload', this.onBeforeUnload.bind(this));\n\n      // Desktop events\n      this.container.addEventListener('contextmenu', this.onContextMenu.bind(this));\n      this.container.addEventListener('click', this.onDesktopClick.bind(this));\n\n      // Context menu events\n      this.contextMenu.addEventListener('click', this.onContextMenuClick.bind(this));\n\n      // Performance monitoring\n      if (this.config.performanceMode === 'auto') {\n        this.setupPerformanceMonitoring();\n      }\n    }\n\n    /**\n     * Handle theme changed event\n     * @param {object} data - Theme data\n     */\n  }, {\n    key: \"handleThemeChanged\",\n    value: function handleThemeChanged(data) {\n      var _this$preferences;\n      console.log('üé® Desktop: Theme changed to', data.effectiveTheme);\n\n      // Optionally coordinate wallpaper selection with theme\n      if ((_this$preferences = this.preferences) !== null && _this$preferences !== void 0 && (_this$preferences = _this$preferences.desktop) !== null && _this$preferences !== void 0 && (_this$preferences = _this$preferences.wallpaper) !== null && _this$preferences !== void 0 && _this$preferences.time_based_switching) {\n        // Theme and wallpaper are already coordinated by backend\n        console.log('‚úÖ Wallpaper already coordinated with theme');\n      }\n    }\n\n    /**\n     * Load user preferences\n     */\n  }, {\n    key: \"loadPreferences\",\n    value: function () {\n      var _loadPreferences = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee3() {\n        var response, data;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return fetch('/api/preferences');\n            case 3:\n              response = _context3.sent;\n              _context3.next = 6;\n              return response.json();\n            case 6:\n              data = _context3.sent;\n              if (data.success) {\n                this.preferences = data.data;\n              } else {\n                this.preferences = this.getDefaultPreferences();\n              }\n              _context3.next = 14;\n              break;\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.warn('Failed to load preferences, using defaults:', _context3.t0);\n              this.preferences = this.getDefaultPreferences();\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 10]]);\n      }));\n      function loadPreferences() {\n        return _loadPreferences.apply(this, arguments);\n      }\n      return loadPreferences;\n    }()\n    /**\n     * Load wallpapers data with progressive loading\n     */\n  }, {\n    key: \"loadWallpapers\",\n    value: function () {\n      var _loadWallpapers = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee4() {\n        var response, data;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return fetch('/api/wallpapers');\n            case 3:\n              response = _context4.sent;\n              _context4.next = 6;\n              return response.json();\n            case 6:\n              data = _context4.sent;\n              if (data.success) {\n                this.wallpapers = data.data;\n\n                // Start progressive preloading of thumbnails\n                if (this.progressiveLoading) {\n                  this.preloadWallpaperThumbnails();\n                }\n\n                // Set up auto-rotation timer\n                this.setupWallpaperRotation();\n\n                // Wallpaper selection is handled by setInitialWallpaper() consistently\n                console.log('Wallpapers loaded, selection will be handled by setInitialWallpaper()');\n              } else {\n                this.wallpapers = this.getDefaultWallpapers();\n              }\n              _context4.next = 14;\n              break;\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.warn('Failed to load wallpapers, using defaults:', _context4.t0);\n              this.wallpapers = this.getDefaultWallpapers();\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[0, 10]]);\n      }));\n      function loadWallpapers() {\n        return _loadWallpapers.apply(this, arguments);\n      }\n      return loadWallpapers;\n    }()\n    /**\n     * Load session data\n     */\n  }, {\n    key: \"loadSessionData\",\n    value: function () {\n      var _loadSessionData = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee5() {\n        var stored;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              try {\n                stored = localStorage.getItem('desktop_session');\n                if (stored) {\n                  this.sessionData = JSON.parse(stored);\n                } else {\n                  this.sessionData = this.getDefaultSessionData();\n                }\n              } catch (error) {\n                console.warn('Failed to load session data, using defaults:', error);\n                this.sessionData = this.getDefaultSessionData();\n              }\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function loadSessionData() {\n        return _loadSessionData.apply(this, arguments);\n      }\n      return loadSessionData;\n    }()\n    /**\n     * Load desktop applications data\n     */\n  }, {\n    key: \"loadDesktopApps\",\n    value: function () {\n      var _loadDesktopApps = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee6() {\n        var response, data, appsData, externalApps;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return fetch('/api/desktop-apps');\n            case 3:\n              response = _context6.sent;\n              _context6.next = 6;\n              return response.json();\n            case 6:\n              data = _context6.sent;\n              // Handle Laravel API response format\n              appsData = data.success ? data.data : data;\n              if (appsData && appsData.apps) {\n                this.desktopApps = appsData.apps;\n                console.log('‚úÖ Desktop apps loaded:', this.desktopApps.length, 'apps');\n                // Log external apps with openInNewTab property\n                externalApps = this.desktopApps.filter(function (app) {\n                  return app.type === 'external';\n                });\n                console.log('üåê External apps:', externalApps.map(function (app) {\n                  return {\n                    name: app.name,\n                    openInNewTab: app.openInNewTab,\n                    url: app.url\n                  };\n                }));\n                this.createDesktopIcons();\n              } else {\n                this.desktopApps = this.getDefaultApps();\n                this.createDesktopIcons();\n              }\n              _context6.next = 16;\n              break;\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.warn('Failed to load desktop apps, using defaults:', _context6.t0);\n              this.desktopApps = this.getDefaultApps();\n              this.createDesktopIcons();\n            case 16:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[0, 11]]);\n      }));\n      function loadDesktopApps() {\n        return _loadDesktopApps.apply(this, arguments);\n      }\n      return loadDesktopApps;\n    }()\n  }, {\n    key: \"setupDesktop\",\n    value: function () {\n      var _setupDesktop = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee7() {\n        var _this$preferences$app;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              // Wallpaper is handled by setInitialWallpaper() - don't duplicate logic\n              if (!this.currentWallpaper) {\n                console.warn('Desktop: No wallpaper set, using fallback');\n              }\n\n              // Apply theme preferences\n              if ((_this$preferences$app = this.preferences.appearance) !== null && _this$preferences$app !== void 0 && _this$preferences$app.theme) {\n                document.documentElement.setAttribute('data-theme', this.preferences.appearance.theme);\n              }\n\n              // Create desktop icons\n              this.createDesktopIcons();\n            case 3:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function setupDesktop() {\n        return _setupDesktop.apply(this, arguments);\n      }\n      return setupDesktop;\n    }()\n    /**\n     * Set initial wallpaper - Single source of truth for wallpaper selection\n     * Priority: 1) Saved user choice 2) Backend smart selection 3) Fallback\n     */\n  }, {\n    key: \"setInitialWallpaper\",\n    value: function () {\n      var _setInitialWallpaper = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee8() {\n        var wallpaper, selectionSource, pageLoadWallpaper;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              wallpaper = null;\n              selectionSource = 'none'; // Priority 1: Check for saved user wallpaper preference\n              wallpaper = this.getSavedWallpaper();\n              if (wallpaper) {\n                selectionSource = 'saved_preference';\n              }\n\n              // Priority 2: Get wallpaper data that was selected during page load (same as boot screen)\n              if (wallpaper) {\n                _context8.next = 25;\n                break;\n              }\n              _context8.next = 8;\n              return this.getPageLoadWallpaperData();\n            case 8:\n              pageLoadWallpaper = _context8.sent;\n              if (!pageLoadWallpaper) {\n                _context8.next = 16;\n                break;\n              }\n              wallpaper = pageLoadWallpaper;\n              selectionSource = 'page_load';\n              // Save this as the current wallpaper for preferences to detect\n              _context8.next = 14;\n              return this.saveWallpaperSelection(pageLoadWallpaper);\n            case 14:\n              _context8.next = 23;\n              break;\n            case 16:\n              _context8.next = 18;\n              return this.getBackendSelectedWallpaper();\n            case 18:\n              wallpaper = _context8.sent;\n              if (!wallpaper) {\n                _context8.next = 23;\n                break;\n              }\n              selectionSource = 'backend_smart_selection';\n              // Save this selection for consistency\n              _context8.next = 23;\n              return this.saveWallpaperSelection(wallpaper);\n            case 23:\n              _context8.next = 28;\n              break;\n            case 25:\n              if (!(wallpaper && !localStorage.getItem('current_wallpaper'))) {\n                _context8.next = 28;\n                break;\n              }\n              _context8.next = 28;\n              return this.saveWallpaperSelection(wallpaper);\n            case 28:\n              if (!(!wallpaper && this.wallpapers.length > 0)) {\n                _context8.next = 33;\n                break;\n              }\n              wallpaper = this.wallpapers[0];\n              selectionSource = 'fallback';\n              _context8.next = 33;\n              return this.saveWallpaperSelection(wallpaper);\n            case 33:\n              if (!wallpaper) {\n                _context8.next = 37;\n                break;\n              }\n              _context8.next = 36;\n              return this.applyWallpaperConsistently(wallpaper);\n            case 36:\n              this.currentWallpaper = wallpaper;\n            case 37:\n              _context8.next = 42;\n              break;\n            case 39:\n              _context8.prev = 39;\n              _context8.t0 = _context8[\"catch\"](0);\n              console.error('Failed to set initial wallpaper:', _context8.t0);\n            case 42:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this, [[0, 39]]);\n      }));\n      function setInitialWallpaper() {\n        return _setInitialWallpaper.apply(this, arguments);\n      }\n      return setInitialWallpaper;\n    }()\n    /**\n     * Get saved wallpaper from localStorage or session\n     * Returns the user's explicitly saved wallpaper choice\n     */\n  }, {\n    key: \"getSavedWallpaper\",\n    value: function getSavedWallpaper() {\n      var _this2 = this;\n      try {\n        var _this$sessionData;\n        // First check localStorage (highest priority)\n        var savedWallpaper = localStorage.getItem('current_wallpaper');\n        if (savedWallpaper) {\n          var wallpaperData = JSON.parse(savedWallpaper);\n          console.log('üìÅ Found saved wallpaper in localStorage:', wallpaperData.name);\n\n          // Check if wallpaper data is complete (has image URLs)\n          if (!wallpaperData.fullImage && !wallpaperData.url && !wallpaperData.image) {\n            console.warn('‚ö†Ô∏è Saved wallpaper missing image URLs, searching in loaded collection');\n\n            // Find the full wallpaper object from our loaded wallpapers\n            if (this.wallpapers.length > 0) {\n              var fullWallpaper = this.wallpapers.find(function (w) {\n                return w.id === wallpaperData.id;\n              });\n              if (fullWallpaper) {\n                console.log('üéØ Found full wallpaper data in collection:', fullWallpaper.name);\n                // Update localStorage with complete data\n                this.saveWallpaperSelection(fullWallpaper);\n                return fullWallpaper;\n              }\n            }\n            console.error('‚ùå Could not find complete wallpaper data, clearing localStorage');\n            localStorage.removeItem('current_wallpaper');\n            return null;\n          }\n\n          // Find the full wallpaper object from our loaded wallpapers (prefer fresh data)\n          if (this.wallpapers.length > 0) {\n            var _fullWallpaper = this.wallpapers.find(function (w) {\n              return w.id === wallpaperData.id;\n            });\n            if (_fullWallpaper) {\n              console.log('üéØ Matched saved wallpaper with loaded collection:', _fullWallpaper.name);\n              return _fullWallpaper;\n            }\n          }\n          console.log('üì¶ Using saved wallpaper data as-is:', wallpaperData.name);\n          return wallpaperData;\n        }\n\n        // Check session data as fallback\n        if ((_this$sessionData = this.sessionData) !== null && _this$sessionData !== void 0 && (_this$sessionData = _this$sessionData.wallpaper) !== null && _this$sessionData !== void 0 && _this$sessionData.id) {\n          console.log('üìÑ Found wallpaper in session data:', this.sessionData.wallpaper.name);\n\n          // Validate session data\n          if (!this.sessionData.wallpaper.fullImage && !this.sessionData.wallpaper.url) {\n            console.warn('‚ö†Ô∏è Session wallpaper missing image URLs');\n\n            // Find the full wallpaper object from our loaded wallpapers\n            if (this.wallpapers.length > 0) {\n              var _fullWallpaper2 = this.wallpapers.find(function (w) {\n                return w.id === _this2.sessionData.wallpaper.id;\n              });\n              if (_fullWallpaper2) {\n                console.log('üéØ Found full wallpaper data in collection:', _fullWallpaper2.name);\n                return _fullWallpaper2;\n              }\n            }\n            return null;\n          }\n\n          // Find the full wallpaper object from our loaded wallpapers\n          if (this.wallpapers.length > 0) {\n            var _fullWallpaper3 = this.wallpapers.find(function (w) {\n              return w.id === _this2.sessionData.wallpaper.id;\n            });\n            if (_fullWallpaper3) {\n              console.log('üéØ Matched session wallpaper with loaded collection:', _fullWallpaper3.name);\n              return _fullWallpaper3;\n            }\n          }\n          return this.sessionData.wallpaper;\n        }\n        return null;\n      } catch (error) {\n        console.error('Error getting saved wallpaper:', error);\n        // Clear corrupted data\n        localStorage.removeItem('current_wallpaper');\n        return null;\n      }\n    }\n\n    /**\n     * Get wallpaper selected by backend (same as boot screen)\n     * This ensures boot screen and desktop show the same wallpaper\n     */\n  }, {\n    key: \"getBackendSelectedWallpaper\",\n    value: function () {\n      var _getBackendSelectedWallpaper = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee9() {\n        var isFirstVisit, userFingerprint, currentHour, response, data, _data$metadata, fullWallpaper;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              isFirstVisit = this.isFirstTimeUser();\n              userFingerprint = this.generateUserFingerprint();\n              currentHour = new Date().getHours();\n              console.log('üîÑ Getting backend wallpaper selection:', {\n                isFirstVisit: isFirstVisit,\n                currentHour: currentHour,\n                fingerprint: userFingerprint.substring(0, 8) + '...'\n              });\n              _context9.next = 7;\n              return fetch(\"/api/wallpapers/smart-selection?hour=\".concat(currentHour, \"&fingerprint=\").concat(userFingerprint, \"&firstVisit=\").concat(isFirstVisit));\n            case 7:\n              response = _context9.sent;\n              _context9.next = 10;\n              return response.json();\n            case 10:\n              data = _context9.sent;\n              if (!(data.success && data.data)) {\n                _context9.next = 23;\n                break;\n              }\n              console.log('‚úÖ Backend selection:', data.data.name, '| Method:', (_data$metadata = data.metadata) === null || _data$metadata === void 0 ? void 0 : _data$metadata.selectionMethod);\n\n              // Find the full wallpaper object from our loaded wallpapers\n              fullWallpaper = this.wallpapers.find(function (w) {\n                return w.id === data.data.id;\n              });\n              if (!fullWallpaper) {\n                _context9.next = 19;\n                break;\n              }\n              console.log('üéØ Found matching wallpaper in local collection:', fullWallpaper.name);\n              return _context9.abrupt(\"return\", fullWallpaper);\n            case 19:\n              console.log('üì¶ Using API wallpaper data:', data.data.name);\n              return _context9.abrupt(\"return\", data.data);\n            case 21:\n              _context9.next = 25;\n              break;\n            case 23:\n              console.warn('‚ö†Ô∏è Backend selection failed:', data.error);\n              return _context9.abrupt(\"return\", null);\n            case 25:\n              _context9.next = 31;\n              break;\n            case 27:\n              _context9.prev = 27;\n              _context9.t0 = _context9[\"catch\"](0);\n              console.error('‚ùå Failed to get backend wallpaper selection:', _context9.t0);\n              return _context9.abrupt(\"return\", null);\n            case 31:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this, [[0, 27]]);\n      }));\n      function getBackendSelectedWallpaper() {\n        return _getBackendSelectedWallpaper.apply(this, arguments);\n      }\n      return getBackendSelectedWallpaper;\n    }()\n    /**\n     * Apply wallpaper consistently to both body and wallpaper container\n     * Ensures smooth transition and consistent appearance\n     */\n  }, {\n    key: \"applyWallpaperConsistently\",\n    value: function () {\n      var _applyWallpaperConsistently = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee10(wallpaper) {\n        var imageUrl, source;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              if (wallpaper) {\n                _context10.next = 2;\n                break;\n              }\n              return _context10.abrupt(\"return\");\n            case 2:\n              imageUrl = wallpaper.fullImage || wallpaper.url || wallpaper.image;\n              if (imageUrl) {\n                _context10.next = 7;\n                break;\n              }\n              console.error('No image URL found for wallpaper:', wallpaper);\n              console.log('Available properties:', Object.keys(wallpaper));\n              return _context10.abrupt(\"return\");\n            case 7:\n              // Log source information\n              source = wallpaper.source || 'unknown';\n              console.log(\"\\uD83C\\uDFA8 Applying wallpaper from \".concat(source, \":\"), wallpaper.name || wallpaper.id);\n              console.log(\"   URL: \".concat(imageUrl));\n\n              // Preload image first\n              _context10.next = 12;\n              return this.preloadWallpaperImage(imageUrl);\n            case 12:\n              // Apply to both body (for boot consistency) and container (for desktop)\n              this.applyWallpaperWithTransition(imageUrl);\n              console.log('‚úÖ Wallpaper applied consistently:', wallpaper.name || wallpaper.id);\n            case 14:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function applyWallpaperConsistently(_x) {\n        return _applyWallpaperConsistently.apply(this, arguments);\n      }\n      return applyWallpaperConsistently;\n    }()\n    /**\n     * Preload wallpaper image to ensure smooth application\n     */\n  }, {\n    key: \"preloadWallpaperImage\",\n    value: function () {\n      var _preloadWallpaperImage = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee11(imageUrl) {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              return _context11.abrupt(\"return\", new Promise(function (resolve, reject) {\n                var img = new Image();\n                img.onload = function () {\n                  console.log('üñºÔ∏è Wallpaper preloaded successfully');\n                  resolve();\n                };\n                img.onerror = function () {\n                  console.warn('‚ö†Ô∏è Failed to preload wallpaper, continuing anyway');\n                  resolve(); // Don't reject, continue with application\n                };\n                img.src = imageUrl;\n              }));\n            case 1:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11);\n      }));\n      function preloadWallpaperImage(_x2) {\n        return _preloadWallpaperImage.apply(this, arguments);\n      }\n      return preloadWallpaperImage;\n    }()\n    /**\n     * Get wallpaper data that was selected during page load (from backend)\n     * This ensures boot screen and desktop show the same wallpaper\n     */\n  }, {\n    key: \"getPageLoadWallpaperData\",\n    value: function () {\n      var _getPageLoadWallpaperData = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee12() {\n        var _window$AbdulmeApp, wallpaperData, fullWallpaper, _fullWallpaper4, wallpaperMeta, _wallpaperData, _fullWallpaper5;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.prev = 0;\n              if (!((_window$AbdulmeApp = window.AbdulmeApp) !== null && _window$AbdulmeApp !== void 0 && (_window$AbdulmeApp = _window$AbdulmeApp.config) !== null && _window$AbdulmeApp !== void 0 && _window$AbdulmeApp.currentWallpaper)) {\n                _context12.next = 12;\n                break;\n              }\n              wallpaperData = window.AbdulmeApp.config.currentWallpaper;\n              console.log('üìÑ Found page load wallpaper from AbdulmeApp config:', wallpaperData.name);\n\n              // Find the full wallpaper object from our loaded wallpapers\n              fullWallpaper = this.wallpapers.find(function (w) {\n                return w.id === wallpaperData.id;\n              });\n              if (!fullWallpaper) {\n                _context12.next = 10;\n                break;\n              }\n              console.log('üéØ Matched with loaded wallpaper collection:', fullWallpaper.name);\n              return _context12.abrupt(\"return\", fullWallpaper);\n            case 10:\n              console.log('üì¶ Using backend wallpaper data as-is:', wallpaperData.name);\n              return _context12.abrupt(\"return\", wallpaperData);\n            case 12:\n              if (!window.selectedWallpaper) {\n                _context12.next = 16;\n                break;\n              }\n              console.log('üìÑ Found legacy page load wallpaper data:', window.selectedWallpaper.name);\n\n              // Find the full wallpaper object from our loaded wallpapers\n              _fullWallpaper4 = this.wallpapers.find(function (w) {\n                return w.id === window.selectedWallpaper.id;\n              });\n              return _context12.abrupt(\"return\", _fullWallpaper4 || window.selectedWallpaper);\n            case 16:\n              // Alternative: Check meta tag or inline script data\n              wallpaperMeta = document.querySelector('meta[name=\"selected-wallpaper\"]');\n              if (!wallpaperMeta) {\n                _context12.next = 22;\n                break;\n              }\n              _wallpaperData = JSON.parse(wallpaperMeta.getAttribute('content'));\n              console.log('üè∑Ô∏è Found wallpaper in meta tag:', _wallpaperData.name);\n              _fullWallpaper5 = this.wallpapers.find(function (w) {\n                return w.id === _wallpaperData.id;\n              });\n              return _context12.abrupt(\"return\", _fullWallpaper5 || _wallpaperData);\n            case 22:\n              console.log('‚ÑπÔ∏è No page load wallpaper data found');\n              return _context12.abrupt(\"return\", null);\n            case 26:\n              _context12.prev = 26;\n              _context12.t0 = _context12[\"catch\"](0);\n              console.error('Error getting page load wallpaper data:', _context12.t0);\n              return _context12.abrupt(\"return\", null);\n            case 30:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this, [[0, 26]]);\n      }));\n      function getPageLoadWallpaperData() {\n        return _getPageLoadWallpaperData.apply(this, arguments);\n      }\n      return getPageLoadWallpaperData;\n    }()\n    /**\n     * Event Handlers\n     */\n    /**\n     * Handle preferences changed event\n     */\n  }, {\n    key: \"onPreferencesChanged\",\n    value: function onPreferencesChanged(event) {\n      var _event$data$desktop, _event$data$appearanc;\n      console.log('Preferences changed:', event.data);\n      this.preferences = _objectSpread(_objectSpread({}, this.preferences), event.data);\n\n      // Apply preference changes\n      if ((_event$data$desktop = event.data.desktop) !== null && _event$data$desktop !== void 0 && _event$data$desktop.wallpaper) {\n        var wallpaper = this.wallpapers.find(function (w) {\n          return w.id === event.data.desktop.wallpaper;\n        });\n        if (wallpaper) {\n          this.changeWallpaper(wallpaper);\n        }\n      }\n      if ((_event$data$appearanc = event.data.appearance) !== null && _event$data$appearanc !== void 0 && _event$data$appearanc.theme) {\n        document.documentElement.setAttribute('data-theme', event.data.appearance.theme);\n      }\n    }\n\n    /**\n     * Handle wallpaper change with progressive loading\n     */\n  }, {\n    key: \"changeWallpaper\",\n    value: function () {\n      var _changeWallpaper = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee13(wallpaper) {\n        var _this3 = this;\n        var now, fullImageUrl, preloadImage, verification;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              if (!(!wallpaper || !this.wallpaperContainer)) {\n                _context13.next = 2;\n                break;\n              }\n              return _context13.abrupt(\"return\");\n            case 2:\n              // Prevent rapid-fire wallpaper changes\n              now = Date.now();\n              if (!(this.lastWallpaperChange && now - this.lastWallpaperChange < 500)) {\n                _context13.next = 6;\n                break;\n              }\n              console.log('Ignoring rapid wallpaper change request');\n              return _context13.abrupt(\"return\");\n            case 6:\n              this.lastWallpaperChange = now;\n\n              // Skip if already the current wallpaper\n              if (!(this.currentWallpaper && this.currentWallpaper.id === wallpaper.id)) {\n                _context13.next = 10;\n                break;\n              }\n              console.log('Wallpaper already active:', wallpaper.id);\n              return _context13.abrupt(\"return\");\n            case 10:\n              console.log('Changing wallpaper to:', wallpaper.name || wallpaper.id);\n              _context13.prev = 11;\n              if (!wallpaper.fullImage) {\n                _context13.next = 16;\n                break;\n              }\n              fullImageUrl = wallpaper.fullImage;\n              _context13.next = 26;\n              break;\n            case 16:\n              if (!wallpaper.url) {\n                _context13.next = 20;\n                break;\n              }\n              fullImageUrl = wallpaper.url;\n              _context13.next = 26;\n              break;\n            case 20:\n              if (!wallpaper.filename) {\n                _context13.next = 24;\n                break;\n              }\n              // If only filename is provided, construct the path\n              fullImageUrl = \"/images/wallpapers/\".concat(wallpaper.filename);\n              _context13.next = 26;\n              break;\n            case 24:\n              console.error('Wallpaper object missing image URL/filename:', wallpaper);\n              return _context13.abrupt(\"return\");\n            case 26:\n              if (!(!fullImageUrl || fullImageUrl.includes('undefined'))) {\n                _context13.next = 29;\n                break;\n              }\n              console.error('Invalid wallpaper URL:', fullImageUrl, 'Wallpaper object:', wallpaper);\n              return _context13.abrupt(\"return\");\n            case 29:\n              console.log('Loading wallpaper from:', fullImageUrl);\n\n              // Clear old cache (keep only current wallpaper for performance)\n              this.wallpaperCache.clear();\n\n              // Check if full resolution is already cached\n              if (this.wallpaperCache.has(fullImageUrl)) {\n                // Use cached full resolution immediately with transition\n                this.applyWallpaperWithTransition(fullImageUrl);\n              } else {\n                // Show loading state if needed\n                this.wallpaperContainer.style.transition = 'opacity 0.3s ease';\n\n                // Preload full resolution in background\n                preloadImage = new Image();\n                preloadImage.onload = function () {\n                  // Cache the loaded image (only current one)\n                  _this3.wallpaperCache.set(fullImageUrl, preloadImage);\n                  // Apply with smooth transition\n                  _this3.applyWallpaperWithTransition(fullImageUrl);\n                };\n                preloadImage.onerror = function () {\n                  console.error('Failed to load wallpaper:', fullImageUrl);\n                  _this3.loadFallbackWallpaper();\n                };\n                preloadImage.src = fullImageUrl;\n              }\n              this.currentWallpaper = wallpaper;\n              console.log('‚úÖ Current wallpaper set to:', wallpaper.name || wallpaper.id);\n              _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('wallpaper:changed', {\n                wallpaper: wallpaper\n              });\n\n              // Save to backend and local storage immediately\n              console.log('üíæ Starting wallpaper save process...');\n              _context13.next = 38;\n              return this.saveWallpaperSelection(wallpaper);\n            case 38:\n              // Update session data immediately\n              this.saveCurrentState();\n              console.log('‚úÖ Wallpaper change complete:', wallpaper.name || wallpaper.id);\n\n              // Verify save worked\n              verification = localStorage.getItem('current_wallpaper');\n              console.log('üîç Verification - localStorage after save:', verification ? JSON.parse(verification).name : 'NONE');\n              _context13.next = 48;\n              break;\n            case 44:\n              _context13.prev = 44;\n              _context13.t0 = _context13[\"catch\"](11);\n              console.error('Failed to change wallpaper:', _context13.t0);\n              // Fallback to default wallpaper\n              this.loadFallbackWallpaper();\n            case 48:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, this, [[11, 44]]);\n      }));\n      function changeWallpaper(_x3) {\n        return _changeWallpaper.apply(this, arguments);\n      }\n      return changeWallpaper;\n    }()\n    /**\n     * Save wallpaper selection - Single source of truth for persistence\n     * Saves to both localStorage (immediate) and backend (for sync)\n     */\n  }, {\n    key: \"saveWallpaperSelection\",\n    value: function () {\n      var _saveWallpaperSelection = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee14(wallpaper) {\n        var wallpaperData;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              try {\n                console.log('üíæ Saving wallpaper selection:', wallpaper.name || wallpaper.id);\n\n                // Create standardized wallpaper data\n                wallpaperData = {\n                  id: wallpaper.id,\n                  name: wallpaper.name,\n                  thumbnail: wallpaper.thumbnail,\n                  fullImage: wallpaper.fullImage,\n                  category: wallpaper.category,\n                  type: wallpaper.type,\n                  colors: wallpaper.colors,\n                  savedAt: Date.now(),\n                  source: 'user_selection'\n                }; // Save to localStorage immediately (critical for persistence)\n                localStorage.setItem('current_wallpaper', JSON.stringify(wallpaperData));\n                console.log('‚úÖ Saved to localStorage:', wallpaperData.name);\n\n                // Mark as visited if this is first selection\n                if (this.isFirstTimeUser()) {\n                  localStorage.setItem('portfolio_visited', new Date().toISOString());\n                  console.log('‚úÖ Marked first visit complete');\n                }\n\n                // Save to backend for sync (non-blocking)\n                this.saveToBackend(wallpaperData)[\"catch\"](function (error) {\n                  console.warn('‚ö†Ô∏è Backend save failed (non-critical):', error.message);\n                });\n\n                // Update session data\n                this.saveCurrentState();\n              } catch (error) {\n                console.error('‚ùå Critical error saving wallpaper selection:', error);\n              }\n            case 1:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14, this);\n      }));\n      function saveWallpaperSelection(_x4) {\n        return _saveWallpaperSelection.apply(this, arguments);\n      }\n      return saveWallpaperSelection;\n    }()\n    /**\n     * Save wallpaper to backend (async, non-blocking)\n     */\n  }, {\n    key: \"saveToBackend\",\n    value: function () {\n      var _saveToBackend = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee15(wallpaperData) {\n        var _document$querySelect;\n        var response;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.next = 2;\n              return fetch('/api/wallpapers/set-current', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'X-CSRF-TOKEN': ((_document$querySelect = document.querySelector('meta[name=\"csrf-token\"]')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.getAttribute('content')) || ''\n                },\n                body: JSON.stringify(wallpaperData)\n              });\n            case 2:\n              response = _context15.sent;\n              if (!response.ok) {\n                _context15.next = 7;\n                break;\n              }\n              console.log('‚úÖ Wallpaper saved to backend');\n              _context15.next = 8;\n              break;\n            case 7:\n              throw new Error(\"Backend save failed: \".concat(response.status));\n            case 8:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15);\n      }));\n      function saveToBackend(_x5) {\n        return _saveToBackend.apply(this, arguments);\n      }\n      return saveToBackend;\n    }()\n    /**\n     * Apply wallpaper with smooth transition\n     */\n  }, {\n    key: \"applyWallpaperWithTransition\",\n    value: function applyWallpaperWithTransition(imageUrl) {\n      if (!this.wallpaperContainer) return;\n\n      // Add smooth fade transition\n      this.wallpaperContainer.style.transition = 'background-image 0.8s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1)';\n\n      // Apply new wallpaper\n      this.wallpaperContainer.style.backgroundImage = \"url('\".concat(imageUrl, \"')\");\n      this.wallpaperContainer.style.backgroundSize = 'cover';\n      this.wallpaperContainer.style.backgroundPosition = 'center';\n      this.wallpaperContainer.style.backgroundRepeat = 'no-repeat';\n      this.wallpaperContainer.style.opacity = '1';\n\n      // Also set on body for immediate visibility\n      document.body.style.transition = 'background-image 0.8s cubic-bezier(0.4, 0, 0.2, 1)';\n      document.body.style.backgroundImage = \"url('\".concat(imageUrl, \"')\");\n      document.body.style.backgroundSize = 'cover';\n      document.body.style.backgroundPosition = 'center';\n      document.body.style.backgroundRepeat = 'no-repeat';\n      console.log('Wallpaper applied with smooth transition');\n    }\n\n    /**\n     * Handle window resize\n     */\n  }, {\n    key: \"onWindowResize\",\n    value: function onWindowResize() {\n      // Update desktop dimensions and icon positions\n      if (this.iconsContainer) {\n        this.repositionIcons();\n      }\n\n      // Update wallpaper if needed\n      if (this.wallpaperContainer) {\n        this.wallpaperContainer.style.width = '100%';\n        this.wallpaperContainer.style.height = '100%';\n      }\n    }\n\n    /**\n     * Handle before unload\n     */\n  }, {\n    key: \"onBeforeUnload\",\n    value: function onBeforeUnload() {\n      // Save current state before page unload\n      var sessionData = {\n        timestamp: Date.now(),\n        wallpaper: this.currentWallpaper,\n        preferences: this.preferences\n      };\n      localStorage.setItem('desktop_session', JSON.stringify(sessionData));\n    }\n\n    /**\n     * Handle desktop context menu\n     */\n  }, {\n    key: \"onContextMenu\",\n    value: function onContextMenu(event) {\n      var _this4 = this;\n      event.preventDefault();\n      if (!this.contextMenu) return;\n\n      // Update menu content based on what was clicked\n      this.contextMenu.innerHTML = this.createContextMenuHTML(event.target);\n\n      // Position context menu at cursor\n      this.contextMenu.style.left = event.clientX + 'px';\n      this.contextMenu.style.top = event.clientY + 'px';\n      this.contextMenu.style.display = 'block';\n\n      // Store clicked element for context\n      this.contextMenuTarget = event.target;\n\n      // Close on next click\n      setTimeout(function () {\n        document.addEventListener('click', function () {\n          _this4.contextMenu.style.display = 'none';\n        }, {\n          once: true\n        });\n      }, 0);\n    }\n\n    /**\n     * Handle desktop click\n     */\n  }, {\n    key: \"onDesktopClick\",\n    value: function onDesktopClick(event) {\n      // Hide context menu if clicking on empty space\n      if (this.contextMenu && event.target === this.container) {\n        this.contextMenu.style.display = 'none';\n      }\n\n      // Deselect any selected icons\n      var selectedIcons = this.container.querySelectorAll('.desktop-icon.selected');\n      selectedIcons.forEach(function (icon) {\n        return icon.classList.remove('selected');\n      });\n    }\n\n    /**\n     * Handle context menu clicks\n     */\n  }, {\n    key: \"onContextMenuClick\",\n    value: function onContextMenuClick(event) {\n      var _event$target$closest;\n      event.stopPropagation();\n      var action = (_event$target$closest = event.target.closest('.menu-item')) === null || _event$target$closest === void 0 ? void 0 : _event$target$closest.dataset.action;\n      if (!action) return;\n      switch (action) {\n        case 'wallpaper_settings':\n          this.openSystemPreferences('desktop');\n          break;\n        case 'next_wallpaper':\n          this.switchToNextWallpaper();\n          break;\n        case 'get_info':\n          this.showDesktopInfo();\n          break;\n        case 'open_app':\n          this.openAppFromContextMenu();\n          break;\n        case 'open_externally':\n          this.openAppExternally();\n          break;\n        case 'get_app_info':\n          this.showAppInfo();\n          break;\n      }\n      this.contextMenu.style.display = 'none';\n    }\n\n    /**\n     * Setup performance monitoring\n     */\n  }, {\n    key: \"setupPerformanceMonitoring\",\n    value: function setupPerformanceMonitoring() {\n      var _this5 = this;\n      var frameCount = 0;\n      var lastTime = performance.now();\n      var measureFPS = function measureFPS() {\n        frameCount++;\n        var currentTime = performance.now();\n        if (currentTime - lastTime >= 1000) {\n          var fps = Math.round(frameCount * 1000 / (currentTime - lastTime));\n\n          // Adjust performance mode if FPS drops\n          if (fps < 30 && _this5.config.performanceMode !== 'low') {\n            _this5.config.performanceMode = 'low';\n            console.warn('Performance mode switched to low due to low FPS:', fps);\n          }\n          frameCount = 0;\n          lastTime = currentTime;\n        }\n        requestAnimationFrame(measureFPS);\n      };\n      requestAnimationFrame(measureFPS);\n    }\n\n    /**\n     * Utility Methods\n     */\n\n    /**\n     * Reposition desktop icons after resize\n     */\n  }, {\n    key: \"repositionIcons\",\n    value:\n    /**\n     * Reposition icons after window resize\n     */\n    function repositionIcons() {\n      if (!this.iconsContainer) return;\n      var containerRect = this.iconsContainer.getBoundingClientRect();\n      var icons = this.iconsContainer.querySelectorAll('.desktop-icon');\n      icons.forEach(function (iconElement) {\n        var rect = iconElement.getBoundingClientRect();\n\n        // Keep icons within bounds\n        var x = parseInt(iconElement.style.left);\n        var y = parseInt(iconElement.style.top);\n        if (x + 64 > containerRect.width) {\n          x = containerRect.width - 64 - 20;\n        }\n        if (y + 64 > containerRect.height) {\n          y = containerRect.height - 64 - 20;\n        }\n        iconElement.style.left = Math.max(20, x) + 'px';\n        iconElement.style.top = Math.max(20, y) + 'px';\n      });\n    }\n\n    /**\n     * Handle error conditions\n     */\n  }, {\n    key: \"openSystemPreferences\",\n    value:\n    /**\n     * Open System Preferences to a specific pane\n     */\n    function openSystemPreferences() {\n      var pane = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'general';\n      console.log('Opening System Preferences:', pane);\n\n      // Emit app launch event with pane parameter\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('app:launch', {\n        appId: 'preferences',\n        name: 'System Preferences',\n        component: 'Preferences',\n        initialPane: pane // Pass the pane to open\n      });\n    }\n\n    /**\n     * Switch to next wallpaper in current theme\n     */\n  }, {\n    key: \"switchToNextWallpaper\",\n    value: function () {\n      var _switchToNextWallpaper = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee16() {\n        var _this$wallpapers, _this$preferences2, currentTheme, hour, availableWallpapers, currentWallpaperId, stored, parsed, currentIndex, nextIndex, nextWallpaper;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.prev = 0;\n              console.log('üîÑ Next wallpaper requested');\n              console.log('üì¶ Wallpapers array:', this.wallpapers);\n              console.log('üìä Wallpapers count:', (_this$wallpapers = this.wallpapers) === null || _this$wallpapers === void 0 ? void 0 : _this$wallpapers.length);\n              currentTheme = ((_this$preferences2 = this.preferences) === null || _this$preferences2 === void 0 || (_this$preferences2 = _this$preferences2.appearance) === null || _this$preferences2 === void 0 ? void 0 : _this$preferences2.theme) || 'light'; // Resolve \"auto\" theme to actual light/dark based on time or system preference\n              if (currentTheme === 'auto') {\n                hour = new Date().getHours();\n                currentTheme = hour >= 6 && hour < 18 ? 'light' : 'dark';\n                console.log('üåì Auto theme resolved to:', currentTheme, \"(hour: \".concat(hour, \")\"));\n              }\n              console.log('üé® Current theme:', currentTheme);\n\n              // Ensure wallpapers are loaded\n              if (!(!this.wallpapers || this.wallpapers.length === 0)) {\n                _context16.next = 11;\n                break;\n              }\n              console.warn('‚ùå No wallpapers loaded yet');\n              _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('notification:show', {\n                title: 'No Wallpapers',\n                message: 'Wallpaper collection not loaded yet. Please refresh the page.',\n                type: 'warning',\n                duration: 3000\n              });\n              return _context16.abrupt(\"return\");\n            case 11:\n              // Get wallpapers for current theme from this.wallpapers array\n              // Wallpapers use 'type' property (light/dark/both) not 'theme'\n              availableWallpapers = this.wallpapers.filter(function (w) {\n                return w.type === currentTheme || w.type === 'both';\n              });\n              console.log('üñºÔ∏è Available wallpapers for theme:', availableWallpapers.length);\n              if (!(availableWallpapers.length === 0)) {\n                _context16.next = 18;\n                break;\n              }\n              console.warn('‚ùå No wallpapers available for theme:', currentTheme);\n              console.warn('All wallpapers:', this.wallpapers.map(function (w) {\n                return {\n                  name: w.name,\n                  type: w.type\n                };\n              }));\n              _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('notification:show', {\n                title: 'No Wallpapers',\n                message: \"No wallpapers available for \".concat(currentTheme, \" theme\"),\n                type: 'warning',\n                duration: 3000\n              });\n              return _context16.abrupt(\"return\");\n            case 18:\n              // Get current wallpaper from localStorage or currentWallpaper\n              currentWallpaperId = null;\n              try {\n                stored = localStorage.getItem('current_wallpaper');\n                if (stored) {\n                  parsed = JSON.parse(stored);\n                  currentWallpaperId = parsed.id;\n                  console.log('üìç Current wallpaper ID:', currentWallpaperId);\n                }\n              } catch (e) {\n                console.warn('‚ö†Ô∏è Could not parse current wallpaper:', e);\n              }\n\n              // Find current wallpaper index\n              currentIndex = availableWallpapers.findIndex(function (w) {\n                return w.id === currentWallpaperId;\n              });\n              nextIndex = (currentIndex + 1) % availableWallpapers.length;\n              nextWallpaper = availableWallpapers[nextIndex];\n              console.log('‚úÖ Switching to next wallpaper:', nextWallpaper.name);\n\n              // Save and apply the new wallpaper\n              _context16.next = 26;\n              return this.saveWallpaperSelection(nextWallpaper);\n            case 26:\n              _context16.next = 28;\n              return this.applyWallpaperConsistently(nextWallpaper);\n            case 28:\n              this.currentWallpaper = nextWallpaper;\n              _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('notification:show', {\n                title: 'Wallpaper Changed',\n                message: \"Now showing: \".concat(nextWallpaper.name),\n                type: 'success',\n                duration: 2000\n              });\n              _context16.next = 36;\n              break;\n            case 32:\n              _context16.prev = 32;\n              _context16.t0 = _context16[\"catch\"](0);\n              console.error('‚ùå Failed to switch wallpaper:', _context16.t0);\n              _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('notification:show', {\n                title: 'Error',\n                message: 'Failed to change wallpaper',\n                type: 'error',\n                duration: 3000\n              });\n            case 36:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16, this, [[0, 32]]);\n      }));\n      function switchToNextWallpaper() {\n        return _switchToNextWallpaper.apply(this, arguments);\n      }\n      return switchToNextWallpaper;\n    }()\n    /**\n     * Open wallpaper selector modal\n     */\n  }, {\n    key: \"openWallpaperSelector\",\n    value: function openWallpaperSelector() {\n      var _this6 = this;\n      console.log('Opening wallpaper selector');\n\n      // Create modal overlay\n      var modal = document.createElement('div');\n      modal.className = 'wallpaper-selector-modal';\n      modal.style.cssText = \"\\n            position: fixed;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n            background: rgba(0, 0, 0, 0.5);\\n            backdrop-filter: blur(20px);\\n            z-index: 10000;\\n            display: flex;\\n            align-items: center;\\n            justify-content: center;\\n            opacity: 0;\\n            transition: opacity 300ms ease;\\n        \";\n\n      // Create selector panel\n      var panel = document.createElement('div');\n      panel.className = 'wallpaper-panel';\n      panel.style.cssText = \"\\n            background: rgba(255, 255, 255, 0.9);\\n            border-radius: 12px;\\n            padding: 20px;\\n            max-width: 800px;\\n            max-height: 600px;\\n            overflow-y: auto;\\n            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);\\n            transform: scale(0.9);\\n            transition: transform 300ms ease;\\n        \";\n\n      // Create header\n      var header = document.createElement('div');\n      header.innerHTML = \"\\n            <div style=\\\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;\\\">\\n                <h3 style=\\\"margin: 0; font-size: 18px; color: \".concat(_config_ColorConstants_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].TEXT_PRIMARY, \";\\\">Choose a Wallpaper</h3>\\n                <button class=\\\"close-btn\\\" style=\\\"\\n                    background: \").concat(_config_ColorConstants_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].WINDOW_CLOSE, \";\\n                    border: none;\\n                    border-radius: 50%;\\n                    width: 20px;\\n                    height: 20px;\\n                    cursor: pointer;\\n                \\\">\\u2715</button>\\n            </div>\\n        \");\n\n      // Create wallpaper grid\n      var grid = document.createElement('div');\n      grid.className = 'wallpaper-grid';\n      grid.style.cssText = \"\\n            display: grid;\\n            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\\n            gap: 12px;\\n        \";\n\n      // Add wallpapers to grid\n      this.wallpapers.forEach(function (wallpaper) {\n        var _this6$currentWallpap;\n        var item = document.createElement('div');\n        item.className = 'wallpaper-item';\n        item.style.cssText = \"\\n                aspect-ratio: 16/10;\\n                border-radius: 8px;\\n                overflow: hidden;\\n                cursor: pointer;\\n                border: 3px solid \".concat(wallpaper.id === ((_this6$currentWallpap = _this6.currentWallpaper) === null || _this6$currentWallpap === void 0 ? void 0 : _this6$currentWallpap.id) ? _config_ColorConstants_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].SYSTEM_BLUE : _config_ColorConstants_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].TRANSPARENT, \";\\n                transition: all 200ms ease;\\n                background-image: url(\").concat(wallpaper.thumbnail || wallpaper.fullImage, \");\\n                background-size: cover;\\n                background-position: center;\\n                position: relative;\\n            \");\n\n        // Add hover effect\n        item.addEventListener('mouseenter', function () {\n          var _this6$currentWallpap2;\n          if (wallpaper.id !== ((_this6$currentWallpap2 = _this6.currentWallpaper) === null || _this6$currentWallpap2 === void 0 ? void 0 : _this6$currentWallpap2.id)) {\n            item.style.transform = 'scale(1.05)';\n            item.style.boxShadow = '0 8px 20px rgba(0, 0, 0, 0.3)';\n          }\n        });\n        item.addEventListener('mouseleave', function () {\n          item.style.transform = 'scale(1)';\n          item.style.boxShadow = 'none';\n        });\n\n        // Add wallpaper name overlay\n        var nameOverlay = document.createElement('div');\n        nameOverlay.style.cssText = \"\\n                position: absolute;\\n                bottom: 0;\\n                left: 0;\\n                right: 0;\\n                background: linear-gradient(transparent, rgba(0, 0, 0, 0.7));\\n                color: white;\\n                padding: 8px;\\n                font-size: 12px;\\n                text-align: center;\\n            \";\n        nameOverlay.textContent = wallpaper.name || wallpaper.id;\n        item.appendChild(nameOverlay);\n\n        // Handle wallpaper selection\n        item.addEventListener('click', /*#__PURE__*/(0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee17() {\n          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee17$(_context17) {\n            while (1) switch (_context17.prev = _context17.next) {\n              case 0:\n                _context17.prev = 0;\n                _context17.next = 3;\n                return _this6.changeWallpaper(wallpaper);\n              case 3:\n                // Update selection visual\n                grid.querySelectorAll('.wallpaper-item').forEach(function (el) {\n                  el.style.border = \"3px solid \".concat(_config_ColorConstants_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].TRANSPARENT);\n                });\n                item.style.border = \"3px solid \".concat(_config_ColorConstants_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].SYSTEM_BLUE);\n\n                // Close modal after short delay\n                setTimeout(function () {\n                  modal.click();\n                }, 500);\n                _context17.next = 11;\n                break;\n              case 8:\n                _context17.prev = 8;\n                _context17.t0 = _context17[\"catch\"](0);\n                console.error('Failed to select wallpaper:', _context17.t0);\n              case 11:\n              case \"end\":\n                return _context17.stop();\n            }\n          }, _callee17, null, [[0, 8]]);\n        })));\n        grid.appendChild(item);\n      });\n\n      // Assemble modal\n      panel.appendChild(header);\n      panel.appendChild(grid);\n      modal.appendChild(panel);\n      document.body.appendChild(modal);\n\n      // Handle close button\n      var closeBtn = panel.querySelector('.close-btn');\n      closeBtn.addEventListener('click', function () {\n        return modal.click();\n      });\n\n      // Handle modal close\n      modal.addEventListener('click', function (e) {\n        if (e.target === modal) {\n          modal.style.opacity = '0';\n          panel.style.transform = 'scale(0.9)';\n          setTimeout(function () {\n            if (modal.parentNode) {\n              modal.parentNode.removeChild(modal);\n            }\n          }, 300);\n        }\n      });\n\n      // Animate in\n      requestAnimationFrame(function () {\n        modal.style.opacity = '1';\n        panel.style.transform = 'scale(1)';\n      });\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('wallpaper:selector:opened');\n    }\n\n    /**\n     * Show desktop information\n     */\n  }, {\n    key: \"showDesktopInfo\",\n    value: function showDesktopInfo() {\n      var _this$preferences3, _this$iconsContainer, _this$desktopApps, _this$wallpapers2, _this$wallpapers3;\n      console.log('Showing desktop info');\n\n      // Get current wallpaper info dynamically\n      var wallpaperName = 'Unknown';\n      var wallpaperCategory = '';\n      try {\n        var stored = localStorage.getItem('current_wallpaper');\n        if (stored) {\n          var parsed = JSON.parse(stored);\n          wallpaperName = parsed.name || 'Unknown';\n          wallpaperCategory = parsed.category ? \" (\".concat(parsed.category, \")\") : '';\n        }\n      } catch (e) {\n        wallpaperName = 'Unknown';\n      }\n\n      // Get current theme\n      var currentTheme = ((_this$preferences3 = this.preferences) === null || _this$preferences3 === void 0 || (_this$preferences3 = _this$preferences3.appearance) === null || _this$preferences3 === void 0 ? void 0 : _this$preferences3.theme) || 'light';\n      var themeDisplay = currentTheme.charAt(0).toUpperCase() + currentTheme.slice(1);\n\n      // Count visible icons\n      var visibleIcons = ((_this$iconsContainer = this.iconsContainer) === null || _this$iconsContainer === void 0 ? void 0 : _this$iconsContainer.querySelectorAll('.desktop-icon').length) || 0;\n\n      // Get total apps available\n      var totalApps = ((_this$desktopApps = this.desktopApps) === null || _this$desktopApps === void 0 ? void 0 : _this$desktopApps.length) || 0;\n\n      // Get wallpapers count (total and for current theme)\n      // Note: wallpapers use 'type' property (light/dark/both) not 'theme'\n      var totalWallpapers = ((_this$wallpapers2 = this.wallpapers) === null || _this$wallpapers2 === void 0 ? void 0 : _this$wallpapers2.length) || 0;\n      var themeWallpapers = ((_this$wallpapers3 = this.wallpapers) === null || _this$wallpapers3 === void 0 ? void 0 : _this$wallpapers3.filter(function (w) {\n        return w.type === currentTheme || w.type === 'both';\n      }).length) || 0;\n      var info = {\n        wallpaper: wallpaperName + wallpaperCategory,\n        theme: themeDisplay,\n        icons: visibleIcons,\n        totalApps: totalApps,\n        resolution: \"\".concat(window.innerWidth, \" \\xD7 \").concat(window.innerHeight),\n        wallpapersTotal: totalWallpapers,\n        wallpapersTheme: themeWallpapers\n      };\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('notification:show', {\n        title: 'Desktop Information',\n        message: \"Theme: \".concat(info.theme, \"\\nWallpaper: \").concat(info.wallpaper, \"\\n\\nDesktop Icons: \").concat(info.icons, \"\\nTotal Apps: \").concat(info.totalApps, \"\\nWallpapers: \").concat(info.wallpapersTheme, \" of \").concat(info.wallpapersTotal, \"\\nResolution: \").concat(info.resolution),\n        type: 'info',\n        duration: 6000\n      });\n    }\n\n    /**\n     * Open app from context menu\n     */\n  }, {\n    key: \"openAppFromContextMenu\",\n    value: function openAppFromContextMenu() {\n      var _this$contextMenuTarg, _this$contextMenuTarg2;\n      var appIcon = (_this$contextMenuTarg = this.contextMenuTarget) === null || _this$contextMenuTarg === void 0 || (_this$contextMenuTarg2 = _this$contextMenuTarg.closest) === null || _this$contextMenuTarg2 === void 0 ? void 0 : _this$contextMenuTarg2.call(_this$contextMenuTarg, '.desktop-icon');\n      if (appIcon) {\n        appIcon.click(); // Trigger the app's click handler\n      }\n    }\n\n    /**\n     * Open app externally in new tab/window\n     */\n  }, {\n    key: \"openAppExternally\",\n    value: function openAppExternally() {\n      var _this$contextMenuTarg3, _this$contextMenuTarg4;\n      var appIcon = (_this$contextMenuTarg3 = this.contextMenuTarget) === null || _this$contextMenuTarg3 === void 0 || (_this$contextMenuTarg4 = _this$contextMenuTarg3.closest) === null || _this$contextMenuTarg4 === void 0 ? void 0 : _this$contextMenuTarg4.call(_this$contextMenuTarg3, '.desktop-icon');\n      if (!appIcon) return;\n      var appId = appIcon.dataset.appId;\n      var app = this.desktopApps.find(function (a) {\n        return a.id === appId;\n      });\n      if (!app) return;\n      var externalUrl = null;\n\n      // Handle external links\n      if (app.type === 'external' && app.url) {\n        externalUrl = app.url;\n      }\n\n      // Handle documents (PDFs)\n      if (app.type === 'document' && app.filePath) {\n        // Convert relative path to absolute URL\n        externalUrl = window.location.origin + app.filePath;\n      }\n      if (externalUrl) {\n        window.open(externalUrl, '_blank', 'noopener,noreferrer');\n        console.log('üåê Opened externally:', externalUrl);\n      }\n    }\n\n    /**\n     * Show application information\n     */\n  }, {\n    key: \"showAppInfo\",\n    value: function showAppInfo() {\n      var _this$contextMenuTarg5, _this$contextMenuTarg6;\n      var appIcon = (_this$contextMenuTarg5 = this.contextMenuTarget) === null || _this$contextMenuTarg5 === void 0 || (_this$contextMenuTarg6 = _this$contextMenuTarg5.closest) === null || _this$contextMenuTarg6 === void 0 ? void 0 : _this$contextMenuTarg6.call(_this$contextMenuTarg5, '.desktop-icon');\n      if (!appIcon) return;\n      var appId = appIcon.dataset.appId || 'unknown';\n\n      // Find app from loaded desktop apps\n      var app = this.desktopApps.find(function (a) {\n        return a.id === appId;\n      });\n      if (!app) {\n        _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('notification:show', {\n          title: 'Application',\n          message: 'Application information not available',\n          type: 'warning',\n          duration: 3000\n        });\n        return;\n      }\n\n      // Calculate app size dynamically (estimate based on type)\n      var estimatedSize = this.estimateAppSize(app);\n      var appType = this.getAppType(app);\n      var version = this.getAppVersion(app);\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('notification:show', {\n        title: app.name,\n        message: \"\".concat(app.description || 'No description available', \"\\n\\nType: \").concat(appType, \"\\nVersion: \").concat(version, \"\\nSize: \").concat(estimatedSize),\n        type: 'info',\n        duration: 7000\n      });\n    }\n\n    /**\n     * Get application type based on app properties\n     */\n  }, {\n    key: \"getAppType\",\n    value: function getAppType(app) {\n      if (app.type === 'external') {\n        return 'External Link';\n      }\n\n      // Categorize based on component or id\n      var systemApps = ['preferences', 'finder', 'terminal'];\n      var utilityApps = ['calculator', 'notes', 'calendar'];\n      if (systemApps.includes(app.id)) {\n        return 'System Application';\n      } else if (utilityApps.includes(app.id)) {\n        return 'Utility';\n      } else if (app.id === 'portfolio') {\n        return 'Portfolio Application';\n      } else if (app.id === 'browser') {\n        return 'Internet Application';\n      }\n      return 'Application';\n    }\n\n    /**\n     * Estimate app size (in reality, this would come from build system)\n     * TODO: In production, calculate actual bundle sizes from webpack stats\n     * or store in desktop-apps.json with actual build sizes\n     */\n  }, {\n    key: \"estimateAppSize\",\n    value: function estimateAppSize(app) {\n      // Base size on app type and complexity\n      if (app.type === 'external') {\n        return 'N/A (External)';\n      }\n\n      // TODO: Replace with actual sizes from build manifest\n      // These are estimates - in production should use real bundle analysis\n      var componentSizes = {\n        'portfolio': '2.4 MB',\n        'terminal': '850 KB',\n        'preferences': '1.2 MB',\n        'finder': '3.1 MB',\n        'browser': '4.5 MB',\n        'about': '1.8 MB',\n        'contact': '1.1 MB',\n        'calculator': '450 KB',\n        'notes': '680 KB'\n      };\n      return componentSizes[app.id] || '~1.0 MB';\n    }\n\n    /**\n     * Get app version (could come from package.json or app metadata)\n     * TODO: Pull version from app component's package.json or metadata\n     * Consider adding 'version' field to desktop-apps.json\n     */\n  }, {\n    key: \"getAppVersion\",\n    value: function getAppVersion(app) {\n      // In production, this should come from app manifest or package.json\n      // For now, use semantic versioning based on app maturity\n      var versions = {\n        'portfolio': '2.1.0',\n        'terminal': '1.5.2',\n        'preferences': '1.0.0',\n        'finder': '1.8.3',\n        'browser': '1.2.1',\n        'about': '1.4.0',\n        'contact': '1.3.0',\n        'calculator': '1.0.1',\n        'github': 'External',\n        'linkedin': 'External'\n      };\n      return versions[app.id] || '1.0.0';\n    }\n\n    /**\n     * Get detailed app information (LEGACY - kept for backward compatibility)\n     * @deprecated Use app data from this.desktopApps instead\n     */\n  }, {\n    key: \"getAppDetails\",\n    value: function getAppDetails(appId, appName) {\n      // Find app from loaded apps\n      var app = this.desktopApps.find(function (a) {\n        return a.id === appId;\n      });\n      if (app) {\n        return {\n          description: app.description || 'Application',\n          type: this.getAppType(app),\n          version: this.getAppVersion(app),\n          size: this.estimateAppSize(app)\n        };\n      }\n\n      // Fallback for unknown apps\n      return {\n        description: 'Application',\n        type: 'Application',\n        version: '1.0.0',\n        size: 'Unknown'\n      };\n    }\n\n    /**\n     * Load image with promise\n     */\n  }, {\n    key: \"loadImage\",\n    value: function loadImage(src) {\n      return new Promise(function (resolve, reject) {\n        var img = new Image();\n        img.onload = function () {\n          return resolve(img);\n        };\n        img.onerror = reject;\n        img.src = src;\n      });\n    }\n\n    /**\n     * Delay utility\n     */\n  }, {\n    key: \"delay\",\n    value: function delay(ms) {\n      return new Promise(function (resolve) {\n        return setTimeout(resolve, ms);\n      });\n    }\n\n    /**\n     * Animation utility\n     */\n  }, {\n    key: \"animate\",\n    value: function animate(element, keyframes, options) {\n      if (this.config.performanceMode === 'low') {\n        return Promise.resolve();\n      }\n      return element.animate(keyframes, options).finished;\n    }\n\n    /**\n     * Get progress text based on percentage\n     */\n  }, {\n    key: \"getProgressText\",\n    value: function getProgressText(percentage) {\n      if (percentage < 20) return 'Starting up...';\n      if (percentage < 40) return 'Loading components...';\n      if (percentage < 60) return 'Initializing systems...';\n      if (percentage < 80) return 'Preparing desktop...';\n      return 'Almost ready...';\n    }\n\n    /**\n     * Get default boot messages\n     */\n  }, {\n    key: \"getDefaultBootMessages\",\n    value: function getDefaultBootMessages() {\n      return ['Initializing AbdulmeLink Portfolio...', 'Loading LinkOS interface...', 'Configuring EventBus system...', 'Loading wallpapers and assets...', 'Setting up desktop environment...', 'Starting services...', 'Almost ready...'];\n    }\n\n    /**\n     * Detect device performance mode\n     */\n  }, {\n    key: \"detectPerformanceMode\",\n    value: function detectPerformanceMode() {\n      var isMobile = /Mobi|Android/i.test(navigator.userAgent);\n      var cores = navigator.hardwareConcurrency || 2;\n      var memory = navigator.deviceMemory || 2;\n      var isLowEnd = cores < 4 || memory < 4;\n      if (isMobile || isLowEnd) return 'mobile';\n      if (cores >= 8 && memory >= 8) return 'high';\n      return 'auto';\n    }\n\n    /**\n     * Get default preferences\n     */\n  }, {\n    key: \"getDefaultPreferences\",\n    value: function getDefaultPreferences() {\n      return {\n        appearance: {\n          theme: 'auto',\n          transparency: 0.9\n        },\n        desktop: {\n          wallpaper: null,\n          autoRotate: true,\n          showLabels: true\n        },\n        performance: {\n          animations: true,\n          effects: true,\n          quality: 'auto'\n        }\n      };\n    }\n\n    /**\n     * Get default wallpapers\n     */\n  }, {\n    key: \"getDefaultWallpapers\",\n    value: function getDefaultWallpapers() {\n      return [{\n        id: 'default-1',\n        name: 'LinkOS Big Sur',\n        url: '/images/wallpapers/big-sur.jpg',\n        thumbnail: '/images/wallpapers/thumbs/big-sur.jpg',\n        type: 'light'\n      }, {\n        id: 'default-2',\n        name: 'LinkOS Monterey',\n        url: '/images/wallpapers/monterey.jpg',\n        thumbnail: '/images/wallpapers/thumbs/monterey.jpg',\n        type: 'dark'\n      }];\n    }\n\n    /**\n     * Get default session data\n     */\n  }, {\n    key: \"getDefaultSessionData\",\n    value: function getDefaultSessionData() {\n      return {\n        timestamp: Date.now(),\n        firstVisit: true,\n        bootCount: 1\n      };\n    }\n\n    /**\n     * Get default desktop applications\n     */\n  }, {\n    key: \"getDefaultApps\",\n    value: function getDefaultApps() {\n      return [{\n        id: 'portfolio',\n        name: 'Portfolio',\n        icon: '/images/icons/portfolio.png',\n        type: 'internal',\n        component: 'Portfolio',\n        position: {\n          x: 60,\n          y: 60\n        },\n        featured: true\n      }, {\n        id: 'terminal',\n        name: 'Terminal',\n        icon: '/images/icons/terminal.png',\n        type: 'internal',\n        component: 'Terminal',\n        position: {\n          x: 180,\n          y: 60\n        },\n        featured: true\n      }, {\n        id: 'about',\n        name: 'About Me',\n        icon: '/images/icons/about.png',\n        type: 'internal',\n        component: 'About',\n        position: {\n          x: 300,\n          y: 60\n        },\n        featured: true\n      }, {\n        id: 'contact',\n        name: 'Contact',\n        icon: '/images/icons/contact.png',\n        type: 'internal',\n        component: 'Contact',\n        position: {\n          x: 420,\n          y: 60\n        },\n        featured: true\n      }];\n    }\n\n    /**\n     * Create desktop icons for all apps\n     */\n  }, {\n    key: \"createDesktopIcons\",\n    value: function createDesktopIcons() {\n      var _this$preferences$des,\n        _this7 = this;\n      if (!this.iconsContainer) return;\n\n      // Clear existing icons\n      this.iconsContainer.innerHTML = '';\n\n      // Get apps to show (featured by default unless preferences say otherwise)\n      var showAllApps = ((_this$preferences$des = this.preferences.desktop) === null || _this$preferences$des === void 0 ? void 0 : _this$preferences$des.showAllApps) !== false;\n      var appsToShow = showAllApps ? this.desktopApps : this.desktopApps.filter(function (app) {\n        return app.featured;\n      });\n      appsToShow.forEach(function (app) {\n        _this7.createDesktopIcon(app);\n      });\n      console.log(\"Created \".concat(appsToShow.length, \" desktop icons\"));\n    }\n\n    /**\n     * Create individual desktop icon\n     */\n  }, {\n    key: \"createDesktopIcon\",\n    value: function createDesktopIcon(app) {\n      var _this$preferences$des2;\n      var icon = document.createElement('div');\n      icon.className = 'desktop-icon';\n      icon.dataset.appId = app.id;\n      icon.dataset.appType = app.type;\n\n      // Set initial position\n      icon.style.cssText = \"\\n            position: absolute;\\n            left: \".concat(app.position.x, \"px;\\n            top: \").concat(app.position.y, \"px;\\n            width: 80px;\\n            cursor: pointer;\\n            user-select: none;\\n            transform-origin: center;\\n            transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);\\n            display: flex;\\n            flex-direction: column;\\n            align-items: center;\\n            gap: 8px;\\n        \");\n\n      // Create icon image\n      var iconImg = document.createElement('div');\n      iconImg.className = 'icon-image';\n      iconImg.style.cssText = \"\\n            width: 64px;\\n            height: 64px;\\n            background-image: url(\".concat(app.icon, \");\\n            background-size: cover;\\n            background-position: center;\\n            border-radius: 12px;\\n            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\\n            transition: all 200ms ease;\\n        \");\n\n      // Create icon label\n      var showLabels = ((_this$preferences$des2 = this.preferences.desktop) === null || _this$preferences$des2 === void 0 ? void 0 : _this$preferences$des2.showIconLabels) !== false;\n      var iconLabel = null;\n      if (showLabels) {\n        iconLabel = document.createElement('div');\n        iconLabel.className = 'icon-label';\n        iconLabel.textContent = app.name;\n        iconLabel.style.cssText = \"\\n                color: white;\\n                font-size: 11px;\\n                font-weight: 500;\\n                text-align: center;\\n                text-shadow: 0 1px 2px rgba(0, 0, 0, 0.8);\\n                max-width: 80px;\\n                line-height: 1.2;\\n                word-wrap: break-word;\\n            \";\n      }\n\n      // Assemble icon\n      icon.appendChild(iconImg);\n      if (iconLabel) {\n        icon.appendChild(iconLabel);\n      }\n\n      // Add event listeners\n      this.addIconEventListeners(icon, app);\n\n      // Add to container\n      this.iconsContainer.appendChild(icon);\n    }\n\n    /**\n     * Add event listeners to desktop icon\n     */\n  }, {\n    key: \"addIconEventListeners\",\n    value: function addIconEventListeners(iconElement, app) {\n      var _this8 = this;\n      var iconImg = iconElement.querySelector('.icon-image');\n      var isDragging = false;\n      var dragStartPos = {\n        x: 0,\n        y: 0\n      };\n      var iconStartPos = {\n        x: 0,\n        y: 0\n      };\n\n      // Hover effects\n      iconElement.addEventListener('mouseenter', function () {\n        if (!isDragging) {\n          iconImg.style.transform = 'scale(1.1) rotate(5deg)';\n          iconImg.style.boxShadow = '0 6px 20px rgba(0, 0, 0, 0.4)';\n        }\n      });\n      iconElement.addEventListener('mouseleave', function () {\n        if (!isDragging) {\n          iconImg.style.transform = 'scale(1) rotate(0deg)';\n          iconImg.style.boxShadow = '0 2px 8px rgba(0, 0, 0, 0.2)';\n        }\n      });\n\n      // Double-click to open app\n      iconElement.addEventListener('dblclick', function (e) {\n        e.preventDefault();\n        _this8.openApp(app);\n      });\n\n      // Drag functionality\n      iconElement.addEventListener('mousedown', function (e) {\n        if (e.button !== 0) return; // Only left mouse button\n\n        isDragging = true;\n        iconElement.style.opacity = '0.8';\n        iconElement.style.zIndex = '9999';\n        dragStartPos = {\n          x: e.clientX,\n          y: e.clientY\n        };\n        var rect = iconElement.getBoundingClientRect();\n        iconStartPos = {\n          x: rect.left,\n          y: rect.top\n        };\n        e.preventDefault();\n      });\n\n      // Global mouse move for dragging\n      document.addEventListener('mousemove', function (e) {\n        if (!isDragging) return;\n        var deltaX = e.clientX - dragStartPos.x;\n        var deltaY = e.clientY - dragStartPos.y;\n        var newX = iconStartPos.x + deltaX;\n        var newY = iconStartPos.y + deltaY;\n        iconElement.style.left = newX + 'px';\n        iconElement.style.top = newY + 'px';\n      });\n\n      // Global mouse up to end dragging\n      document.addEventListener('mouseup', function (e) {\n        if (!isDragging) return;\n        isDragging = false;\n        iconElement.style.opacity = '1';\n        iconElement.style.zIndex = 'auto';\n\n        // Snap to grid\n        var rect = iconElement.getBoundingClientRect();\n        var snappedPos = _this8.snapToGrid({\n          x: rect.left,\n          y: rect.top\n        });\n        iconElement.style.left = snappedPos.x + 'px';\n        iconElement.style.top = snappedPos.y + 'px';\n\n        // Update app position\n        app.position = snappedPos;\n\n        // Save positions\n        _this8.saveIconPositions();\n\n        // Reset hover effects\n        iconImg.style.transform = 'scale(1) rotate(0deg)';\n        iconImg.style.boxShadow = '0 2px 8px rgba(0, 0, 0, 0.2)';\n      });\n    }\n\n    /**\n     * Snap position to grid\n     */\n  }, {\n    key: \"snapToGrid\",\n    value: function snapToGrid(position) {\n      var gridSize = this.config.iconGridSize;\n      var snapThreshold = 15;\n      var snappedX = Math.round(position.x / gridSize) * gridSize;\n      var snappedY = Math.round(position.y / gridSize) * gridSize;\n\n      // Only snap if close enough\n      var deltaX = Math.abs(position.x - snappedX);\n      var deltaY = Math.abs(position.y - snappedY);\n      return {\n        x: deltaX < snapThreshold ? snappedX : position.x,\n        y: deltaY < snapThreshold ? snappedY : position.y\n      };\n    }\n\n    /**\n     * Open desktop application\n     */\n  }, {\n    key: \"openApp\",\n    value: function openApp(app) {\n      console.log('Opening app:', app.name, 'Type:', app.type, 'openInNewTab:', app.openInNewTab, 'URL:', app.url);\n      if (app.type === 'document') {\n        // Open document file (PDF, etc.) in file viewer\n        var fileName = app.filePath ? app.filePath.split('/').pop() : app.name + '.pdf';\n        _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('file:open', {\n          path: app.filePath || \"/documents/\".concat(fileName),\n          name: fileName,\n          content: '',\n          // PDF content loaded by iframe\n          size: 0,\n          modified: new Date().toISOString(),\n          type: app.fileType || 'pdf'\n        });\n        console.log('üìÑ Opened document:', fileName);\n      } else if (app.type === 'external' || app.type === 'link') {\n        // Check if app should open in new tab directly\n        if (app.openInNewTab === true) {\n          // Open directly in new browser tab (for sites that block iframes)\n          window.open(app.url, '_blank', 'noopener,noreferrer');\n          console.log('üåê Opened in new tab:', app.url);\n        } else {\n          // Open in browser app with iframe (default behavior)\n          _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('app:launch', {\n            appId: 'browser',\n            url: app.url,\n            name: 'Browser'\n          });\n        }\n      } else {\n        // Open internal component via EventBus\n        _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('app:launch', {\n          appId: app.id,\n          component: app.component,\n          name: app.name,\n          config: {\n            title: app.name,\n            size: app.size || {\n              width: 800,\n              height: 600\n            }\n          }\n        });\n      }\n\n      // Add to recent apps\n      this.addToRecentApps(app);\n    }\n\n    /**\n     * Add app to recent apps list\n     */\n  }, {\n    key: \"addToRecentApps\",\n    value: function addToRecentApps(app) {\n      if (!this.sessionData.recentApps) {\n        this.sessionData.recentApps = [];\n      }\n\n      // Remove if already exists\n      this.sessionData.recentApps = this.sessionData.recentApps.filter(function (recent) {\n        return recent.id !== app.id;\n      });\n\n      // Add to beginning\n      this.sessionData.recentApps.unshift({\n        id: app.id,\n        name: app.name,\n        timestamp: Date.now()\n      });\n\n      // Keep only last 10\n      this.sessionData.recentApps = this.sessionData.recentApps.slice(0, 10);\n\n      // Save session data\n      this.saveCurrentState();\n    }\n\n    /**\n     * Save desktop icon positions\n     */\n  }, {\n    key: \"saveIconPositions\",\n    value: function saveIconPositions() {\n      var positions = {};\n      var icons = this.iconsContainer.querySelectorAll('.desktop-icon');\n      icons.forEach(function (iconElement) {\n        var appId = iconElement.dataset.appId;\n        var rect = iconElement.getBoundingClientRect();\n        positions[appId] = {\n          x: parseInt(iconElement.style.left),\n          y: parseInt(iconElement.style.top)\n        };\n      });\n      localStorage.setItem('desktop_icon_positions', JSON.stringify(positions));\n    }\n\n    /**\n     * Load saved icon positions\n     */\n  }, {\n    key: \"loadIconPositions\",\n    value: function loadIconPositions() {\n      try {\n        var saved = localStorage.getItem('desktop_icon_positions');\n        if (saved) {\n          var positions = JSON.parse(saved);\n\n          // Update app positions\n          this.desktopApps.forEach(function (app) {\n            if (positions[app.id]) {\n              app.position = positions[app.id];\n            }\n          });\n        }\n      } catch (error) {\n        console.warn('Failed to load icon positions:', error);\n      }\n    }\n  }, {\n    key: \"handleError\",\n    value: function handleError(error) {\n      console.error('Desktop error:', error);\n\n      // Hide boot overlay if it's showing\n      if (this.bootOverlay && this.isBooting) {\n        this.bootOverlay.style.display = 'none';\n        this.isBooting = false;\n      }\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('desktop:error', {\n        error: error.message\n      });\n    }\n\n    /**\n     * Progressive wallpaper loading - Load image with caching and transition\n     */\n  }, {\n    key: \"loadWallpaperImage\",\n    value: function () {\n      var _loadWallpaperImage = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee18(imageUrl) {\n        var _this9 = this;\n        var isThumbnail,\n          _args18 = arguments;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee18$(_context18) {\n          while (1) switch (_context18.prev = _context18.next) {\n            case 0:\n              isThumbnail = _args18.length > 1 && _args18[1] !== undefined ? _args18[1] : false;\n              return _context18.abrupt(\"return\", new Promise(function (resolve, reject) {\n                // Check cache first\n                if (_this9.wallpaperCache.has(imageUrl)) {\n                  _this9.applyWallpaperImage(imageUrl);\n                  resolve();\n                  return;\n                }\n                var img = new Image();\n                img.onload = function () {\n                  // Cache the loaded image\n                  _this9.wallpaperCache.set(imageUrl, img);\n\n                  // Apply with smooth transition\n                  _this9.applyWallpaperImage(imageUrl, isThumbnail);\n                  resolve();\n                };\n                img.onerror = function () {\n                  console.error('Failed to load wallpaper image:', imageUrl);\n                  reject(new Error(\"Failed to load \".concat(isThumbnail ? 'thumbnail' : 'wallpaper', \": \").concat(imageUrl)));\n                };\n                img.src = imageUrl;\n              }));\n            case 2:\n            case \"end\":\n              return _context18.stop();\n          }\n        }, _callee18);\n      }));\n      function loadWallpaperImage(_x6) {\n        return _loadWallpaperImage.apply(this, arguments);\n      }\n      return loadWallpaperImage;\n    }()\n    /**\n     * Apply wallpaper image with smooth crossfade transition\n     */\n  }, {\n    key: \"applyWallpaperImage\",\n    value: function applyWallpaperImage(imageUrl) {\n      var _this10 = this;\n      var isThumbnail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!this.wallpaperContainer) return;\n      var duration = this.config.wallpaperTransitionDuration;\n\n      // Create temporary container for crossfade effect\n      if (!isThumbnail && this.wallpaperContainer.style.backgroundImage) {\n        var tempContainer = this.wallpaperContainer.cloneNode(false);\n        tempContainer.style.opacity = '0';\n        tempContainer.style.backgroundImage = \"url(\".concat(imageUrl, \")\");\n        tempContainer.style.transition = \"opacity \".concat(duration, \"ms ease-in-out\");\n        this.wallpaperContainer.parentNode.appendChild(tempContainer);\n\n        // Trigger transition\n        requestAnimationFrame(function () {\n          tempContainer.style.opacity = '1';\n          _this10.wallpaperContainer.style.opacity = '0';\n          setTimeout(function () {\n            _this10.wallpaperContainer.style.backgroundImage = \"url(\".concat(imageUrl, \")\");\n            _this10.wallpaperContainer.style.opacity = '1';\n            _this10.wallpaperContainer.style.transition = '';\n            tempContainer.remove();\n          }, duration);\n        });\n      } else {\n        // Direct application for thumbnails or first load\n        this.wallpaperContainer.style.backgroundImage = \"url(\".concat(imageUrl, \")\");\n      }\n    }\n\n    /**\n     * Preload wallpaper thumbnails for faster switching\n     */\n  }, {\n    key: \"preloadWallpaperThumbnails\",\n    value: function () {\n      var _preloadWallpaperThumbnails = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee19() {\n        var _this11 = this;\n        var preloadPromises;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee19$(_context19) {\n          while (1) switch (_context19.prev = _context19.next) {\n            case 0:\n              if (!(!this.wallpapers || this.wallpapers.length === 0)) {\n                _context19.next = 2;\n                break;\n              }\n              return _context19.abrupt(\"return\");\n            case 2:\n              console.log('Preloading wallpaper thumbnails...');\n              preloadPromises = this.wallpapers.filter(function (wallpaper) {\n                return wallpaper.thumbnail;\n              }).slice(0, 10) // Limit to first 10 to avoid overwhelming bandwidth\n              .map(function (wallpaper) {\n                return new Promise(function (resolve) {\n                  var img = new Image();\n                  img.onload = function () {\n                    _this11.wallpaperCache.set(wallpaper.thumbnail, img);\n                    resolve();\n                  };\n                  img.onerror = function () {\n                    return resolve();\n                  }; // Don't fail the whole preload\n                  img.src = wallpaper.thumbnail;\n                });\n              });\n              _context19.next = 6;\n              return Promise.all(preloadPromises);\n            case 6:\n              console.log('Thumbnails preloaded successfully');\n            case 7:\n            case \"end\":\n              return _context19.stop();\n          }\n        }, _callee19, this);\n      }));\n      function preloadWallpaperThumbnails() {\n        return _preloadWallpaperThumbnails.apply(this, arguments);\n      }\n      return preloadWallpaperThumbnails;\n    }()\n    /**\n     * Setup automatic wallpaper rotation timer\n     */\n  }, {\n    key: \"setupWallpaperRotation\",\n    value: function setupWallpaperRotation() {\n      var _this$preferences$des3,\n        _this12 = this;\n      // Clear existing timer\n      if (this.rotationTimer) {\n        clearInterval(this.rotationTimer);\n      }\n\n      // Check if auto-rotation is enabled in preferences\n      var rotationEnabled = ((_this$preferences$des3 = this.preferences.desktop) === null || _this$preferences$des3 === void 0 ? void 0 : _this$preferences$des3.autoRotation) !== false;\n      if (rotationEnabled && this.wallpapers.length > 1) {\n        this.rotationTimer = setInterval(function () {\n          _this12.rotateToNextWallpaper();\n        }, this.config.rotationInterval);\n        console.log(\"Auto-rotation enabled: every \".concat(this.config.rotationInterval / 60000, \" minutes\"));\n      }\n    }\n\n    /**\n     * Rotate to next wallpaper based on time or random selection\n     */\n  }, {\n    key: \"rotateToNextWallpaper\",\n    value: function () {\n      var _rotateToNextWallpaper = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee20() {\n        var _this13 = this;\n        var _this$currentWallpape, timeBasedWallpaper, availableWallpapers, randomIndex, nextWallpaper;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee20$(_context20) {\n          while (1) switch (_context20.prev = _context20.next) {\n            case 0:\n              _context20.prev = 0;\n              _context20.next = 3;\n              return this.getTimeBasedWallpaper();\n            case 3:\n              timeBasedWallpaper = _context20.sent;\n              if (!(timeBasedWallpaper && timeBasedWallpaper.id !== ((_this$currentWallpape = this.currentWallpaper) === null || _this$currentWallpape === void 0 ? void 0 : _this$currentWallpape.id))) {\n                _context20.next = 8;\n                break;\n              }\n              _context20.next = 7;\n              return this.changeWallpaper(timeBasedWallpaper);\n            case 7:\n              return _context20.abrupt(\"return\");\n            case 8:\n              if (!(this.wallpapers.length > 1)) {\n                _context20.next = 15;\n                break;\n              }\n              availableWallpapers = this.wallpapers.filter(function (w) {\n                var _this13$currentWallpa;\n                return w.id !== ((_this13$currentWallpa = _this13.currentWallpaper) === null || _this13$currentWallpa === void 0 ? void 0 : _this13$currentWallpa.id);\n              });\n              if (!(availableWallpapers.length > 0)) {\n                _context20.next = 15;\n                break;\n              }\n              randomIndex = Math.floor(Math.random() * availableWallpapers.length);\n              nextWallpaper = availableWallpapers[randomIndex];\n              _context20.next = 15;\n              return this.changeWallpaper(nextWallpaper);\n            case 15:\n              _context20.next = 20;\n              break;\n            case 17:\n              _context20.prev = 17;\n              _context20.t0 = _context20[\"catch\"](0);\n              console.error('Failed to rotate wallpaper:', _context20.t0);\n            case 20:\n            case \"end\":\n              return _context20.stop();\n          }\n        }, _callee20, this, [[0, 17]]);\n      }));\n      function rotateToNextWallpaper() {\n        return _rotateToNextWallpaper.apply(this, arguments);\n      }\n      return rotateToNextWallpaper;\n    }()\n    /**\n     * Load time-based wallpaper from API\n     */\n  }, {\n    key: \"loadTimeBasedWallpaper\",\n    value: function () {\n      var _loadTimeBasedWallpaper = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee21() {\n        var _this$sessionData2, hasSavedWallpaper, wallpaper;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee21$(_context21) {\n          while (1) switch (_context21.prev = _context21.next) {\n            case 0:\n              _context21.prev = 0;\n              // Don't override user's saved wallpaper preference\n              hasSavedWallpaper = localStorage.getItem('current_wallpaper') || ((_this$sessionData2 = this.sessionData) === null || _this$sessionData2 === void 0 ? void 0 : _this$sessionData2.wallpaper);\n              if (!hasSavedWallpaper) {\n                _context21.next = 5;\n                break;\n              }\n              console.log('User has saved wallpaper preference, skipping time-based loading');\n              return _context21.abrupt(\"return\");\n            case 5:\n              console.log('Loading time-based wallpaper...');\n              _context21.next = 8;\n              return this.getTimeBasedWallpaper();\n            case 8:\n              wallpaper = _context21.sent;\n              if (!wallpaper) {\n                _context21.next = 12;\n                break;\n              }\n              _context21.next = 12;\n              return this.changeWallpaper(wallpaper);\n            case 12:\n              _context21.next = 17;\n              break;\n            case 14:\n              _context21.prev = 14;\n              _context21.t0 = _context21[\"catch\"](0);\n              console.warn('Failed to load time-based wallpaper:', _context21.t0);\n            case 17:\n            case \"end\":\n              return _context21.stop();\n          }\n        }, _callee21, this, [[0, 14]]);\n      }));\n      function loadTimeBasedWallpaper() {\n        return _loadTimeBasedWallpaper.apply(this, arguments);\n      }\n      return loadTimeBasedWallpaper;\n    }()\n    /**\n     * Get time-appropriate wallpaper\n     */\n  }, {\n    key: \"getTimeBasedWallpaper\",\n    value: function () {\n      var _getTimeBasedWallpaper = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee22() {\n        var response, data;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee22$(_context22) {\n          while (1) switch (_context22.prev = _context22.next) {\n            case 0:\n              _context22.prev = 0;\n              _context22.next = 3;\n              return fetch('/api/wallpapers/time-based');\n            case 3:\n              response = _context22.sent;\n              _context22.next = 6;\n              return response.json();\n            case 6:\n              data = _context22.sent;\n              if (!(data.success && data.data.length > 0)) {\n                _context22.next = 9;\n                break;\n              }\n              return _context22.abrupt(\"return\", data.data[0]);\n            case 9:\n              return _context22.abrupt(\"return\", null);\n            case 12:\n              _context22.prev = 12;\n              _context22.t0 = _context22[\"catch\"](0);\n              console.error('Failed to get time-based wallpaper:', _context22.t0);\n              return _context22.abrupt(\"return\", null);\n            case 16:\n            case \"end\":\n              return _context22.stop();\n          }\n        }, _callee22, null, [[0, 12]]);\n      }));\n      function getTimeBasedWallpaper() {\n        return _getTimeBasedWallpaper.apply(this, arguments);\n      }\n      return getTimeBasedWallpaper;\n    }()\n    /**\n     * Load fallback wallpaper on errors\n     */\n  }, {\n    key: \"loadFallbackWallpaper\",\n    value: function loadFallbackWallpaper() {\n      var fallback = {\n        id: 'fallback',\n        name: 'Default',\n        fullImage: '/images/wallpapers/default.jpg',\n        thumbnail: '/images/wallpapers/default.jpg'\n      };\n\n      // Simple fallback without progressive loading\n      this.wallpaperContainer.style.backgroundImage = \"url(\".concat(fallback.fullImage, \")\");\n      this.currentWallpaper = fallback;\n    }\n\n    /**\n     * Save current desktop state\n     */\n  }, {\n    key: \"saveCurrentState\",\n    value: function saveCurrentState() {\n      var _this$sessionData3;\n      var sessionData = {\n        timestamp: Date.now(),\n        wallpaper: this.currentWallpaper,\n        preferences: this.preferences,\n        bootCount: ((_this$sessionData3 = this.sessionData) === null || _this$sessionData3 === void 0 ? void 0 : _this$sessionData3.bootCount) || 0\n      };\n      try {\n        var _this$currentWallpape2, _this$currentWallpape3;\n        localStorage.setItem('desktop_session', JSON.stringify(sessionData));\n        // Update the local sessionData object so it's immediately available\n        this.sessionData = sessionData;\n        console.log('Desktop state saved with wallpaper:', ((_this$currentWallpape2 = this.currentWallpaper) === null || _this$currentWallpape2 === void 0 ? void 0 : _this$currentWallpape2.name) || ((_this$currentWallpape3 = this.currentWallpaper) === null || _this$currentWallpape3 === void 0 ? void 0 : _this$currentWallpape3.id));\n      } catch (error) {\n        console.warn('Failed to save desktop state:', error);\n      }\n    }\n\n    /**\n     * Clean up resources and timers\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // Clear rotation timer\n      if (this.rotationTimer) {\n        clearInterval(this.rotationTimer);\n        this.rotationTimer = null;\n      }\n\n      // Clear wallpaper cache\n      this.wallpaperCache.clear();\n\n      // Remove event listeners\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].off('wallpaper:change', this.changeWallpaper.bind(this));\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].off('preferences:changed', this.onPreferencesChanged.bind(this));\n      console.log('Desktop component destroyed and cleaned up');\n    }\n\n    /**\n     * Get random default wallpaper for first-time users\n     * Uses deterministic randomization based on browser/session fingerprint\n     */\n  }, {\n    key: \"getRandomDefaultWallpaper\",\n    value: function getRandomDefaultWallpaper() {\n      try {\n        // Create a unique identifier for this browser/user\n        var fingerprint = this.generateUserFingerprint();\n\n        // Use fingerprint to deterministically select a wallpaper\n        var availableWallpapers = this.wallpapers.filter(function (w) {\n          return w.category === 'System' || w.category === 'Classic';\n        });\n        if (availableWallpapers.length === 0) {\n          return this.wallpapers[0] || null;\n        }\n\n        // Create deterministic random index from fingerprint\n        var hash = 0;\n        for (var i = 0; i < fingerprint.length; i++) {\n          var _char = fingerprint.charCodeAt(i);\n          hash = (hash << 5) - hash + _char;\n          hash = hash & hash; // Convert to 32-bit integer\n        }\n        var index = Math.abs(hash) % availableWallpapers.length;\n        var selectedWallpaper = availableWallpapers[index];\n        console.log(\"\\uD83C\\uDFB2 New user detected! Assigned random default wallpaper: \".concat(selectedWallpaper.name, \" (index \").concat(index, \"/\").concat(availableWallpapers.length, \")\"));\n        console.log(\"\\uD83D\\uDC64 User fingerprint: \".concat(fingerprint.substring(0, 8), \"...\"));\n        return selectedWallpaper;\n      } catch (error) {\n        console.error('Error generating random default wallpaper:', error);\n        return this.wallpapers[0] || null;\n      }\n    }\n\n    /**\n     * Generate a semi-unique fingerprint for this browser/user\n     * Combines various browser characteristics for deterministic randomization\n     */\n  }, {\n    key: \"generateUserFingerprint\",\n    value: function generateUserFingerprint() {\n      var components = [navigator.userAgent, navigator.language, screen.width + 'x' + screen.height, screen.colorDepth, new Date().getTimezoneOffset(), navigator.platform, navigator.cookieEnabled ? '1' : '0'];\n\n      // Add current date to make it change periodically (optional)\n      // components.push(new Date().toDateString());\n\n      return btoa(components.join('|')).replace(/[^a-zA-Z0-9]/g, '');\n    }\n\n    /**\n     * Check if this is a first-time user (no wallpaper preference saved)\n     */\n  }, {\n    key: \"isFirstTimeUser\",\n    value: function isFirstTimeUser() {\n      var _this$sessionData4, _this$preferences4;\n      // Check for any existing wallpaper settings\n      var hasLocalStorageWallpaper = localStorage.getItem('current_wallpaper');\n      var hasSessionWallpaper = (_this$sessionData4 = this.sessionData) === null || _this$sessionData4 === void 0 ? void 0 : _this$sessionData4.wallpaper;\n      var hasPreferenceWallpaper = (_this$preferences4 = this.preferences) === null || _this$preferences4 === void 0 || (_this$preferences4 = _this$preferences4.desktop) === null || _this$preferences4 === void 0 ? void 0 : _this$preferences4.wallpaper;\n\n      // Check for first visit flag (set after first smart selection)\n      var hasVisitedBefore = localStorage.getItem('portfolio_visited');\n      var isFirstTime = !hasLocalStorageWallpaper && !hasSessionWallpaper && !hasPreferenceWallpaper && !hasVisitedBefore;\n\n      // Don't mark as visited here - let the backend handle this after wallpaper selection\n\n      return isFirstTime;\n    }\n\n    /**\n     * Debug helper: Test wallpaper persistence\n     */\n  }, {\n    key: \"testWallpaperPersistence\",\n    value: function testWallpaperPersistence() {\n      var _this$currentWallpape4;\n      console.log('=== WALLPAPER PERSISTENCE TEST ===');\n      console.log('Current wallpaper:', ((_this$currentWallpape4 = this.currentWallpaper) === null || _this$currentWallpape4 === void 0 ? void 0 : _this$currentWallpape4.name) || 'none');\n      console.log('Available wallpapers:', this.wallpapers.length);\n      console.log('Is first-time user:', this.isFirstTimeUser());\n      var saved = localStorage.getItem('current_wallpaper');\n      console.log('Saved in localStorage:', saved ? JSON.parse(saved) : 'none');\n      var session = localStorage.getItem('desktop_session');\n      console.log('Session data:', session ? JSON.parse(session) : 'none');\n      if (this.wallpapers.length > 0) {\n        console.log('Testing random assignment...');\n        var randomWallpaper = this.getRandomDefaultWallpaper();\n        console.log('Would assign:', (randomWallpaper === null || randomWallpaper === void 0 ? void 0 : randomWallpaper.name) || 'none');\n      }\n    }\n\n    /**\n     * Debug helper: Simulate new user (clear all saved data)\n     */\n  }, {\n    key: \"simulateNewUser\",\n    value: function simulateNewUser() {\n      console.log('üóëÔ∏è Clearing all user data to simulate new user...');\n      localStorage.removeItem('current_wallpaper');\n      localStorage.removeItem('desktop_session');\n      localStorage.removeItem('desktop_icon_positions');\n\n      // Reset session data\n      this.sessionData = null;\n      console.log('‚úÖ User data cleared. Refresh the page to see new user experience.');\n      console.log('üîÑ Or call: location.reload()');\n    }\n\n    /**\n     * Debug helper: Test random wallpaper assignment\n     */\n  }, {\n    key: \"testRandomAssignment\",\n    value: function testRandomAssignment() {\n      console.log('=== RANDOM WALLPAPER ASSIGNMENT TEST ===');\n      var fingerprint = this.generateUserFingerprint();\n      console.log('User fingerprint:', fingerprint.substring(0, 16) + '...');\n\n      // Test multiple times to show consistency\n      for (var i = 0; i < 5; i++) {\n        var randomWallpaper = this.getRandomDefaultWallpaper();\n        console.log(\"Test \".concat(i + 1, \": \").concat((randomWallpaper === null || randomWallpaper === void 0 ? void 0 : randomWallpaper.name) || 'none'));\n      }\n      console.log('‚òùÔ∏è Should be the same wallpaper every time (deterministic)');\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Desktop);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3352\n");

/***/ }),

/***/ 1813:
/*!************************************************!*\
  !*** ./resources/js/components/LinkOS/Dock.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 4467);\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 2284);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _EventBus_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../EventBus.js */ 947);\n/* harmony import */ var _config_ColorConstants_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../config/ColorConstants.js */ 4923);\n\n\n\n\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n\n\n\n\n/**\n * Dock - LinkOS-authentic dock interface with magnification and spring physics\n * Handles app icons, magnification effects, drag-to-rearrange, and context menus\n */\nvar Dock = /*#__PURE__*/function () {\n  function Dock() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this, Dock);\n    this.container = null;\n    this.iconsContainer = null;\n    this.contextMenu = null;\n\n    // State\n    this.apps = [];\n    this.recentApps = [];\n    this.runningApps = new Set();\n    this.preferences = {};\n    this.isDragging = false;\n    this.draggedApp = null;\n\n    // Configuration\n    this.config = {\n      position: 'bottom',\n      // bottom, left, right\n      size: 64,\n      // Icon size in pixels\n      maxScale: 1.5,\n      // Maximum magnification\n      magnetRadius: 100,\n      // Magnification effect radius\n      springDuration: 300,\n      // Animation duration in ms\n      hoverResponse: 50,\n      // Hover response time in ms\n      autoHide: false,\n      magnificationEnabled: true,\n      showRecentApps: true,\n      maxRecentApps: 5\n    };\n    this.init();\n  }\n\n  /**\n   * Initialize dock component\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Dock, [{\n    key: \"init\",\n    value: function () {\n      var _init = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().mark(function _callee() {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return this.loadPreferences();\n            case 3:\n              _context.next = 5;\n              return this.loadDockApps();\n            case 5:\n              this.createElements();\n              this.bindEvents();\n              this.createDockIcons();\n\n              // Setup magnification system\n              this.setupMagnification();\n              _EventBus_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].emit('dock:ready', {\n                apps: this.apps.length,\n                position: this.config.position\n              });\n              _context.next = 15;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              this.handleError(_context.t0);\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 12]]);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n    /**\n     * Create dock elements\n     */\n  }, {\n    key: \"createElements\",\n    value: function createElements() {\n      // Find or create dock container\n      this.container = document.getElementById('dock-container');\n      if (!this.container) {\n        this.container = document.createElement('div');\n        this.container.id = 'dock-container';\n        document.body.appendChild(this.container);\n      }\n\n      // Set classes (dock-container + position class)\n      this.container.className = \"dock-container \".concat(this.config.position);\n\n      // Create inner dock\n      var dock = document.createElement('div');\n      dock.className = 'dock';\n\n      // Create icons container\n      this.iconsContainer = document.createElement('div');\n      this.iconsContainer.className = 'dock-icons';\n\n      // Create context menu\n      this.createContextMenu();\n\n      // Assemble dock\n      dock.appendChild(this.iconsContainer);\n      this.container.appendChild(dock);\n      console.log('Dock elements created. Container class:', this.container.className);\n    }\n\n    /**\n     * Apply position-based styles to dock container\n     */\n  }, {\n    key: \"applyPositionStyles\",\n    value: function applyPositionStyles() {\n      // Update class to include position\n      this.container.className = \"dock-container \".concat(this.config.position);\n    }\n\n    /**\n     * Bind event listeners\n     */\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      // Global mouse move for magnification\n      document.addEventListener('mousemove', this.handleMouseMove.bind(this));\n\n      // App state events\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].on('app:launch', this.handleAppLaunched.bind(this)); // Desktop launches\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].on('app:launched', this.handleAppLaunched.bind(this)); // Legacy support\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].on('app:closed', this.handleAppClosed.bind(this));\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].on('preferences:changed', this.handlePreferencesChanged.bind(this));\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].on('preference:changed', this.handlePreferenceChanged.bind(this));\n\n      // Dock-specific preference events\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].on('dock:preferencesLoaded', this.handleDockPreferencesLoaded.bind(this));\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].on('dock:settingChanged', this.handleDockSettingChanged.bind(this));\n\n      // Theme change events\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].on('theme:changed', this.handleThemeChanged.bind(this));\n\n      // Keyboard shortcuts\n      document.addEventListener('keydown', this.handleKeyDown.bind(this));\n\n      // Auto-hide functionality\n      if (this.config.autoHide) {\n        this.setupAutoHide();\n      }\n    }\n\n    /**\n     * Load dock preferences\n     */\n  }, {\n    key: \"loadPreferences\",\n    value: function () {\n      var _loadPreferences = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().mark(function _callee2() {\n        var response, data;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch('/api/preferences');\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return response.json();\n            case 6:\n              data = _context2.sent;\n              if (data.success && data.data.dock) {\n                this.preferences = data.data.dock;\n                this.updateConfigFromPreferences();\n              }\n              _context2.next = 13;\n              break;\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.warn('Failed to load dock preferences:', _context2.t0);\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 10]]);\n      }));\n      function loadPreferences() {\n        return _loadPreferences.apply(this, arguments);\n      }\n      return loadPreferences;\n    }()\n    /**\n     * Update configuration from preferences\n     */\n  }, {\n    key: \"updateConfigFromPreferences\",\n    value: function updateConfigFromPreferences() {\n      var _this = this;\n      if (this.preferences.position) {\n        this.config.position = this.preferences.position;\n      }\n\n      // Handle size - can be either a number (pixels) or string (small/medium/large)\n      if (this.preferences.size !== undefined) {\n        if (typeof this.preferences.size === 'number') {\n          // Direct pixel value from preferences\n          this.config.size = this.preferences.size;\n        } else {\n          // Convert size string to pixel value\n          var sizeMap = {\n            'small': 48,\n            'medium': 64,\n            'large': 80\n          };\n          this.config.size = sizeMap[this.preferences.size] || 64;\n        }\n\n        // Update CSS custom property for icon size\n        document.documentElement.style.setProperty('--dock-icon-size', \"\".concat(this.config.size, \"px\"));\n\n        // Update all dock icons\n        var icons = this.container.querySelectorAll('.dock-icon');\n        icons.forEach(function (icon) {\n          icon.style.width = _this.config.size + 'px';\n          icon.style.height = _this.config.size + 'px';\n        });\n      }\n\n      // Handle magnification - nested object or flat property\n      if (this.preferences.magnification !== undefined) {\n        if ((0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.preferences.magnification) === 'object') {\n          this.config.magnificationEnabled = this.preferences.magnification.enabled !== false;\n          this.config.maxScale = this.preferences.magnification.scale || 1.5;\n        } else {\n          this.config.magnificationEnabled = this.preferences.magnification;\n        }\n      } else if (this.preferences.magnificationEnabled !== undefined) {\n        this.config.magnificationEnabled = this.preferences.magnificationEnabled;\n      }\n\n      // Handle auto-hide - underscore or camelCase\n      if (this.preferences.auto_hide !== undefined) {\n        this.config.autoHide = this.preferences.auto_hide;\n        if (this.config.autoHide) {\n          this.setupAutoHide();\n        } else {\n          this.removeAutoHide();\n        }\n      } else if (this.preferences.autoHide !== undefined) {\n        this.config.autoHide = this.preferences.autoHide;\n        if (this.config.autoHide) {\n          this.setupAutoHide();\n        } else {\n          this.removeAutoHide();\n        }\n      }\n      console.log('Dock config updated from preferences:', this.config);\n    }\n\n    /**\n     * Load dock applications\n     */\n  }, {\n    key: \"loadDockApps\",\n    value: function () {\n      var _loadDockApps = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().mark(function _callee3() {\n        var response, data, appsData, externalApps;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return fetch('/api/desktop-apps');\n            case 3:\n              response = _context3.sent;\n              if (response.ok) {\n                _context3.next = 7;\n                break;\n              }\n              console.warn('Failed to fetch desktop-apps, status:', response.status);\n              throw new Error(\"HTTP error! status: \".concat(response.status));\n            case 7:\n              _context3.next = 9;\n              return response.json();\n            case 9:\n              data = _context3.sent;\n              // Handle Laravel API response format\n              appsData = data.success ? data.data : data;\n              if (appsData && appsData.apps) {\n                // Get featured apps for dock\n                this.apps = appsData.apps.filter(function (app) {\n                  return app.featured;\n                }).slice(0, 7);\n                console.log('‚úÖ Loaded dock apps from API:', this.apps.length, 'apps');\n\n                // Log external apps with openInNewTab property\n                externalApps = this.apps.filter(function (app) {\n                  return app.type === 'external';\n                });\n                console.log('üåê Dock external apps:', externalApps.map(function (app) {\n                  return {\n                    name: app.name,\n                    openInNewTab: app.openInNewTab,\n                    url: app.url\n                  };\n                }));\n\n                // Add finder as first app if not present\n                if (!this.apps.find(function (app) {\n                  return app.id === 'finder';\n                })) {\n                  this.apps.unshift({\n                    id: 'finder',\n                    name: 'Finder',\n                    icon: '/images/icons/finder.png',\n                    type: 'system',\n                    component: 'Finder'\n                  });\n                }\n              } else {\n                console.warn('Invalid data structure in desktop-apps.json, using defaults');\n                this.apps = this.getDefaultDockApps();\n              }\n              console.log('Final dock apps:', this.apps);\n              _context3.next = 20;\n              break;\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.warn('Failed to load dock apps, using defaults:', _context3.t0);\n              this.apps = this.getDefaultDockApps();\n              console.log('Using default dock apps:', this.apps);\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 15]]);\n      }));\n      function loadDockApps() {\n        return _loadDockApps.apply(this, arguments);\n      }\n      return loadDockApps;\n    }()\n    /**\n     * Get default dock applications\n     */\n  }, {\n    key: \"getDefaultDockApps\",\n    value: function getDefaultDockApps() {\n      return [{\n        id: 'finder',\n        name: 'Finder',\n        icon: '/images/icons/finder.png',\n        type: 'system'\n      }, {\n        id: 'terminal',\n        name: 'Terminal',\n        icon: '/images/icons/terminal.png',\n        type: 'internal'\n      }, {\n        id: 'portfolio',\n        name: 'Portfolio',\n        icon: '/images/icons/portfolio.png',\n        type: 'internal'\n      }, {\n        id: 'about',\n        name: 'About',\n        icon: '/images/icons/about.png',\n        type: 'internal'\n      }, {\n        id: 'contact',\n        name: 'Contact',\n        icon: '/images/icons/contact.png',\n        type: 'internal'\n      }, {\n        id: 'preferences',\n        name: 'System Preferences',\n        icon: '/images/icons/preferences.png',\n        type: 'internal'\n      }];\n    }\n\n    /**\n     * Create dock icons\n     */\n  }, {\n    key: \"createDockIcons\",\n    value: function createDockIcons() {\n      var _this2 = this;\n      if (!this.iconsContainer) {\n        console.error('Dock icons container not found!');\n        return;\n      }\n      console.log('Creating dock icons for', this.apps.length, 'apps');\n\n      // Clear existing icons\n      this.iconsContainer.innerHTML = '';\n\n      // Create app icons\n      this.apps.forEach(function (app, index) {\n        console.log('Creating icon for:', app.name);\n        _this2.createDockIcon(app, index);\n      });\n      console.log('Dock icons created. Container children:', this.iconsContainer.children.length);\n\n      // Add separator and recent apps if enabled (disabled for now to prevent errors)\n      // if (this.config.showRecentApps && this.recentApps.length > 0) {\n      //     this.addRecentAppsSection();\n      // }\n    }\n\n    /**\n     * Create individual dock icon\n     */\n  }, {\n    key: \"createDockIcon\",\n    value: function createDockIcon(app, index) {\n      var iconContainer = document.createElement('div');\n      iconContainer.className = 'dock-icon-container';\n      iconContainer.dataset.appId = app.id;\n      iconContainer.dataset.index = index;\n\n      // Create icon image\n      var iconImg = document.createElement('div');\n      iconImg.className = 'dock-icon';\n      iconImg.dataset.appName = app.name;\n      iconImg.style.backgroundImage = \"url(\".concat(app.icon, \")\");\n      console.log(\"Creating icon: \".concat(app.name, \", size: \").concat(this.config.size, \"px, icon: \").concat(app.icon));\n\n      // Handle missing icon images\n      var testImg = new Image();\n      testImg.onload = function () {\n        // Icon loaded successfully, hide fallback text\n        iconImg.style.setProperty('--icon-fallback-opacity', '0');\n      };\n      testImg.onerror = function () {\n        // Icon failed to load, show fallback text\n        iconImg.style.backgroundImage = 'none';\n        iconImg.style.setProperty('--icon-fallback-opacity', '1');\n      };\n      testImg.src = app.icon;\n\n      // Create running indicator dot\n      var indicator = document.createElement('div');\n      indicator.className = 'running-indicator';\n\n      // Create app label\n      var label = document.createElement('div');\n      label.className = 'dock-label';\n      label.textContent = app.name;\n\n      // Assemble icon\n      iconContainer.appendChild(iconImg);\n      iconContainer.appendChild(indicator);\n      iconContainer.appendChild(label);\n\n      // Add event listeners\n      this.addIconEventListeners(iconContainer, app);\n\n      // Add to container\n      this.iconsContainer.appendChild(iconContainer);\n\n      // Update running state\n      if (this.runningApps.has(app.id)) {\n        indicator.style.opacity = '1';\n      }\n    }\n\n    /**\n     * Add event listeners to dock icon\n     */\n  }, {\n    key: \"addIconEventListeners\",\n    value: function addIconEventListeners(iconContainer, app) {\n      var _this3 = this;\n      var iconImg = iconContainer.querySelector('.dock-icon');\n      var label = iconContainer.querySelector('.dock-label');\n\n      // Click to launch app\n      iconContainer.addEventListener('click', function (e) {\n        e.preventDefault();\n        _this3.launchApp(app);\n      });\n\n      // Context menu (Control+Click or Right+Click)\n      iconContainer.addEventListener('contextmenu', function (e) {\n        e.preventDefault();\n        _this3.showContextMenu(e, app);\n      });\n      iconContainer.addEventListener('mousedown', function (e) {\n        if (e.ctrlKey || e.metaKey) {\n          e.preventDefault();\n          _this3.showContextMenu(e, app);\n        }\n      });\n\n      // Hover for label\n      iconContainer.addEventListener('mouseenter', function () {\n        if (!_this3.isDragging) {\n          label.style.opacity = '1';\n        }\n      });\n      iconContainer.addEventListener('mouseleave', function () {\n        label.style.opacity = '0';\n      });\n\n      // Drag functionality\n      iconContainer.draggable = true;\n      iconContainer.addEventListener('dragstart', function (e) {\n        _this3.isDragging = true;\n        _this3.draggedApp = app;\n        iconContainer.style.opacity = '0.5';\n\n        // Hide label during drag\n        label.style.opacity = '0';\n      });\n      iconContainer.addEventListener('dragend', function (e) {\n        _this3.isDragging = false;\n        _this3.draggedApp = null;\n        iconContainer.style.opacity = '1';\n      });\n    }\n\n    /**\n     * Setup magnification system\n     */\n  }, {\n    key: \"setupMagnification\",\n    value: function setupMagnification() {\n      var _this4 = this;\n      if (!this.config.magnificationEnabled) return;\n      this.magnificationActive = true;\n\n      // Store original icon sizes\n      this.originalSizes = {};\n      var icons = this.iconsContainer.querySelectorAll('.dock-icon-container');\n      icons.forEach(function (icon, index) {\n        _this4.originalSizes[index] = {\n          width: _this4.config.size,\n          height: _this4.config.size\n        };\n      });\n    }\n\n    /**\n     * Handle mouse move for magnification\n     */\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(event) {\n      if (!this.magnificationActive || this.isDragging) return;\n      var dockRect = this.iconsContainer.getBoundingClientRect();\n      var mouseX = event.clientX;\n      var mouseY = event.clientY;\n\n      // Check if mouse is near dock\n      var isNearDock = this.isMouseNearDock(mouseX, mouseY, dockRect);\n      if (isNearDock) {\n        this.applyMagnification(mouseX, mouseY, dockRect);\n      } else {\n        this.resetMagnification();\n      }\n    }\n\n    /**\n     * Check if mouse is near dock for magnification\n     */\n  }, {\n    key: \"isMouseNearDock\",\n    value: function isMouseNearDock(mouseX, mouseY, dockRect) {\n      var margin = this.config.magnetRadius;\n      return mouseX >= dockRect.left - margin && mouseX <= dockRect.right + margin && mouseY >= dockRect.top - margin && mouseY <= dockRect.bottom + margin;\n    }\n\n    /**\n     * Apply magnification effect to dock icons\n     */\n  }, {\n    key: \"applyMagnification\",\n    value: function applyMagnification(mouseX, mouseY, dockRect) {\n      var _this5 = this;\n      var icons = this.iconsContainer.querySelectorAll('.dock-icon-container');\n      icons.forEach(function (iconContainer, index) {\n        var iconRect = iconContainer.getBoundingClientRect();\n        var iconCenterX = iconRect.left + iconRect.width / 2;\n        var iconCenterY = iconRect.top + iconRect.height / 2;\n\n        // Calculate distance from mouse to icon center\n        var distance = Math.sqrt(Math.pow(mouseX - iconCenterX, 2) + Math.pow(mouseY - iconCenterY, 2));\n\n        // Calculate scale based on distance\n        var scale = 1;\n        if (distance < _this5.config.magnetRadius) {\n          var proximity = 1 - distance / _this5.config.magnetRadius;\n          scale = 1 + proximity * (_this5.config.maxScale - 1);\n        }\n\n        // Apply scale with smooth transition\n        var iconImg = iconContainer.querySelector('.dock-icon');\n        iconImg.style.transform = \"scale(\".concat(scale, \")\");\n\n        // Add lift effect for hovered icon\n        if (scale > 1.2) {\n          iconImg.style.boxShadow = '0 8px 24px rgba(0, 0, 0, 0.5)';\n        } else {\n          iconImg.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.3)';\n        }\n      });\n    }\n\n    /**\n     * Reset magnification to normal state\n     */\n  }, {\n    key: \"resetMagnification\",\n    value: function resetMagnification() {\n      var icons = this.iconsContainer.querySelectorAll('.dock-icon');\n      icons.forEach(function (iconImg) {\n        iconImg.style.transform = 'scale(1)';\n        iconImg.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.3)';\n      });\n    }\n\n    /**\n     * Launch application\n     */\n  }, {\n    key: \"launchApp\",\n    value: function launchApp(app) {\n      console.log('Launching app from dock:', app.name, 'Type:', app.type, 'openInNewTab:', app.openInNewTab, 'URL:', app.url);\n\n      // Check if external app should open in new tab directly\n      if ((app.type === 'external' || app.type === 'link') && app.openInNewTab === true) {\n        // Open directly in new browser tab (for sites that block iframes)\n        window.open(app.url, '_blank', 'noopener,noreferrer');\n        console.log('üåê Opened in new tab from dock:', app.url);\n        return; // Don't add bounce or running indicator for new tab opens\n      }\n\n      // Add bounce animation\n      this.addBounceAnimation(app.id);\n\n      // Mark as running\n      this.runningApps.add(app.id);\n      this.updateRunningIndicator(app.id, true);\n\n      // Emit app launch event\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].emit('app:launch', {\n        appId: app.id,\n        name: app.name,\n        component: app.component,\n        type: app.type,\n        url: app.url,\n        // Pass URL for external apps\n        openInNewTab: app.openInNewTab,\n        // Pass flag\n        filePath: app.filePath,\n        // Pass filePath for document types\n        fileType: app.fileType,\n        // Pass fileType for document types\n        config: {\n          title: app.name,\n          size: app.size || {\n            width: 800,\n            height: 600\n          }\n        }\n      });\n\n      // Add to recent apps\n      this.addToRecentApps(app);\n    }\n\n    /**\n     * Add bounce animation to app icon\n     */\n  }, {\n    key: \"addBounceAnimation\",\n    value: function addBounceAnimation(appId) {\n      var iconContainer = this.iconsContainer.querySelector(\"[data-app-id=\\\"\".concat(appId, \"\\\"]\"));\n      if (!iconContainer) return;\n      var iconImg = iconContainer.querySelector('.dock-icon');\n\n      // Create bounce keyframes\n      iconImg.style.animation = 'dockBounce 0.6s cubic-bezier(0.4, 0, 0.2, 1)';\n\n      // Remove animation after completion\n      setTimeout(function () {\n        iconImg.style.animation = '';\n      }, 600);\n    }\n\n    /**\n     * Update running indicator for app\n     */\n  }, {\n    key: \"updateRunningIndicator\",\n    value: function updateRunningIndicator(appId, isRunning) {\n      var iconContainer = this.iconsContainer.querySelector(\"[data-app-id=\\\"\".concat(appId, \"\\\"]\"));\n      if (!iconContainer) return;\n      var indicator = iconContainer.querySelector('.running-indicator');\n      indicator.style.opacity = isRunning ? '1' : '0';\n    }\n\n    /**\n     * Handle theme changed event\n     * @param {object} data - Theme data\n     */\n  }, {\n    key: \"handleThemeChanged\",\n    value: function handleThemeChanged(data) {\n      console.log('üé® Dock: Theme changed to', data.effectiveTheme);\n      // CSS variables handle the visual changes automatically\n      // This is here for any JS-specific theme logic if needed\n    }\n\n    /**\n     * Show context menu for dock icon\n     */\n  }, {\n    key: \"showContextMenu\",\n    value: function showContextMenu(event, app) {\n      var _this6 = this;\n      if (!this.contextMenu) return;\n\n      // Position context menu\n      var x = event.clientX;\n      var y = event.clientY - 150; // Above the dock\n\n      this.contextMenu.style.left = x + 'px';\n      this.contextMenu.style.top = y + 'px';\n      this.contextMenu.style.display = 'block';\n      this.contextMenu.style.opacity = '1';\n\n      // Update context menu content based on app\n      this.updateContextMenuContent(app);\n\n      // Store current app for context actions\n      this.contextMenu.dataset.appId = app.id;\n\n      // Hide menu on outside click\n      setTimeout(function () {\n        document.addEventListener('click', _this6.hideContextMenu.bind(_this6), {\n          once: true\n        });\n      }, 100);\n    }\n\n    /**\n     * Create context menu element\n     */\n  }, {\n    key: \"createContextMenu\",\n    value: function createContextMenu() {\n      this.contextMenu = document.createElement('div');\n      this.contextMenu.className = 'dock-context-menu';\n      this.contextMenu.style.cssText = \"\\n            position: fixed;\\n            background: rgba(255, 255, 255, 0.9);\\n            backdrop-filter: blur(20px);\\n            border: 1px solid rgba(0, 0, 0, 0.1);\\n            border-radius: 8px;\\n            padding: 4px 0;\\n            min-width: 140px;\\n            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\\n            z-index: 10000;\\n            display: none;\\n            opacity: 0;\\n            transition: opacity 200ms ease;\\n        \";\n      document.body.appendChild(this.contextMenu);\n\n      // Add event listener for menu actions\n      this.contextMenu.addEventListener('click', this.handleContextMenuClick.bind(this));\n    }\n\n    /**\n     * Update context menu content\n     */\n  }, {\n    key: \"updateContextMenuContent\",\n    value: function updateContextMenuContent(app) {\n      var isRunning = this.runningApps.has(app.id);\n      this.contextMenu.innerHTML = \"\\n            <div class=\\\"context-menu-item\\\" data-action=\\\"open\\\">\\n                \".concat(isRunning ? 'Show' : 'Open', \"\\n            </div>\\n            <div class=\\\"context-menu-separator\\\"></div>\\n            <div class=\\\"context-menu-item\\\" data-action=\\\"keep-in-dock\\\">\\n                Keep in Dock\\n            </div>\\n            <div class=\\\"context-menu-item\\\" data-action=\\\"remove-from-dock\\\">\\n                Remove from Dock\\n            </div>\\n            \").concat(isRunning ? \"\\n                <div class=\\\"context-menu-separator\\\"></div>\\n                <div class=\\\"context-menu-item\\\" data-action=\\\"force-quit\\\">\\n                    Force Quit\\n                </div>\\n            \" : '', \"\\n        \");\n\n      // Style menu items\n      var items = this.contextMenu.querySelectorAll('.context-menu-item');\n      items.forEach(function (item) {\n        item.style.cssText = \"\\n                padding: 6px 12px;\\n                cursor: pointer;\\n                font-size: 13px;\\n                color: \".concat(_config_ColorConstants_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].DOCK_TEXT, \";\\n                transition: background-color 150ms ease;\\n            \");\n        item.addEventListener('mouseenter', function () {\n          item.style.backgroundColor = 'rgba(0, 122, 255, 0.1)';\n        });\n        item.addEventListener('mouseleave', function () {\n          item.style.backgroundColor = 'transparent';\n        });\n      });\n\n      // Style separators\n      var separators = this.contextMenu.querySelectorAll('.context-menu-separator');\n      separators.forEach(function (separator) {\n        separator.style.cssText = \"\\n                height: 1px;\\n                background: rgba(0, 0, 0, 0.1);\\n                margin: 4px 0;\\n            \";\n      });\n    }\n\n    /**\n     * Handle context menu clicks\n     */\n  }, {\n    key: \"handleContextMenuClick\",\n    value: function handleContextMenuClick(event) {\n      var action = event.target.dataset.action;\n      var appId = this.contextMenu.dataset.appId;\n      if (!action || !appId) return;\n      var app = this.apps.find(function (a) {\n        return a.id === appId;\n      });\n      if (!app) return;\n      switch (action) {\n        case 'open':\n          this.launchApp(app);\n          break;\n        case 'keep-in-dock':\n          // Already in dock, just close menu\n          break;\n        case 'remove-from-dock':\n          this.removeAppFromDock(appId);\n          break;\n        case 'force-quit':\n          this.forceQuitApp(appId);\n          break;\n      }\n      this.hideContextMenu();\n    }\n\n    /**\n     * Hide context menu\n     */\n  }, {\n    key: \"hideContextMenu\",\n    value: function hideContextMenu() {\n      var _this7 = this;\n      if (this.contextMenu) {\n        this.contextMenu.style.opacity = '0';\n        setTimeout(function () {\n          _this7.contextMenu.style.display = 'none';\n        }, 200);\n      }\n    }\n\n    /**\n     * Handle keyboard shortcuts\n     */\n  }, {\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(event) {\n      // Control+Shift: Toggle magnification\n      if (event.ctrlKey && event.shiftKey && !event.repeat) {\n        this.toggleMagnification();\n        event.preventDefault();\n      }\n    }\n\n    /**\n     * Toggle magnification on/off\n     */\n  }, {\n    key: \"toggleMagnification\",\n    value: function toggleMagnification() {\n      this.config.magnificationEnabled = !this.config.magnificationEnabled;\n      if (this.config.magnificationEnabled) {\n        this.setupMagnification();\n        console.log('Dock magnification enabled');\n      } else {\n        this.magnificationActive = false;\n        this.resetMagnification();\n        console.log('Dock magnification disabled');\n      }\n\n      // Save preference\n      this.savePreference('magnificationEnabled', this.config.magnificationEnabled);\n    }\n\n    /**\n     * Save dock preference\n     */\n  }, {\n    key: \"savePreference\",\n    value: function () {\n      var _savePreference = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().mark(function _callee4(key, value) {\n        var preferences;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              preferences = {\n                dock: (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, key, value)\n              };\n              _context4.next = 4;\n              return fetch('/api/preferences', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(preferences)\n              });\n            case 4:\n              _context4.next = 9;\n              break;\n            case 6:\n              _context4.prev = 6;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.warn('Failed to save dock preference:', _context4.t0);\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[0, 6]]);\n      }));\n      function savePreference(_x, _x2) {\n        return _savePreference.apply(this, arguments);\n      }\n      return savePreference;\n    }()\n    /**\n     * Handle app launched event\n     */\n  }, {\n    key: \"handleAppLaunched\",\n    value: function handleAppLaunched(data) {\n      var appId = data.id || data.appId; // Support both formats\n      console.log('App launched, updating dock indicator for:', appId);\n      this.runningApps.add(appId);\n      this.updateRunningIndicator(appId, true);\n    }\n\n    /**\n     * Handle app closed event\n     */\n  }, {\n    key: \"handleAppClosed\",\n    value: function handleAppClosed(data) {\n      var appId = data.id || data.appId; // Support both formats\n      this.runningApps[\"delete\"](appId);\n      this.updateRunningIndicator(appId, false);\n      console.log('App closed on dock:', appId);\n    }\n\n    /**\n     * Handle preferences changed\n     */\n  }, {\n    key: \"handlePreferencesChanged\",\n    value: function handlePreferencesChanged(data) {\n      // Handle both legacy format (data.category) and new format (data.data.dock)\n      if (data.category === 'dock') {\n        this.preferences = _objectSpread(_objectSpread({}, this.preferences), data.preferences);\n        this.updateConfigFromPreferences();\n        this.applyPositionStyles();\n      } else if (data.data && data.data.dock) {\n        // New format: full preferences object\n        this.preferences = _objectSpread(_objectSpread({}, this.preferences), data.data.dock);\n        this.updateConfigFromPreferences();\n        this.applyPositionStyles();\n      }\n    }\n\n    /**\n     * Handle individual preference changed (new granular system)\n     */\n  }, {\n    key: \"handlePreferenceChanged\",\n    value: function handlePreferenceChanged(data) {\n      var _this8 = this;\n      var path = data.path,\n        value = data.value,\n        preferences = data.preferences;\n\n      // Only handle dock-related preferences\n      if (!path.startsWith('dock.')) return;\n      console.log('üéØ Dock preference changed:', path, '=', value);\n\n      // Update full preferences object\n      if (preferences && preferences.dock) {\n        this.preferences = _objectSpread(_objectSpread({}, this.preferences), preferences.dock);\n      }\n\n      // Handle specific preference changes\n      var prefPath = path.replace('dock.', '');\n      switch (prefPath) {\n        case 'size':\n          this.config.size = parseInt(value);\n          document.documentElement.style.setProperty('--dock-icon-size', \"\".concat(this.config.size, \"px\"));\n          var icons = this.container.querySelectorAll('.dock-icon');\n          icons.forEach(function (icon) {\n            icon.style.width = _this8.config.size + 'px';\n            icon.style.height = _this8.config.size + 'px';\n          });\n          console.log('üîÑ Updated dock size to:', this.config.size);\n          break;\n        case 'magnification.enabled':\n          this.config.magnificationEnabled = value;\n          console.log('üîÑ Updated magnification enabled to:', this.config.magnificationEnabled);\n          break;\n        case 'magnification.scale':\n          this.config.maxScale = parseFloat(value);\n          console.log('üîÑ Updated magnification scale to:', this.config.maxScale);\n          break;\n        case 'auto_hide':\n          this.config.autoHide = value;\n          if (this.config.autoHide) {\n            this.setupAutoHide();\n            console.log('üîÑ Enabled auto-hide');\n          } else {\n            this.removeAutoHide();\n            console.log('üîÑ Disabled auto-hide');\n          }\n          break;\n        case 'position':\n          this.config.position = value;\n          this.applyPositionStyles();\n          console.log('üîÑ Updated dock position to:', this.config.position);\n          break;\n      }\n    }\n\n    /**\n     * Handle dock preferences loaded\n     */\n  }, {\n    key: \"handleDockPreferencesLoaded\",\n    value: function handleDockPreferencesLoaded(prefs) {\n      console.log('Dock preferences loaded:', prefs);\n      this.preferences = prefs;\n      this.updateConfigFromPreferences();\n\n      // Apply position immediately\n      if (prefs.position) {\n        this.setDockPosition(prefs.position);\n      }\n\n      // Apply size\n      if (prefs.size) {\n        this.setDockSize(prefs.size);\n      }\n\n      // Apply magnification\n      if (prefs.magnification !== undefined) {\n        var mag = prefs.magnification;\n        this.config.magnificationEnabled = mag.enabled !== false;\n        this.config.maxScale = mag.scale || 1.5;\n      }\n\n      // Apply auto-hide\n      if (prefs.auto_hide !== undefined) {\n        this.config.autoHide = prefs.auto_hide;\n        if (this.config.autoHide) {\n          this.setupAutoHide();\n        }\n      }\n    }\n\n    /**\n     * Handle individual dock setting changed\n     */\n  }, {\n    key: \"handleDockSettingChanged\",\n    value: function handleDockSettingChanged(data) {\n      var key = data.key,\n        value = data.value;\n      console.log('Dock setting changed:', key, value);\n      switch (key) {\n        case 'position':\n          this.setDockPosition(value);\n          break;\n        case 'size':\n          this.setDockSize(value);\n          break;\n        case 'magnification.enabled':\n          this.config.magnificationEnabled = value;\n          break;\n        case 'magnification.scale':\n          this.config.maxScale = parseFloat(value);\n          break;\n        case 'auto_hide':\n          this.config.autoHide = value;\n          if (value) {\n            this.setupAutoHide();\n          }\n          break;\n      }\n    }\n\n    /**\n     * Set dock position\n     */\n  }, {\n    key: \"setDockPosition\",\n    value: function setDockPosition(position) {\n      this.config.position = position;\n      this.container.className = \"dock-container \".concat(position);\n      console.log('Dock position changed to:', position);\n    }\n\n    /**\n     * Set dock size\n     */\n  }, {\n    key: \"setDockSize\",\n    value: function setDockSize(size) {\n      var _this9 = this;\n      var sizeMap = {\n        'small': 48,\n        'medium': 64,\n        'large': 80\n      };\n      this.config.size = sizeMap[size] || 64;\n\n      // Update icon sizes\n      var icons = this.container.querySelectorAll('.dock-icon');\n      icons.forEach(function (icon) {\n        icon.style.width = _this9.config.size + 'px';\n        icon.style.height = _this9.config.size + 'px';\n      });\n      console.log('Dock size changed to:', size, this.config.size + 'px');\n    }\n\n    /**\n     * Add to recent apps\n     */\n  }, {\n    key: \"addToRecentApps\",\n    value: function addToRecentApps(app) {\n      // Remove if already exists\n      this.recentApps = this.recentApps.filter(function (recent) {\n        return recent.id !== app.id;\n      });\n\n      // Add to beginning\n      this.recentApps.unshift(app);\n\n      // Keep only max count\n      this.recentApps = this.recentApps.slice(0, this.config.maxRecentApps);\n    }\n\n    /**\n     * Add recent apps section to dock (with separator)\n     */\n  }, {\n    key: \"addRecentAppsSection\",\n    value: function addRecentAppsSection() {\n      var _this10 = this;\n      if (!this.iconsContainer || this.recentApps.length === 0) {\n        return;\n      }\n\n      // Add separator\n      var separator = document.createElement('div');\n      separator.className = 'dock-separator';\n      separator.style.cssText = \"\\n            width: 1px;\\n            height: 48px;\\n            background: rgba(255, 255, 255, 0.2);\\n            margin: 0 8px;\\n            align-self: center;\\n        \";\n      this.iconsContainer.appendChild(separator);\n\n      // Add recent apps\n      this.recentApps.forEach(function (app, index) {\n        var recentIndex = _this10.apps.length + index;\n        _this10.createDockIcon(app, recentIndex);\n      });\n      console.log('Recent apps section added:', this.recentApps.length, 'apps');\n    }\n\n    /**\n     * Remove app from dock\n     */\n  }, {\n    key: \"removeAppFromDock\",\n    value: function removeAppFromDock(appId) {\n      this.apps = this.apps.filter(function (app) {\n        return app.id !== appId;\n      });\n      this.createDockIcons();\n    }\n\n    /**\n     * Force quit application\n     */\n  }, {\n    key: \"forceQuitApp\",\n    value: function forceQuitApp(appId) {\n      this.runningApps[\"delete\"](appId);\n      this.updateRunningIndicator(appId, false);\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].emit('app:force-quit', {\n        id: appId\n      });\n    }\n\n    /**\n     * Handle error conditions\n     */\n  }, {\n    key: \"handleError\",\n    value: function handleError(error) {\n      console.error('Dock error:', error);\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].emit('dock:error', {\n        error: error.message\n      });\n    }\n\n    /**\n     * Clean up resources\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // Remove event listeners\n      document.removeEventListener('mousemove', this.handleMouseMove.bind(this));\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].off('app:launched', this.handleAppLaunched.bind(this));\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].off('app:closed', this.handleAppClosed.bind(this));\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].off('preferences:changed', this.handlePreferencesChanged.bind(this));\n\n      // Remove elements\n      if (this.container) {\n        this.container.remove();\n      }\n      if (this.contextMenu) {\n        this.contextMenu.remove();\n      }\n      console.log('Dock component destroyed');\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Dock);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1813\n");

/***/ }),

/***/ 5918:
/*!**************************************************!*\
  !*** ./resources/js/components/LinkOS/Window.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ 3453);\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 4467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _EventBus_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../EventBus.js */ 947);\n\n\n\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n\n\n/**\n * Window - LinkOS window management system\n * Handles draggable windows, traffic light controls, and authentic LinkOS behavior\n */\nvar Window = /*#__PURE__*/function () {\n  function Window() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, Window);\n    // Required configuration\n    this.id = config.id || this.generateId();\n    this.title = config.title || 'Untitled';\n    this.content = config.content || '';\n    this.appId = config.appId || 'unknown';\n\n    // Window properties\n    this.position = config.position || {\n      x: 100,\n      y: 100\n    };\n    this.size = config.size || {\n      width: 800,\n      height: 600\n    };\n    this.minSize = config.minSize || {\n      width: 300,\n      height: 200\n    };\n    this.maxSize = config.maxSize || {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n\n    // Window state\n    this.isVisible = false;\n    this.isMinimized = false;\n    this.isMaximized = false;\n    this.isResizing = false;\n    this.isDragging = false;\n    this.isFocused = false;\n    this.zIndex = Window.getNextZIndex();\n\n    // DOM elements\n    this.element = null;\n    this.titleBar = null;\n    this.contentArea = null;\n    this.trafficLights = {};\n    this.resizeHandles = {};\n\n    // Event handlers\n    this.dragState = {\n      isDragging: false,\n      startX: 0,\n      startY: 0,\n      startPosX: 0,\n      startPosY: 0\n    };\n    this.resizeState = {\n      isResizing: false,\n      direction: '',\n      startX: 0,\n      startY: 0,\n      startWidth: 0,\n      startHeight: 0\n    };\n\n    // Configuration\n    this.config = _objectSpread({\n      titleBarHeight: 28,\n      trafficLightSize: 12,\n      resizeHandleSize: 10,\n      shadowBlur: 20,\n      borderRadius: 8,\n      animationDuration: 300,\n      snapThreshold: 10\n    }, config.windowConfig);\n    this.init();\n  }\n\n  /**\n   * Initialize window\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Window, [{\n    key: \"init\",\n    value: function init() {\n      this.createElement();\n      this.setupEventListeners();\n      this.setupKeyboardShortcuts();\n\n      // Register window with manager\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('window:created', {\n        windowId: this.id,\n        appId: this.appId,\n        window: this\n      });\n      console.log(\"Window created: \".concat(this.title, \" (\").concat(this.id, \")\"));\n    }\n\n    /**\n     * Create window DOM element\n     */\n  }, {\n    key: \"createElement\",\n    value: function createElement() {\n      // Main window container\n      this.element = document.createElement('div');\n      this.element.className = 'LinkOS-window';\n      this.element.id = \"window-\".concat(this.id);\n      this.element.style.cssText = \"\\n            position: fixed;\\n            left: \".concat(this.position.x, \"px;\\n            top: \").concat(this.position.y, \"px;\\n            width: \").concat(this.size.width, \"px;\\n            height: \").concat(this.size.height, \"px;\\n            z-index: \").concat(this.zIndex, \";\\n            border-radius: \").concat(this.config.borderRadius, \"px;\\n            overflow: hidden;\\n            transition: transform \").concat(this.config.animationDuration, \"ms cubic-bezier(0.4, 0, 0.2, 1);\\n            transform: scale(0.9) translateY(20px);\\n            opacity: 0;\\n        \");\n\n      // Title bar\n      this.createTitleBar();\n\n      // Content area\n      this.createContentArea();\n\n      // Resize handles\n      this.createResizeHandles();\n\n      // Add to DOM\n      document.body.appendChild(this.element);\n\n      // Listen for theme changes\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].on('theme:changed', this.handleThemeChanged.bind(this));\n    }\n\n    /**\n     * Create title bar with traffic lights\n     */\n  }, {\n    key: \"createTitleBar\",\n    value: function createTitleBar() {\n      this.titleBar = document.createElement('div');\n      this.titleBar.className = 'window-titlebar';\n      this.titleBar.style.cssText = \"\\n            height: \".concat(this.config.titleBarHeight, \"px;\\n            display: flex;\\n            align-items: center;\\n            padding: 0 12px;\\n            cursor: move;\\n            user-select: none;\\n        \");\n\n      // Traffic lights container\n      var trafficLightsContainer = document.createElement('div');\n      trafficLightsContainer.className = 'traffic-lights';\n      trafficLightsContainer.style.cssText = \"\\n            display: flex;\\n            gap: 8px;\\n            margin-right: 12px;\\n        \";\n\n      // Create traffic light buttons\n      this.createTrafficLights(trafficLightsContainer);\n\n      // Window title\n      var titleElement = document.createElement('div');\n      titleElement.className = 'window-title';\n      titleElement.textContent = this.title;\n      titleElement.style.cssText = \"\\n            flex: 1;\\n            text-align: center;\\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\\n            font-size: 13px;\\n            font-weight: 500;\\n            overflow: hidden;\\n            text-overflow: ellipsis;\\n            white-space: nowrap;\\n        \";\n      this.titleBar.appendChild(trafficLightsContainer);\n      this.titleBar.appendChild(titleElement);\n      this.element.appendChild(this.titleBar);\n    }\n\n    /**\n     * Create traffic light buttons (close, minimize, maximize)\n     */\n  }, {\n    key: \"createTrafficLights\",\n    value: function createTrafficLights(container) {\n      var _this = this;\n      var buttons = [{\n        type: 'close',\n        color: '#ff5f57',\n        hoverColor: '#ff4743',\n        symbol: '√ó'\n      }, {\n        type: 'minimize',\n        color: '#ffbd2e',\n        hoverColor: '#ffab00',\n        symbol: '‚àí'\n      }, {\n        type: 'maximize',\n        color: '#28ca42',\n        hoverColor: '#1fb934',\n        symbol: '‚åÉ'\n      }];\n      buttons.forEach(function (_ref) {\n        var type = _ref.type,\n          color = _ref.color,\n          hoverColor = _ref.hoverColor,\n          symbol = _ref.symbol;\n        var button = document.createElement('button');\n        button.className = \"traffic-light traffic-light-\".concat(type);\n        button.style.cssText = \"\\n                width: \".concat(_this.config.trafficLightSize, \"px;\\n                height: \").concat(_this.config.trafficLightSize, \"px;\\n                border-radius: 50%;\\n                border: none;\\n                background: \").concat(color, \";\\n                cursor: pointer;\\n                display: flex;\\n                align-items: center;\\n                justify-content: center;\\n                font-size: 9px;\\n                font-weight: bold;\\n                color: rgba(0, 0, 0, 0.6);\\n                transition: all 150ms ease;\\n                opacity: 0.8;\\n            \");\n\n        // Add symbol on hover\n        button.addEventListener('mouseenter', function () {\n          button.textContent = symbol;\n          button.style.background = hoverColor;\n          button.style.opacity = '1';\n        });\n        button.addEventListener('mouseleave', function () {\n          button.textContent = '';\n          button.style.background = color;\n          button.style.opacity = '0.8';\n        });\n\n        // Button functionality\n        button.addEventListener('click', function (e) {\n          e.stopPropagation();\n          _this.handleTrafficLightClick(type);\n        });\n        _this.trafficLights[type] = button;\n        container.appendChild(button);\n      });\n    }\n\n    /**\n     * Create content area\n     */\n  }, {\n    key: \"createContentArea\",\n    value: function createContentArea() {\n      this.contentArea = document.createElement('div');\n      this.contentArea.className = 'window-content';\n      this.contentArea.style.cssText = \"\\n            height: calc(100% - \".concat(this.config.titleBarHeight, \"px);\\n            overflow: auto;\\n        \");\n\n      // Set content\n      if (typeof this.content === 'string') {\n        this.contentArea.innerHTML = this.content;\n      } else if (this.content instanceof HTMLElement) {\n        this.contentArea.appendChild(this.content);\n      }\n      this.element.appendChild(this.contentArea);\n    }\n\n    /**\n     * Handle theme changed event\n     * @param {object} data - Theme data\n     */\n  }, {\n    key: \"handleThemeChanged\",\n    value: function handleThemeChanged(data) {\n      console.log(\"\\uD83C\\uDFA8 Window \".concat(this.title, \": Theme changed to \").concat(data.effectiveTheme));\n      // CSS variables handle the visual changes automatically\n      // This is here for any JS-specific theme logic if needed\n    }\n\n    /**\n     * Create resize handles\n     */\n  }, {\n    key: \"createResizeHandles\",\n    value: function createResizeHandles() {\n      var _this2 = this;\n      var handles = ['n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw'];\n      handles.forEach(function (direction) {\n        var handle = document.createElement('div');\n        handle.className = \"resize-handle resize-\".concat(direction);\n        handle.style.cssText = _this2.getResizeHandleStyles(direction);\n        handle.addEventListener('mousedown', function (e) {\n          _this2.startResize(e, direction);\n        });\n        _this2.resizeHandles[direction] = handle;\n        _this2.element.appendChild(handle);\n      });\n    }\n\n    /**\n     * Get resize handle styles based on direction\n     */\n  }, {\n    key: \"getResizeHandleStyles\",\n    value: function getResizeHandleStyles(direction) {\n      var size = this.config.resizeHandleSize;\n      var styles = {\n        position: 'absolute',\n        background: 'transparent',\n        'z-index': '10'\n      };\n      switch (direction) {\n        case 'n':\n          return \"\".concat(this.objectToCSS(_objectSpread(_objectSpread({}, styles), {}, {\n            top: '0',\n            left: \"\".concat(size, \"px\"),\n            right: \"\".concat(size, \"px\"),\n            height: \"\".concat(size, \"px\"),\n            cursor: 'n-resize'\n          })));\n        case 'ne':\n          return \"\".concat(this.objectToCSS(_objectSpread(_objectSpread({}, styles), {}, {\n            top: '0',\n            right: '0',\n            width: \"\".concat(size, \"px\"),\n            height: \"\".concat(size, \"px\"),\n            cursor: 'ne-resize'\n          })));\n        case 'e':\n          return \"\".concat(this.objectToCSS(_objectSpread(_objectSpread({}, styles), {}, {\n            top: \"\".concat(size, \"px\"),\n            right: '0',\n            bottom: \"\".concat(size, \"px\"),\n            width: \"\".concat(size, \"px\"),\n            cursor: 'e-resize'\n          })));\n        case 'se':\n          return \"\".concat(this.objectToCSS(_objectSpread(_objectSpread({}, styles), {}, {\n            bottom: '0',\n            right: '0',\n            width: \"\".concat(size, \"px\"),\n            height: \"\".concat(size, \"px\"),\n            cursor: 'se-resize'\n          })));\n        case 's':\n          return \"\".concat(this.objectToCSS(_objectSpread(_objectSpread({}, styles), {}, {\n            bottom: '0',\n            left: \"\".concat(size, \"px\"),\n            right: \"\".concat(size, \"px\"),\n            height: \"\".concat(size, \"px\"),\n            cursor: 's-resize'\n          })));\n        case 'sw':\n          return \"\".concat(this.objectToCSS(_objectSpread(_objectSpread({}, styles), {}, {\n            bottom: '0',\n            left: '0',\n            width: \"\".concat(size, \"px\"),\n            height: \"\".concat(size, \"px\"),\n            cursor: 'sw-resize'\n          })));\n        case 'w':\n          return \"\".concat(this.objectToCSS(_objectSpread(_objectSpread({}, styles), {}, {\n            top: \"\".concat(size, \"px\"),\n            left: '0',\n            bottom: \"\".concat(size, \"px\"),\n            width: \"\".concat(size, \"px\"),\n            cursor: 'w-resize'\n          })));\n        case 'nw':\n          return \"\".concat(this.objectToCSS(_objectSpread(_objectSpread({}, styles), {}, {\n            top: '0',\n            left: '0',\n            width: \"\".concat(size, \"px\"),\n            height: \"\".concat(size, \"px\"),\n            cursor: 'nw-resize'\n          })));\n      }\n    }\n\n    /**\n     * Convert object to CSS string\n     */\n  }, {\n    key: \"objectToCSS\",\n    value: function objectToCSS(obj) {\n      return Object.entries(obj).map(function (_ref2) {\n        var _ref3 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, 2),\n          key = _ref3[0],\n          value = _ref3[1];\n        return \"\".concat(key, \": \").concat(value);\n      }).join('; ');\n    }\n\n    /**\n     * Setup event listeners\n     */\n  }, {\n    key: \"setupEventListeners\",\n    value: function setupEventListeners() {\n      var _this3 = this;\n      // Title bar dragging\n      this.titleBar.addEventListener('mousedown', function (e) {\n        if (e.target.classList.contains('traffic-light')) return;\n        _this3.startDrag(e);\n      });\n\n      // Window focus\n      this.element.addEventListener('mousedown', function () {\n        _this3.focus();\n      });\n\n      // Global mouse events for dragging and resizing\n      document.addEventListener('mousemove', function (e) {\n        if (_this3.isDragging) {\n          _this3.handleDrag(e);\n        } else if (_this3.isResizing) {\n          _this3.handleResize(e);\n        }\n      });\n      document.addEventListener('mouseup', function () {\n        _this3.stopDrag();\n        _this3.stopResize();\n      });\n\n      // Double-click to maximize\n      this.titleBar.addEventListener('dblclick', function () {\n        _this3.toggleMaximize();\n      });\n    }\n\n    /**\n     * Setup keyboard shortcuts\n     */\n  }, {\n    key: \"setupKeyboardShortcuts\",\n    value: function setupKeyboardShortcuts() {\n      var _this4 = this;\n      document.addEventListener('keydown', function (e) {\n        if (!_this4.isFocused) return;\n\n        // Command+M - Minimize\n        if (e.metaKey && e.key === 'm') {\n          e.preventDefault();\n          _this4.minimize();\n        }\n\n        // Command+W - Close\n        if (e.metaKey && e.key === 'w') {\n          e.preventDefault();\n          _this4.close();\n        }\n      });\n    }\n\n    /**\n     * Show window with animation\n     */\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this5 = this;\n      if (this.isVisible) return;\n      this.isVisible = true;\n      this.element.style.display = 'block';\n\n      // Animate in\n      requestAnimationFrame(function () {\n        _this5.element.style.transform = 'scale(1) translateY(0)';\n        _this5.element.style.opacity = '1';\n      });\n      this.focus();\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('window:shown', {\n        windowId: this.id,\n        appId: this.appId\n      });\n    }\n\n    /**\n     * Hide window\n     */\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      var _this6 = this;\n      if (!this.isVisible) return;\n      this.isVisible = false;\n\n      // Animate out\n      this.element.style.transform = 'scale(0.9) translateY(20px)';\n      this.element.style.opacity = '0';\n      setTimeout(function () {\n        _this6.element.style.display = 'none';\n      }, this.config.animationDuration);\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('window:hidden', {\n        windowId: this.id,\n        appId: this.appId\n      });\n    }\n\n    /**\n     * Focus window (bring to front)\n     */\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.isFocused = true;\n      this.zIndex = Window.getNextZIndex();\n      this.element.style.zIndex = this.zIndex;\n\n      // Update visual state\n      this.element.classList.add('focused');\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('window:focused', {\n        windowId: this.id,\n        appId: this.appId,\n        zIndex: this.zIndex\n      });\n    }\n\n    /**\n     * Remove focus from window\n     */\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.isFocused = false;\n      this.element.classList.remove('focused');\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('window:blurred', {\n        windowId: this.id,\n        appId: this.appId\n      });\n    }\n\n    /**\n     * Handle traffic light button clicks\n     */\n  }, {\n    key: \"handleTrafficLightClick\",\n    value: function handleTrafficLightClick(type) {\n      switch (type) {\n        case 'close':\n          this.close();\n          break;\n        case 'minimize':\n          this.minimize();\n          break;\n        case 'maximize':\n          this.toggleMaximize();\n          break;\n      }\n    }\n\n    /**\n     * Close window\n     */\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this7 = this;\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('window:closing', {\n        windowId: this.id,\n        appId: this.appId\n      });\n\n      // Animate out\n      this.element.style.transform = 'scale(0.9) translateY(20px)';\n      this.element.style.opacity = '0';\n      setTimeout(function () {\n        _this7.destroy();\n      }, this.config.animationDuration);\n    }\n\n    /**\n     * Minimize window\n     */\n  }, {\n    key: \"minimize\",\n    value: function minimize() {\n      var _document$querySelect,\n        _this8 = this;\n      if (this.isMinimized) return;\n      this.isMinimized = true;\n      this.isVisible = false;\n\n      // Animate to dock\n      var dockRect = (_document$querySelect = document.querySelector('.dock')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.getBoundingClientRect();\n      var targetX = dockRect ? dockRect.left + dockRect.width / 2 : window.innerWidth / 2;\n      var targetY = dockRect ? dockRect.top : window.innerHeight - 100;\n      this.element.style.transform = \"scale(0.1) translate(\".concat(targetX - this.position.x, \"px, \").concat(targetY - this.position.y, \"px)\");\n      this.element.style.opacity = '0';\n      setTimeout(function () {\n        _this8.element.style.display = 'none';\n      }, this.config.animationDuration);\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('window:minimized', {\n        windowId: this.id,\n        appId: this.appId\n      });\n    }\n\n    /**\n     * Restore minimized window\n     */\n  }, {\n    key: \"restore\",\n    value: function restore() {\n      var _this9 = this;\n      if (!this.isMinimized) return;\n      this.isMinimized = false;\n      this.element.style.display = 'block';\n\n      // Animate back to position\n      requestAnimationFrame(function () {\n        _this9.element.style.transform = 'scale(1) translate(0, 0)';\n        _this9.element.style.opacity = '1';\n      });\n      this.show();\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('window:restored', {\n        windowId: this.id,\n        appId: this.appId\n      });\n    }\n\n    /**\n     * Toggle maximize state\n     */\n  }, {\n    key: \"toggleMaximize\",\n    value: function toggleMaximize() {\n      if (this.isMaximized) {\n        this.unmaximize();\n      } else {\n        this.maximize();\n      }\n    }\n\n    /**\n     * Maximize window\n     */\n  }, {\n    key: \"maximize\",\n    value: function maximize() {\n      if (this.isMaximized) return;\n\n      // Store original position and size\n      this.originalPosition = _objectSpread({}, this.position);\n      this.originalSize = _objectSpread({}, this.size);\n      this.isMaximized = true;\n\n      // Animate to full screen\n      this.setPosition(0, 0);\n      this.setSize(window.innerWidth, window.innerHeight);\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('window:maximized', {\n        windowId: this.id,\n        appId: this.appId\n      });\n    }\n\n    /**\n     * Unmaximize window\n     */\n  }, {\n    key: \"unmaximize\",\n    value: function unmaximize() {\n      if (!this.isMaximized) return;\n      this.isMaximized = false;\n\n      // Restore original position and size\n      this.setPosition(this.originalPosition.x, this.originalPosition.y);\n      this.setSize(this.originalSize.width, this.originalSize.height);\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('window:unmaximized', {\n        windowId: this.id,\n        appId: this.appId\n      });\n    }\n\n    /**\n     * Start window dragging\n     */\n  }, {\n    key: \"startDrag\",\n    value: function startDrag(e) {\n      if (this.isMaximized) return;\n      this.isDragging = true;\n      this.dragState = {\n        isDragging: true,\n        startX: e.clientX,\n        startY: e.clientY,\n        startPosX: this.position.x,\n        startPosY: this.position.y\n      };\n      this.element.style.cursor = 'move';\n      document.body.style.userSelect = 'none';\n    }\n\n    /**\n     * Handle window dragging\n     */\n  }, {\n    key: \"handleDrag\",\n    value: function handleDrag(e) {\n      if (!this.isDragging) return;\n      var deltaX = e.clientX - this.dragState.startX;\n      var deltaY = e.clientY - this.dragState.startY;\n      var newX = this.dragState.startPosX + deltaX;\n      var newY = this.dragState.startPosY + deltaY;\n\n      // Constrain to screen bounds\n      var constrainedX = Math.max(0, Math.min(newX, window.innerWidth - this.size.width));\n      var constrainedY = Math.max(0, Math.min(newY, window.innerHeight - this.size.height));\n      this.setPosition(constrainedX, constrainedY);\n    }\n\n    /**\n     * Stop window dragging\n     */\n  }, {\n    key: \"stopDrag\",\n    value: function stopDrag() {\n      if (!this.isDragging) return;\n      this.isDragging = false;\n      this.dragState.isDragging = false;\n      this.element.style.cursor = '';\n      document.body.style.userSelect = '';\n    }\n\n    /**\n     * Start window resizing\n     */\n  }, {\n    key: \"startResize\",\n    value: function startResize(e, direction) {\n      if (this.isMaximized) return;\n      e.preventDefault();\n      e.stopPropagation();\n      this.isResizing = true;\n      this.resizeState = {\n        isResizing: true,\n        direction: direction,\n        startX: e.clientX,\n        startY: e.clientY,\n        startWidth: this.size.width,\n        startHeight: this.size.height,\n        startPosX: this.position.x,\n        startPosY: this.position.y\n      };\n      document.body.style.userSelect = 'none';\n    }\n\n    /**\n     * Handle window resizing\n     */\n  }, {\n    key: \"handleResize\",\n    value: function handleResize(e) {\n      if (!this.isResizing) return;\n      var deltaX = e.clientX - this.resizeState.startX;\n      var deltaY = e.clientY - this.resizeState.startY;\n      var direction = this.resizeState.direction;\n      var newWidth = this.resizeState.startWidth;\n      var newHeight = this.resizeState.startHeight;\n      var newX = this.position.x;\n      var newY = this.position.y;\n\n      // Calculate new dimensions based on resize direction\n      if (direction.includes('e')) {\n        newWidth = Math.max(this.minSize.width, Math.min(this.maxSize.width, this.resizeState.startWidth + deltaX));\n      }\n      if (direction.includes('w')) {\n        newWidth = Math.max(this.minSize.width, Math.min(this.maxSize.width, this.resizeState.startWidth - deltaX));\n        newX = this.resizeState.startPosX + (this.resizeState.startWidth - newWidth);\n      }\n      if (direction.includes('s')) {\n        newHeight = Math.max(this.minSize.height, Math.min(this.maxSize.height, this.resizeState.startHeight + deltaY));\n      }\n      if (direction.includes('n')) {\n        newHeight = Math.max(this.minSize.height, Math.min(this.maxSize.height, this.resizeState.startHeight - deltaY));\n        newY = this.resizeState.startPosY + (this.resizeState.startHeight - newHeight);\n      }\n      this.setSize(newWidth, newHeight);\n      this.setPosition(newX, newY);\n    }\n\n    /**\n     * Stop window resizing\n     */\n  }, {\n    key: \"stopResize\",\n    value: function stopResize() {\n      if (!this.isResizing) return;\n      this.isResizing = false;\n      this.resizeState.isResizing = false;\n      document.body.style.userSelect = '';\n    }\n\n    /**\n     * Set window position\n     */\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(x, y) {\n      this.position.x = x;\n      this.position.y = y;\n      this.element.style.left = \"\".concat(x, \"px\");\n      this.element.style.top = \"\".concat(y, \"px\");\n    }\n\n    /**\n     * Set window size\n     */\n  }, {\n    key: \"setSize\",\n    value: function setSize(width, height) {\n      this.size.width = width;\n      this.size.height = height;\n      this.element.style.width = \"\".concat(width, \"px\");\n      this.element.style.height = \"\".concat(height, \"px\");\n    }\n\n    /**\n     * Update window title\n     */\n  }, {\n    key: \"setTitle\",\n    value: function setTitle(title) {\n      this.title = title;\n      var titleElement = this.element.querySelector('.window-title');\n      if (titleElement) {\n        titleElement.textContent = title;\n      }\n    }\n\n    /**\n     * Update window content\n     */\n  }, {\n    key: \"setContent\",\n    value: function setContent(content) {\n      this.content = content;\n      if (typeof content === 'string') {\n        this.contentArea.innerHTML = content;\n      } else if (content instanceof HTMLElement) {\n        this.contentArea.innerHTML = '';\n        this.contentArea.appendChild(content);\n      }\n    }\n\n    /**\n     * Destroy window and clean up\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('window:destroyed', {\n        windowId: this.id,\n        appId: this.appId\n      });\n      if (this.element && this.element.parentNode) {\n        this.element.parentNode.removeChild(this.element);\n      }\n\n      // Clean up references\n      this.element = null;\n      this.titleBar = null;\n      this.contentArea = null;\n      this.trafficLights = {};\n      this.resizeHandles = {};\n    }\n\n    /**\n     * Generate unique window ID\n     */\n  }, {\n    key: \"generateId\",\n    value: function generateId() {\n      return 'window_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    /**\n     * Get next z-index for window stacking\n     */\n  }], [{\n    key: \"getNextZIndex\",\n    value: function getNextZIndex() {\n      Window.currentZIndex = (Window.currentZIndex || 1000) + 1;\n      return Window.currentZIndex;\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Window);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5918\n");

/***/ }),

/***/ 6659:
/*!*********************************************************!*\
  !*** ./resources/js/components/LinkOS/WindowManager.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ 9394);\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 4467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _EventBus_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../EventBus.js */ 947);\n/* harmony import */ var _Window_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Window.js */ 5918);\n\n\n\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n\n\n\n/**\n * WindowManager - Manages multiple windows and their interactions\n * Handles window stacking, focus management, and keyboard shortcuts\n */\nvar WindowManager = /*#__PURE__*/function () {\n  function WindowManager() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, WindowManager);\n    this.windows = new Map();\n    this.focusedWindow = null;\n    this.windowStack = [];\n\n    // Configuration\n    this.config = {\n      maxWindows: 20,\n      stackSpacing: 30,\n      defaultPosition: {\n        x: 100,\n        y: 100\n      },\n      keyboardShortcuts: true\n    };\n    this.init();\n  }\n\n  /**\n   * Initialize window manager\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(WindowManager, [{\n    key: \"init\",\n    value: function init() {\n      this.setupEventListeners();\n      this.setupKeyboardShortcuts();\n      console.log('WindowManager initialized');\n    }\n\n    /**\n     * Setup event listeners\n     */\n  }, {\n    key: \"setupEventListeners\",\n    value: function setupEventListeners() {\n      var _this = this;\n      // Window events\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].on('window:created', function (data) {\n        return _this.handleWindowCreated(data);\n      });\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].on('window:destroyed', function (data) {\n        return _this.handleWindowDestroyed(data);\n      });\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].on('window:focused', function (data) {\n        return _this.handleWindowFocused(data);\n      });\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].on('window:minimized', function (data) {\n        return _this.handleWindowMinimized(data);\n      });\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].on('window:close-requested', function (data) {\n        return _this.handleWindowCloseRequested(data);\n      });\n\n      // App close events\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].on('app:close', function (data) {\n        return _this.handleAppClose(data);\n      });\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].on('app:force-quit', function (data) {\n        return _this.handleForceQuit(data);\n      });\n\n      // Global click to blur windows\n      document.addEventListener('mousedown', function (e) {\n        if (!e.target.closest('.LinkOS-window')) {\n          _this.blurAllWindows();\n        }\n      });\n\n      // Window resize handling\n      window.addEventListener('resize', function () {\n        _this.handleScreenResize();\n      });\n    }\n\n    /**\n     * Setup keyboard shortcuts\n     */\n  }, {\n    key: \"setupKeyboardShortcuts\",\n    value: function setupKeyboardShortcuts() {\n      var _this2 = this;\n      if (!this.config.keyboardShortcuts) return;\n      document.addEventListener('keydown', function (e) {\n        // Command+Tab - Cycle through windows\n        if (e.metaKey && e.key === 'Tab') {\n          e.preventDefault();\n          _this2.cycleWindows();\n        }\n\n        // Command+` - Cycle through app windows\n        if (e.metaKey && e.key === '`') {\n          e.preventDefault();\n          _this2.cycleAppWindows();\n        }\n\n        // Command+Shift+W - Close all windows\n        if (e.metaKey && e.shiftKey && e.key === 'W') {\n          e.preventDefault();\n          _this2.closeAllWindows();\n        }\n\n        // Command+Option+H - Hide all windows\n        if (e.metaKey && e.altKey && e.key === 'h') {\n          e.preventDefault();\n          _this2.hideAllWindows();\n        }\n      });\n    }\n\n    /**\n     * Create and show a new window\n     */\n  }, {\n    key: \"createWindow\",\n    value: function createWindow(config) {\n      // Check window limit\n      if (this.windows.size >= this.config.maxWindows) {\n        console.warn('Maximum window limit reached');\n        return null;\n      }\n\n      // Calculate stacked position for new windows\n      var position = this.calculateNewWindowPosition(config.appId);\n      var windowConfig = _objectSpread({\n        position: position\n      }, config);\n      var window = new _Window_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](windowConfig);\n      this.registerWindow(window);\n      return window;\n    }\n\n    /**\n     * Register window with manager\n     */\n  }, {\n    key: \"registerWindow\",\n    value: function registerWindow(window) {\n      this.windows.set(window.id, window);\n      this.windowStack.push(window.id);\n      console.log(\"Window registered: \".concat(window.title, \" (\").concat(window.id, \")\"));\n    }\n\n    /**\n     * Get window by ID\n     */\n  }, {\n    key: \"getWindow\",\n    value: function getWindow(windowId) {\n      return this.windows.get(windowId);\n    }\n\n    /**\n     * Get windows by app ID\n     */\n  }, {\n    key: \"getWindowsByApp\",\n    value: function getWindowsByApp(appId) {\n      return Array.from(this.windows.values()).filter(function (window) {\n        return window.appId === appId;\n      });\n    }\n\n    /**\n     * Get all visible windows\n     */\n  }, {\n    key: \"getVisibleWindows\",\n    value: function getVisibleWindows() {\n      return Array.from(this.windows.values()).filter(function (window) {\n        return window.isVisible;\n      });\n    }\n\n    /**\n     * Focus a specific window\n     */\n  }, {\n    key: \"focusWindow\",\n    value: function focusWindow(windowId) {\n      var window = this.getWindow(windowId);\n      if (!window) return;\n\n      // Blur current focused window\n      if (this.focusedWindow && this.focusedWindow !== window) {\n        this.focusedWindow.blur();\n      }\n\n      // Focus new window\n      window.focus();\n      this.focusedWindow = window;\n\n      // Update window stack order\n      this.moveToTop(windowId);\n    }\n\n    /**\n     * Blur all windows\n     */\n  }, {\n    key: \"blurAllWindows\",\n    value: function blurAllWindows() {\n      this.windows.forEach(function (window) {\n        window.blur();\n      });\n      this.focusedWindow = null;\n    }\n\n    /**\n     * Move window to top of stack\n     */\n  }, {\n    key: \"moveToTop\",\n    value: function moveToTop(windowId) {\n      var index = this.windowStack.indexOf(windowId);\n      if (index > -1) {\n        this.windowStack.splice(index, 1);\n        this.windowStack.push(windowId);\n      }\n    }\n\n    /**\n     * Cycle through windows with Command+Tab\n     */\n  }, {\n    key: \"cycleWindows\",\n    value: function cycleWindows() {\n      var _this3 = this;\n      var visibleWindows = this.getVisibleWindows();\n      if (visibleWindows.length === 0) return;\n      var nextIndex = 0;\n      if (this.focusedWindow) {\n        var currentIndex = visibleWindows.findIndex(function (w) {\n          return w.id === _this3.focusedWindow.id;\n        });\n        nextIndex = (currentIndex + 1) % visibleWindows.length;\n      }\n      this.focusWindow(visibleWindows[nextIndex].id);\n    }\n\n    /**\n     * Cycle through windows of the same app\n     */\n  }, {\n    key: \"cycleAppWindows\",\n    value: function cycleAppWindows() {\n      var _this4 = this;\n      if (!this.focusedWindow) return;\n      var appWindows = this.getWindowsByApp(this.focusedWindow.appId).filter(function (w) {\n        return w.isVisible;\n      });\n      if (appWindows.length <= 1) return;\n      var currentIndex = appWindows.findIndex(function (w) {\n        return w.id === _this4.focusedWindow.id;\n      });\n      var nextIndex = (currentIndex + 1) % appWindows.length;\n      this.focusWindow(appWindows[nextIndex].id);\n    }\n\n    /**\n     * Close all windows\n     */\n  }, {\n    key: \"closeAllWindows\",\n    value: function closeAllWindows() {\n      var _this5 = this;\n      var windowIds = Array.from(this.windows.keys());\n      windowIds.forEach(function (id) {\n        var window = _this5.getWindow(id);\n        if (window) {\n          window.close();\n        }\n      });\n    }\n\n    /**\n     * Hide all windows\n     */\n  }, {\n    key: \"hideAllWindows\",\n    value: function hideAllWindows() {\n      this.windows.forEach(function (window) {\n        if (window.isVisible) {\n          window.hide();\n        }\n      });\n      this.focusedWindow = null;\n    }\n\n    /**\n     * Show all windows\n     */\n  }, {\n    key: \"showAllWindows\",\n    value: function showAllWindows() {\n      this.windows.forEach(function (window) {\n        if (!window.isVisible && !window.isMinimized) {\n          window.show();\n        }\n      });\n    }\n\n    /**\n     * Calculate position for new window\n     */\n  }, {\n    key: \"calculateNewWindowPosition\",\n    value: function calculateNewWindowPosition(appId) {\n      var existingWindows = this.getWindowsByApp(appId);\n      var basePosition = _objectSpread({}, this.config.defaultPosition);\n      if (existingWindows.length === 0) {\n        return basePosition;\n      }\n\n      // Stack windows with offset\n      var offset = existingWindows.length * this.config.stackSpacing;\n      return {\n        x: basePosition.x + offset,\n        y: basePosition.y + offset\n      };\n    }\n\n    /**\n     * Handle screen resize\n     */\n  }, {\n    key: \"handleScreenResize\",\n    value: function handleScreenResize() {\n      this.windows.forEach(function (window) {\n        // Ensure windows stay within screen bounds\n        var maxX = window.innerWidth - window.size.width;\n        var maxY = window.innerHeight - window.size.height;\n        if (window.position.x > maxX) {\n          window.setPosition(Math.max(0, maxX), window.position.y);\n        }\n        if (window.position.y > maxY) {\n          window.setPosition(window.position.x, Math.max(0, maxY));\n        }\n\n        // Update maximized windows\n        if (window.isMaximized) {\n          window.setSize(window.innerWidth, window.innerHeight);\n        }\n      });\n    }\n\n    /**\n     * Handle window created event\n     */\n  }, {\n    key: \"handleWindowCreated\",\n    value: function handleWindowCreated(data) {\n      console.log(\"Window created: \".concat(data.windowId, \" for app: \").concat(data.appId));\n    }\n\n    /**\n     * Handle window destroyed event\n     */\n  }, {\n    key: \"handleWindowDestroyed\",\n    value: function handleWindowDestroyed(data) {\n      var window = this.windows.get(data.windowId);\n      if (!window) return;\n      var appId = data.appId || window.appId;\n\n      // Remove from collections\n      this.windows[\"delete\"](data.windowId);\n      var stackIndex = this.windowStack.indexOf(data.windowId);\n      if (stackIndex > -1) {\n        this.windowStack.splice(stackIndex, 1);\n      }\n\n      // Check if this was the last window for this app\n      var remainingWindows = this.getWindowsByApp(appId);\n      if (remainingWindows.length === 0) {\n        // Emit app:closed event for Dock to update\n        _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('app:closed', {\n          appId: appId\n        });\n      }\n\n      // Update focused window\n      if (this.focusedWindow === window) {\n        this.focusedWindow = null;\n\n        // Focus next window in stack\n        if (this.windowStack.length > 0) {\n          var nextWindowId = this.windowStack[this.windowStack.length - 1];\n          var nextWindow = this.getWindow(nextWindowId);\n          if (nextWindow && nextWindow.isVisible) {\n            this.focusWindow(nextWindowId);\n          }\n        }\n      }\n      console.log(\"Window destroyed: \".concat(data.windowId));\n    }\n\n    /**\n     * Handle window focused event\n     */\n  }, {\n    key: \"handleWindowFocused\",\n    value: function handleWindowFocused(data) {\n      var window = this.getWindow(data.windowId);\n      if (window) {\n        this.focusedWindow = window;\n        this.moveToTop(data.windowId);\n      }\n    }\n\n    /**\n     * Handle window minimized event\n     */\n  }, {\n    key: \"handleWindowMinimized\",\n    value: function handleWindowMinimized(data) {\n      var window = this.getWindow(data.windowId);\n      if (window && this.focusedWindow === window) {\n        this.focusedWindow = null;\n\n        // Focus next visible window\n        var visibleWindows = this.getVisibleWindows();\n        if (visibleWindows.length > 0) {\n          this.focusWindow(visibleWindows[visibleWindows.length - 1].id);\n        }\n      }\n    }\n\n    /**\n     * Handle window close request (e.g., from terminal exit command)\n     */\n  }, {\n    key: \"handleWindowCloseRequested\",\n    value: function handleWindowCloseRequested(data) {\n      var windowId = data.windowId;\n      var window = this.getWindow(windowId);\n      if (window) {\n        console.log('üö™ Closing window:', windowId);\n        window.close();\n      }\n    }\n\n    /**\n     * Handle app close event\n     */\n  }, {\n    key: \"handleAppClose\",\n    value: function handleAppClose(data) {\n      var appId = data.appId;\n      var appWindows = this.getWindowsByApp(appId);\n      appWindows.forEach(function (window) {\n        window.close();\n      });\n    }\n\n    /**\n     * Handle force quit event from Dock\n     * Immediately closes all windows for the app without animation\n     */\n  }, {\n    key: \"handleForceQuit\",\n    value: function handleForceQuit(data) {\n      var appId = data.id || data.appId;\n      var appWindows = this.getWindowsByApp(appId);\n      console.log(\"Force quitting app: \".concat(appId, \", closing \").concat(appWindows.length, \" window(s)\"));\n\n      // Force close all windows for this app\n      appWindows.forEach(function (window) {\n        window.destroy(); // Use destroy() for immediate removal\n      });\n    }\n\n    /**\n     * Create app content container\n     */\n  }, {\n    key: \"createAppContent\",\n    value: function createAppContent(component) {\n      var container = document.createElement('div');\n      container.className = 'app-content';\n      container.style.cssText = \"\\n            width: 100%;\\n            height: 100%;\\n            overflow: hidden;\\n        \";\n      if (typeof component === 'string') {\n        container.innerHTML = component;\n      } else if (component instanceof HTMLElement) {\n        container.appendChild(component);\n      } else if (typeof component === 'function') {\n        // Component constructor\n        var instance = new component(container);\n        if (instance.element) {\n          container.appendChild(instance.element);\n        }\n      }\n      return container;\n    }\n\n    /**\n     * Get window manager statistics\n     */\n  }, {\n    key: \"getStats\",\n    value: function getStats() {\n      var _this$focusedWindow;\n      return {\n        totalWindows: this.windows.size,\n        visibleWindows: this.getVisibleWindows().length,\n        focusedWindow: ((_this$focusedWindow = this.focusedWindow) === null || _this$focusedWindow === void 0 ? void 0 : _this$focusedWindow.id) || null,\n        windowStack: (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.windowStack)\n      };\n    }\n\n    /**\n     * Destroy window manager and clean up\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.closeAllWindows();\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].off('window:created');\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].off('window:destroyed');\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].off('window:focused');\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].off('window:minimized');\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].off('app:launch');\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].off('app:close');\n      this.windows.clear();\n      this.windowStack = [];\n      this.focusedWindow = null;\n      console.log('WindowManager destroyed');\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WindowManager);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6659\n");

/***/ }),

/***/ 430:
/*!************************************************!*\
  !*** ./resources/js/components/about/About.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ About)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ 9394);\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ 3453);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _EventBus_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../EventBus.js */ 947);\n\n\n\n\n\n\n/**\n * About Application Component\n * \n * Features:\n * - Profile section with typewriter effect\n * - Interactive skill meters with scroll animations\n * - Experience timeline with scroll reveals\n * - Education background cards\n * - Social media integration\n * - Downloadable resume functionality\n * \n * @author AbdulmeLink Portfolio\n * @version 1.0.0\n */\n\n\nvar About = /*#__PURE__*/function () {\n  function About(container) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this, About);\n    this.container = container;\n    this.aboutData = null;\n    this.typewriterIndex = 0;\n    this.typewriterText = '';\n    this.typewriterElement = null;\n    this.observedElements = new Set();\n    this.intersectionObserver = null;\n\n    // Animation state\n    this.isAnimating = false;\n    this.animationQueue = [];\n    this.init();\n  }\n\n  /**\n   * Initialize about component\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(About, [{\n    key: \"init\",\n    value: function () {\n      var _init = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().mark(function _callee() {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              this.setupContainer();\n              _context.next = 4;\n              return this.loadAboutData();\n            case 4:\n              this.createLayout();\n              this.setupIntersectionObserver();\n              this.setupEventListeners();\n              _EventBus_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].emit('about:ready');\n              _context.next = 14;\n              break;\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Failed to initialize About:', _context.t0);\n              this.showError('Failed to load profile. Please try again.');\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 10]]);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n    /**\n     * Setup container with loading state\n     */\n  }, {\n    key: \"setupContainer\",\n    value: function setupContainer() {\n      this.container.className = 'about-app';\n      this.container.innerHTML = \"\\n            <div class=\\\"about-loading\\\">\\n                <div class=\\\"loading-spinner\\\"></div>\\n                <p>Loading profile...</p>\\n            </div>\\n        \";\n    }\n\n    /**\n     * Load about data from API\n     */\n  }, {\n    key: \"loadAboutData\",\n    value: function () {\n      var _loadAboutData = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().mark(function _callee2() {\n        var response, result;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch('/api/about');\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return response.json();\n            case 6:\n              result = _context2.sent;\n              if (!result.success) {\n                _context2.next = 11;\n                break;\n              }\n              this.aboutData = result.data;\n              _context2.next = 12;\n              break;\n            case 11:\n              throw new Error(result.message || 'Failed to load data');\n            case 12:\n              _context2.next = 18;\n              break;\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error loading about data:', _context2.t0);\n              throw _context2.t0;\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 14]]);\n      }));\n      function loadAboutData() {\n        return _loadAboutData.apply(this, arguments);\n      }\n      return loadAboutData;\n    }()\n    /**\n     * Create main layout structure\n     */\n  }, {\n    key: \"createLayout\",\n    value: function createLayout() {\n      this.container.innerHTML = \"\\n            <div class=\\\"about-container\\\">\\n                <div class=\\\"about-scroll-wrapper\\\">\\n                    \".concat(this.createProfileSection(), \"\\n                    \").concat(this.createSkillsSection(), \"\\n                    \").concat(this.createExperienceSection(), \"\\n                    \").concat(this.createEducationSection(), \"\\n                </div>\\n            </div>\\n        \");\n    }\n\n    /**\n     * Create profile section with typewriter effect\n     */\n  }, {\n    key: \"createProfileSection\",\n    value: function createProfileSection() {\n      var profile = this.aboutData.personal || {};\n      var stats = this.aboutData.stats || {};\n      return \"\\n            <section class=\\\"about-section profile-section animate-on-scroll\\\">\\n                <div class=\\\"profile-hero\\\">\\n                    <div class=\\\"profile-image-wrapper\\\">\\n                        <img \\n                            src=\\\"\".concat(profile.profileImage, \"\\\" \\n                            alt=\\\"\").concat(profile.name, \"\\\" \\n                            class=\\\"profile-image\\\"\\n                        />\\n                        <div class=\\\"status-indicator\\\" title=\\\"Available for work\\\">\\n                            <span class=\\\"status-dot\\\"></span>\\n                        </div>\\n                    </div>\\n                    \\n                    <div class=\\\"profile-content\\\">\\n                        <h1 class=\\\"profile-name\\\">\").concat(profile.name, \"</h1>\\n                        <h2 class=\\\"profile-title\\\">\").concat(profile.title, \"</h2>\\n                        <div class=\\\"profile-bio-wrapper\\\">\\n                            <p class=\\\"profile-bio typewriter\\\" data-text=\\\"\").concat(profile.bio, \"\\\"></p>\\n                        </div>\\n                        \\n                        <div class=\\\"profile-stats-grid\\\">\\n                            <div class=\\\"stat-card\\\">\\n                                <div class=\\\"stat-value\\\">\").concat(stats.projectsCompleted || 0, \"</div>\\n                                <div class=\\\"stat-label\\\">Projects Completed</div>\\n                            </div>\\n                            <div class=\\\"stat-card\\\">\\n                                <div class=\\\"stat-value\\\">\").concat(stats.technologiesUsed || 0, \"+</div>\\n                                <div class=\\\"stat-label\\\">Technologies</div>\\n                            </div>\\n                            <div class=\\\"stat-card\\\">\\n                                <div class=\\\"stat-value\\\">\").concat(stats.githubCommits || 0, \"</div>\\n                                <div class=\\\"stat-label\\\">GitHub Commits</div>\\n                            </div>\\n                            <div class=\\\"stat-card\\\">\\n                                <div class=\\\"stat-value\\\">\").concat(stats.certifications || 0, \"</div>\\n                                <div class=\\\"stat-label\\\">Certifications</div>\\n                            </div>\\n                        </div>\\n                        \\n                        <div class=\\\"profile-meta\\\">\\n                            <span class=\\\"meta-item\\\">\\n                                <i class=\\\"icon-location\\\"></i>\\n                                \").concat(profile.location, \"\\n                            </span>\\n                            <span class=\\\"meta-item\\\">\\n                                <i class=\\\"icon-email\\\"></i>\\n                                \").concat(profile.email, \"\\n                            </span>\\n                        </div>\\n                        \\n                        <button class=\\\"btn-contact-me\\\" data-action=\\\"open-contact\\\">\\n                            <i class=\\\"icon-mail\\\"></i>\\n                            Contact Me\\n                        </button>\\n                    </div>\\n                </div>\\n            </section>\\n        \");\n    }\n\n    /**\n     * Create social media links\n     */\n  }, {\n    key: \"createSocialLinks\",\n    value: function createSocialLinks(social) {\n      var _this = this;\n      var platforms = ['github', 'linkedin', 'twitter', 'dribbble'];\n      return platforms.map(function (platform) {\n        var data = social[platform];\n        if (!data || !data.url) return '';\n        return \"\\n                <a href=\\\"\".concat(data.url, \"\\\" \\n                   class=\\\"social-link social-\").concat(platform, \"\\\" \\n                   target=\\\"_blank\\\" \\n                   rel=\\\"noopener noreferrer\\\"\\n                   title=\\\"\").concat(platform.charAt(0).toUpperCase() + platform.slice(1), \"\\\">\\n                    <i class=\\\"icon-\").concat(platform, \"\\\"></i>\\n                    \").concat(data.followers ? \"<span class=\\\"follower-count\\\">\".concat(_this.formatNumber(data.followers), \"</span>\") : '', \"\\n                </a>\\n            \");\n      }).join('');\n    }\n\n    /**\n     * Create skills section with progress bars\n     */\n  }, {\n    key: \"createSkillsSection\",\n    value: function createSkillsSection() {\n      var _this2 = this;\n      var skills = this.aboutData.skills || {};\n      var categories = Object.entries(skills);\n      if (categories.length === 0) return '';\n      return \"\\n            <section class=\\\"about-section skills-section animate-on-scroll\\\">\\n                <h2 class=\\\"section-title\\\">Skills & Expertise</h2>\\n                <div class=\\\"skills-grid\\\">\\n                    \".concat(categories.map(function (_ref) {\n        var _ref2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_ref, 2),\n          key = _ref2[0],\n          category = _ref2[1];\n        return _this2.createSkillCategory(category);\n      }).join(''), \"\\n                </div>\\n            </section>\\n        \");\n    }\n\n    /**\n     * Create individual skill category\n     */\n  }, {\n    key: \"createSkillCategory\",\n    value: function createSkillCategory(category) {\n      var _this3 = this;\n      return \"\\n            <div class=\\\"skill-category\\\">\\n                <h3 class=\\\"category-title\\\" style=\\\"color: \".concat(category.color || '#3B82F6', \"\\\">\\n                    \").concat(category.category || 'Skills', \"\\n                </h3>\\n                <div class=\\\"skill-list\\\">\\n                    \").concat(category.technologies.map(function (tech) {\n        return _this3.createSkillBar(tech);\n      }).join(''), \"\\n                </div>\\n            </div>\\n        \");\n    }\n\n    /**\n     * Create skill progress bar\n     */\n  }, {\n    key: \"createSkillBar\",\n    value: function createSkillBar(tech) {\n      return \"\\n            <div class=\\\"skill-item\\\">\\n                <div class=\\\"skill-header\\\">\\n                    <span class=\\\"skill-name\\\">\".concat(tech.name, \"</span>\\n                    <span class=\\\"skill-level\\\">\").concat(tech.level || '', \"</span>\\n                </div>\\n                <div class=\\\"skill-bar\\\">\\n                    <div class=\\\"skill-progress\\\" \\n                         data-progress=\\\"\").concat(tech.proficiency || 0, \"\\\" \\n                         style=\\\"width: 0%\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"skill-meta\\\">\\n                    \").concat(tech.years ? \"<span>\".concat(tech.years, \" years</span>\") : '', \"\\n                    \").concat(tech.projects ? \"<span>\".concat(tech.projects, \" projects</span>\") : '', \"\\n                </div>\\n            </div>\\n        \");\n    }\n\n    /**\n     * Create combined experience and education roadmap section\n     */\n  }, {\n    key: \"createExperienceSection\",\n    value: function createExperienceSection() {\n      var _this4 = this;\n      var experience = this.aboutData.experience || [];\n      var education = this.aboutData.education || [];\n      if (experience.length === 0 && education.length === 0) return '';\n\n      // Calculate timeline range\n      var timelineData = this.calculateTimelineData(experience, education);\n\n      // Group items by year for positioning\n      var experienceByYear = this.groupItemsByYear(experience);\n      var educationByYear = this.groupItemsByYear(education);\n      return \"\\n            <section class=\\\"about-section roadmap-section animate-on-scroll\\\">\\n                <div class=\\\"roadmap-container\\\">\\n                    <div class=\\\"roadmap-left\\\">\\n                        <h3 class=\\\"roadmap-subtitle\\\">Professional Experience</h3>\\n                        <div class=\\\"timeline\\\" style=\\\"min-height: \".concat(timelineData.totalHeight, \"px\\\">\\n                            \").concat(this.createYearAxis(timelineData), \"\\n                            \").concat(experience.map(function (job, index) {\n        return _this4.createTimelineItem(job, index, timelineData, experienceByYear);\n      }).join(''), \"\\n                        </div>\\n                    </div>\\n                    \\n                    <div class=\\\"roadmap-divider\\\">\\n                        <div class=\\\"roadmap-divider-line\\\"></div>\\n                        \").concat(this.createDividerYearMarkers(timelineData), \"\\n                    </div>\\n                    \\n                    <div class=\\\"roadmap-right\\\">\\n                        <h3 class=\\\"roadmap-subtitle\\\">Education</h3>\\n                        <div class=\\\"education-timeline\\\" style=\\\"min-height: \").concat(timelineData.totalHeight, \"px\\\">\\n                            \").concat(education.map(function (edu, index) {\n        return _this4.createEducationTimelineItem(edu, index, timelineData, educationByYear);\n      }).join(''), \"\\n                        </div>\\n                    </div>\\n                </div>\\n            </section>\\n        \");\n    }\n\n    /**\n     * Calculate years between two dates\n     */\n  }, {\n    key: \"calculateYears\",\n    value: function calculateYears(startDate, endDate) {\n      var start = new Date(startDate);\n      var end = endDate === 'Present' || !endDate ? new Date() : new Date(endDate);\n      var years = (end - start) / (365.25 * 24 * 60 * 60 * 1000);\n      return Math.max(0.5, years); // Minimum 0.5 years\n    }\n\n    /**\n     * Calculate timeline data for accurate positioning\n     */\n  }, {\n    key: \"calculateTimelineData\",\n    value: function calculateTimelineData(experience, education) {\n      var allItems = [].concat((0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(experience), (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(education));\n\n      // Get all dates\n      var dates = [];\n      allItems.forEach(function (item) {\n        var _item$duration, _item$duration2;\n        if ((_item$duration = item.duration) !== null && _item$duration !== void 0 && _item$duration.start) {\n          dates.push(new Date(item.duration.start));\n        }\n        if ((_item$duration2 = item.duration) !== null && _item$duration2 !== void 0 && _item$duration2.end && item.duration.end !== 'Present') {\n          dates.push(new Date(item.duration.end));\n        }\n      });\n\n      // Add current date for \"Present\" items\n      dates.push(new Date());\n\n      // Find min and max years, and extend by 1 year before and after\n      var minDateRaw = new Date(Math.min.apply(Math, dates));\n      var maxDateRaw = new Date(Math.max.apply(Math, dates));\n\n      // Subtract 1 year from minDate\n      var minDate = new Date(minDateRaw.getFullYear() - 1, 0, 1);\n      // Add 1 year to maxDate\n      var maxDate = new Date(maxDateRaw.getFullYear() + 1, 0, 1);\n      var minYear = minDate.getFullYear();\n      var maxYear = maxDate.getFullYear();\n      // Calculate pixels per year\n      var yearsSpan = maxYear - minYear + 1;\n      var pixelsPerYear = 120; // More space for better readability\n      var totalHeight = yearsSpan * pixelsPerYear + 100; // Extra padding\n\n      return {\n        minYear: minYear,\n        maxYear: maxYear,\n        yearsSpan: yearsSpan,\n        pixelsPerYear: pixelsPerYear,\n        totalHeight: totalHeight,\n        minDate: minDate,\n        maxDate: maxDate\n      };\n    }\n\n    /**\n     * Calculate position from top based on date\n     */\n  }, {\n    key: \"calculatePosition\",\n    value: function calculatePosition(date, timelineData) {\n      var itemDate = new Date(date);\n      var itemYear = itemDate.getFullYear();\n      var yearIndex = itemYear - timelineData.minYear;\n      return yearIndex * timelineData.pixelsPerYear;\n    }\n\n    /**\n     * Create year axis labels\n     */\n  }, {\n    key: \"createYearAxis\",\n    value: function createYearAxis(timelineData) {\n      var years = [];\n      for (var i = 0; i <= timelineData.yearsSpan - 1; i++) {\n        var year = timelineData.minYear + i;\n        var position = i * timelineData.pixelsPerYear;\n        years.push(\"\\n                <div class=\\\"year-label\\\" style=\\\"top: \".concat(position, \"px\\\">\\n                    \").concat(year, \"\\n                </div>\\n            \"));\n      }\n      return years.join('');\n    }\n\n    /**\n     * Create divider year markers\n     */\n  }, {\n    key: \"createDividerYearMarkers\",\n    value: function createDividerYearMarkers(timelineData) {\n      var markers = [];\n      for (var i = 0; i <= timelineData.yearsSpan - 1; i++) {\n        var year = timelineData.minYear + i;\n        var position = i * timelineData.pixelsPerYear;\n        markers.push(\"\\n                <div class=\\\"divider-year-marker\\\" style=\\\"top: \".concat(position, \"px\\\">\\n                    <span class=\\\"divider-year-text\\\">\").concat(year, \"</span>\\n                </div>\\n            \"));\n      }\n      return markers.join('');\n    }\n\n    /**\n     * Create timeline item for experience\n     */\n  }, {\n    key: \"createTimelineItem\",\n    value: function createTimelineItem(job, index, timelineData, itemsByYear) {\n      var _job$duration, _job$duration2, _job$duration3, _job$duration4, _job$duration5, _job$duration6, _job$duration7, _job$duration8, _job$duration9;\n      var duration = ((_job$duration = job.duration) === null || _job$duration === void 0 ? void 0 : _job$duration.formatted) || '';\n\n      // Calculate position and height based on actual duration\n      var startPos = this.calculatePosition((_job$duration2 = job.duration) === null || _job$duration2 === void 0 ? void 0 : _job$duration2.start, timelineData);\n      var endDate = ((_job$duration3 = job.duration) === null || _job$duration3 === void 0 ? void 0 : _job$duration3.end) === 'Present' || !((_job$duration4 = job.duration) !== null && _job$duration4 !== void 0 && _job$duration4.end) ? new Date() : new Date(job.duration.end);\n      var endPos = this.calculatePosition(endDate, timelineData);\n      var calculatedHeight = endPos - startPos;\n\n      // Adjust position for multiple items in same year\n      var startYear = (_job$duration5 = job.duration) !== null && _job$duration5 !== void 0 && _job$duration5.start ? new Date(job.duration.start).getFullYear() : new Date().getFullYear();\n      var yearItems = itemsByYear[startYear] || [];\n      var itemIndexInYear = yearItems.findIndex(function (item) {\n        return item.index === index;\n      });\n      var itemsInYear = yearItems.length;\n\n      // Distribute items within the year space (pixelsPerYear)\n      var adjustedStartPos = startPos;\n      if (itemsInYear > 1) {\n        var yearSpace = timelineData.pixelsPerYear;\n        var itemSpacing = Math.min(80, yearSpace / itemsInYear); // Max 80px spacing\n        adjustedStartPos = startPos + itemIndexInYear * itemSpacing;\n      }\n\n      // Set minimum height based on content needs\n      // Short experiences (< 2 years) need at least 200px\n      // Medium experiences (2-3 years) need at least 180px\n      // Long experiences use calculated height\n      var years = this.calculateYears((_job$duration6 = job.duration) === null || _job$duration6 === void 0 ? void 0 : _job$duration6.start, endDate);\n      var minHeight = 200; // Base minimum for short experiences\n\n      if (years >= 3) {\n        minHeight = 150; // Long experiences can be shorter minimum\n      } else if (years >= 2) {\n        minHeight = 180; // Medium experiences\n      }\n\n      // Use the larger of calculated height or minimum height\n      var finalHeight = Math.max(calculatedHeight, minHeight);\n\n      // Extract years for display\n      var startYearDisplay = (_job$duration7 = job.duration) !== null && _job$duration7 !== void 0 && _job$duration7.start ? new Date(job.duration.start).getFullYear() : '';\n      var endYear = ((_job$duration8 = job.duration) === null || _job$duration8 === void 0 ? void 0 : _job$duration8.end) === 'Present' ? 'Present' : (_job$duration9 = job.duration) !== null && _job$duration9 !== void 0 && _job$duration9.end ? new Date(job.duration.end).getFullYear() : '';\n      return \"\\n            <div class=\\\"timeline-item\\\" data-index=\\\"\".concat(index, \"\\\" style=\\\"top: \").concat(adjustedStartPos, \"px; min-height: \").concat(finalHeight, \"px; position: absolute; width: calc(100% - 60px); right: 0;\\\">\\n                <div class=\\\"timeline-connector\\\"></div>\\n                <div class=\\\"timeline-header\\\">\\n                    <div class=\\\"timeline-date-badge\\\">\").concat(startYearDisplay).concat(endYear && endYear !== startYearDisplay ? \" - \".concat(endYear) : '', \"</div>\\n                    <h3 class=\\\"job-title\\\">\").concat(job.title, \"</h3>\\n                </div>\\n                <h4 class=\\\"company-name\\\">\").concat(job.company).concat(job.location ? \" <span class=\\\"job-location\\\">\\u2022 \".concat(job.location, \"</span>\") : '', \"</h4>\\n                \").concat(job.type ? \"<span class=\\\"job-type\\\">\".concat(job.type, \"</span>\") : '', \"\\n                <p class=\\\"job-description\\\">\").concat(job.description, \"</p>\\n                \").concat(job.achievements && job.achievements.length > 0 ? \"\\n                    <ul class=\\\"achievements-list\\\">\\n                        \".concat(job.achievements.slice(0, 3).map(function (achievement) {\n        return \"\\n                            <li>\".concat(achievement, \"</li>\\n                        \");\n      }).join(''), \"\\n                    </ul>\\n                \") : '', \"\\n                \").concat(job.technologies && job.technologies.length > 0 ? \"\\n                    <div class=\\\"job-technologies\\\">\\n                        \".concat(job.technologies.slice(0, 8).map(function (tech) {\n        return \"\\n                            <span class=\\\"tech-badge\\\">\".concat(tech, \"</span>\\n                        \");\n      }).join(''), \"\\n                    </div>\\n                \") : '', \"\\n            </div>\\n        \");\n    }\n\n    /**\n     * Create education timeline item\n     */\n  }, {\n    key: \"createEducationTimelineItem\",\n    value: function createEducationTimelineItem(edu, index, timelineData, itemsByYear) {\n      var _edu$duration, _edu$duration2, _edu$duration3, _edu$duration4, _edu$duration5, _edu$duration6, _edu$duration7;\n      var duration = ((_edu$duration = edu.duration) === null || _edu$duration === void 0 ? void 0 : _edu$duration.formatted) || '';\n\n      // Calculate position and height based on actual duration\n      var startPos = this.calculatePosition((_edu$duration2 = edu.duration) === null || _edu$duration2 === void 0 ? void 0 : _edu$duration2.start, timelineData);\n      var endDate = (_edu$duration3 = edu.duration) !== null && _edu$duration3 !== void 0 && _edu$duration3.end ? new Date(edu.duration.end) : new Date();\n      var endPos = this.calculatePosition(endDate, timelineData);\n      var calculatedHeight = endPos - startPos;\n\n      // Adjust position for multiple items in same year\n      var startYear = (_edu$duration4 = edu.duration) !== null && _edu$duration4 !== void 0 && _edu$duration4.start ? new Date(edu.duration.start).getFullYear() : new Date().getFullYear();\n      var yearItems = itemsByYear[startYear] || [];\n      var itemIndexInYear = yearItems.findIndex(function (item) {\n        return item.index === index;\n      });\n      var itemsInYear = yearItems.length;\n\n      // Distribute items within the year space (pixelsPerYear)\n      var adjustedStartPos = startPos;\n      if (itemsInYear > 1) {\n        var yearSpace = timelineData.pixelsPerYear;\n        var itemSpacing = Math.min(80, yearSpace / itemsInYear); // Max 80px spacing\n        adjustedStartPos = startPos + itemIndexInYear * itemSpacing;\n      }\n\n      // Set minimum height based on content needs\n      var years = this.calculateYears((_edu$duration5 = edu.duration) === null || _edu$duration5 === void 0 ? void 0 : _edu$duration5.start, endDate);\n      var minHeight = 220; // Base minimum for education (more content)\n\n      if (years >= 4) {\n        minHeight = 180; // Long education can be shorter minimum\n      } else if (years >= 3) {\n        minHeight = 200; // Medium education\n      }\n\n      // Use the larger of calculated height or minimum height\n      var finalHeight = Math.max(calculatedHeight, minHeight);\n\n      // Extract years for display\n      var startYearDisplay = (_edu$duration6 = edu.duration) !== null && _edu$duration6 !== void 0 && _edu$duration6.start ? new Date(edu.duration.start).getFullYear() : '';\n      var endYear = (_edu$duration7 = edu.duration) !== null && _edu$duration7 !== void 0 && _edu$duration7.end ? new Date(edu.duration.end).getFullYear() : '';\n      return \"\\n            <div class=\\\"education-timeline-item\\\" data-index=\\\"\".concat(index, \"\\\" style=\\\"top: \").concat(adjustedStartPos, \"px; min-height: \").concat(finalHeight, \"px; position: absolute; width: calc(100% - 60px); left: 0;\\\">\\n                <div class=\\\"timeline-connector edu-connector\\\"></div>\\n                <div class=\\\"edu-content\\\">\\n                    <div class=\\\"edu-header\\\">\\n                        <div class=\\\"timeline-date-badge edu-badge\\\">\").concat(startYearDisplay).concat(endYear && endYear !== startYearDisplay ? \" - \".concat(endYear) : '', \"</div>\\n                        <h3 class=\\\"degree\\\">\").concat(edu.degree, \"</h3>\\n                        \").concat(edu.field ? \"<span class=\\\"edu-field\\\">\".concat(edu.field, \"</span>\") : '', \"\\n                    </div>\\n                    <h4 class=\\\"institution\\\">\").concat(edu.institution, \"</h4>\\n                    \").concat(edu.location ? \"<span class=\\\"edu-location\\\">\".concat(edu.location, \"</span>\") : '', \"\\n                    \").concat(edu.gpa ? \"<p class=\\\"gpa\\\">GPA: \".concat(edu.gpa, \"</p>\") : '', \"\\n                    \").concat(edu.description ? \"<p class=\\\"edu-description\\\">\".concat(edu.description, \"</p>\") : '', \"\\n                    \").concat(edu.achievements && edu.achievements.length > 0 ? \"\\n                        <ul class=\\\"edu-achievements-list\\\">\\n                            \".concat(edu.achievements.slice(0, 3).map(function (achievement) {\n        return \"\\n                                <li>\".concat(achievement, \"</li>\\n                            \");\n      }).join(''), \"\\n                        </ul>\\n                    \") : '', \"\\n                    \").concat(edu.coursework && edu.coursework.length > 0 ? \"\\n                        <div class=\\\"coursework\\\">\\n                            <strong>Key Coursework:</strong>\\n                            <div class=\\\"coursework-tags\\\">\\n                                \".concat(edu.coursework.slice(0, 6).map(function (course) {\n        return \"\\n                                    <span class=\\\"course-tag\\\">\".concat(course, \"</span>\\n                                \");\n      }).join(''), \"\\n                            </div>\\n                        </div>\\n                    \") : '', \"\\n                </div>\\n            </div>\\n        \");\n    }\n\n    /**\n     * Education section is now combined with experience\n     */\n  }, {\n    key: \"createEducationSection\",\n    value: function createEducationSection() {\n      // This is now handled in the roadmap section\n      return '';\n    }\n\n    /**\n     * Setup intersection observer for scroll animations\n     */\n  }, {\n    key: \"setupIntersectionObserver\",\n    value: function setupIntersectionObserver() {\n      var _this5 = this;\n      var options = {\n        root: null,\n        rootMargin: '0px',\n        threshold: 0.1\n      };\n      this.intersectionObserver = new IntersectionObserver(function (entries) {\n        entries.forEach(function (entry) {\n          if (entry.isIntersecting && !_this5.observedElements.has(entry.target)) {\n            _this5.animateElement(entry.target);\n            _this5.observedElements.add(entry.target);\n          }\n        });\n      }, options);\n\n      // Observe all animate-on-scroll elements\n      var elements = this.container.querySelectorAll('.animate-on-scroll');\n      elements.forEach(function (el) {\n        return _this5.intersectionObserver.observe(el);\n      });\n    }\n\n    /**\n     * Animate element on scroll into view\n     */\n  }, {\n    key: \"animateElement\",\n    value: function animateElement(element) {\n      element.classList.add('is-visible');\n\n      // Animate skill bars if in skills section\n      if (element.classList.contains('skills-section')) {\n        this.animateSkillBars(element);\n      }\n\n      // Start typewriter effect if profile section\n      if (element.classList.contains('profile-section')) {\n        this.startTypewriterEffect();\n      }\n\n      // Animate timeline items in roadmap section\n      if (element.classList.contains('roadmap-section')) {\n        this.animateTimelineItems(element);\n      }\n    }\n\n    /**\n     * Animate timeline items with stagger\n     */\n  }, {\n    key: \"animateTimelineItems\",\n    value: function animateTimelineItems(roadmapSection) {\n      var timelineItems = roadmapSection.querySelectorAll('.timeline-item');\n      var educationItems = roadmapSection.querySelectorAll('.education-timeline-item');\n\n      // Animate experience timeline items\n      timelineItems.forEach(function (item, index) {\n        setTimeout(function () {\n          item.classList.add('is-visible');\n        }, index * 150);\n      });\n\n      // Animate education timeline items\n      educationItems.forEach(function (item, index) {\n        setTimeout(function () {\n          item.classList.add('is-visible');\n        }, index * 150 + 100);\n      });\n    }\n\n    /**\n     * Animate skill progress bars\n     */\n  }, {\n    key: \"animateSkillBars\",\n    value: function animateSkillBars(skillsSection) {\n      var skillBars = skillsSection.querySelectorAll('.skill-progress');\n      skillBars.forEach(function (bar, index) {\n        setTimeout(function () {\n          var progress = bar.getAttribute('data-progress');\n          bar.style.width = \"\".concat(progress, \"%\");\n        }, index * 100);\n      });\n    }\n\n    /**\n     * Start typewriter effect for bio\n     */\n  }, {\n    key: \"startTypewriterEffect\",\n    value: function startTypewriterEffect() {\n      var typewriterElement = this.container.querySelector('.typewriter');\n      if (!typewriterElement) return;\n      var text = typewriterElement.getAttribute('data-text');\n      if (!text) return;\n      this.typewriterElement = typewriterElement;\n      this.typewriterText = text;\n      this.typewriterIndex = 0;\n      typewriterElement.textContent = '';\n      this.typeNextCharacter();\n    }\n\n    /**\n     * Type next character in typewriter effect\n     */\n  }, {\n    key: \"typeNextCharacter\",\n    value: function typeNextCharacter() {\n      var _this6 = this;\n      if (this.typewriterIndex < this.typewriterText.length) {\n        this.typewriterElement.textContent += this.typewriterText.charAt(this.typewriterIndex);\n        this.typewriterIndex++;\n        setTimeout(function () {\n          return _this6.typeNextCharacter();\n        }, 30);\n      }\n    }\n\n    /**\n     * Setup event listeners\n     */\n  }, {\n    key: \"setupEventListeners\",\n    value: function setupEventListeners() {\n      var _this7 = this;\n      // Contact Me button\n      var contactBtn = this.container.querySelector('.btn-contact-me');\n      if (contactBtn) {\n        contactBtn.addEventListener('click', function () {\n          return _this7.openContactApp();\n        });\n      }\n\n      // Social links tracking\n      var socialLinks = this.container.querySelectorAll('.social-link');\n      socialLinks.forEach(function (link) {\n        link.addEventListener('click', function (e) {\n          var platform = link.className.split('social-')[1];\n          _EventBus_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].emit('about:socialClick', {\n            platform: platform\n          });\n        });\n      });\n\n      // Handle window resize for responsive adjustments\n      window.addEventListener('resize', this.debounce(function () {\n        _this7.handleResize();\n      }, 300));\n    }\n\n    /**\n     * Open Contact app\n     */\n  }, {\n    key: \"openContactApp\",\n    value: function openContactApp() {\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].emit('app:launch', {\n        appId: 'contact',\n        source: 'about-app'\n      });\n      this.showNotification('Opening Contact app...');\n    }\n\n    /**\n     * Handle window resize\n     */\n  }, {\n    key: \"handleResize\",\n    value: function handleResize() {\n      // Recalculate layouts if needed\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].emit('about:resize');\n    }\n\n    /**\n     * Show error message\n     */\n  }, {\n    key: \"showError\",\n    value: function showError(message) {\n      this.container.innerHTML = \"\\n            <div class=\\\"about-error\\\">\\n                <div class=\\\"error-icon\\\">\\u26A0\\uFE0F</div>\\n                <h3>Oops! Something went wrong</h3>\\n                <p>\".concat(message, \"</p>\\n                <button class=\\\"btn-retry\\\" onclick=\\\"location.reload()\\\">Retry</button>\\n            </div>\\n        \");\n    }\n\n    /**\n     * Show notification\n     */\n  }, {\n    key: \"showNotification\",\n    value: function showNotification(message) {\n      var notification = document.createElement('div');\n      notification.className = 'about-notification';\n      notification.textContent = message;\n      this.container.appendChild(notification);\n      setTimeout(function () {\n        notification.classList.add('show');\n      }, 10);\n      setTimeout(function () {\n        notification.classList.remove('show');\n        setTimeout(function () {\n          return notification.remove();\n        }, 300);\n      }, 3000);\n    }\n\n    /**\n     * Format number with k/m suffix\n     */\n  }, {\n    key: \"formatNumber\",\n    value: function formatNumber(num) {\n      if (num >= 1000000) {\n        return (num / 1000000).toFixed(1) + 'M';\n      }\n      if (num >= 1000) {\n        return (num / 1000).toFixed(1) + 'K';\n      }\n      return num.toString();\n    }\n\n    /**\n     * Debounce utility function\n     */\n  }, {\n    key: \"debounce\",\n    value: function debounce(func, wait) {\n      var timeout;\n      return function executedFunction() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        var later = function later() {\n          clearTimeout(timeout);\n          func.apply(void 0, args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n      };\n    }\n\n    /**\n     * Cleanup and destroy component\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // Disconnect intersection observer\n      if (this.intersectionObserver) {\n        this.intersectionObserver.disconnect();\n      }\n\n      // Clear observed elements\n      this.observedElements.clear();\n\n      // Clear container\n      this.container.innerHTML = '';\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].emit('about:destroyed');\n    }\n\n    /**\n     * Group items by year for positioning\n     */\n  }, {\n    key: \"groupItemsByYear\",\n    value: function groupItemsByYear(items) {\n      var grouped = {};\n      items.forEach(function (item, index) {\n        var _item$duration3;\n        var year = (_item$duration3 = item.duration) !== null && _item$duration3 !== void 0 && _item$duration3.start ? new Date(item.duration.start).getFullYear() : new Date().getFullYear();\n        if (!grouped[year]) {\n          grouped[year] = [];\n        }\n        grouped[year].push({\n          item: item,\n          index: index\n        });\n      });\n      return grouped;\n    }\n  }]);\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///430\n");

/***/ }),

/***/ 4270:
/*!****************************************************!*\
  !*** ./resources/js/components/browser/Browser.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _EventBus_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../EventBus.js */ 947);\n\n\n\n\n/**\n * Browser - Simple LinkOS Safari-style web browser\n * Opens external links in an iframe window\n */\n\n\nvar Browser = /*#__PURE__*/function () {\n  function Browser() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, Browser);\n    this.container = null;\n    this.currentUrl = 'about:blank';\n    this.history = ['about:blank'];\n    this.historyIndex = 0;\n    this.isLoading = false;\n    this.canGoBack = false;\n    this.canGoForward = false;\n    this.showStartPage = true;\n  }\n\n  /**\n   * Initialize Browser\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(Browser, [{\n    key: \"init\",\n    value: function () {\n      var _init = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(container) {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.container = container;\n              console.log('üåê Browser: Initializing...');\n              try {\n                this.render();\n                this.setupEventListeners();\n                console.log('üåê Browser: Initialized successfully');\n                _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('browser:ready');\n              } catch (error) {\n                console.error('Browser: Initialization failed', error);\n                this.renderError(error);\n              }\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function init(_x) {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n    /**\n     * Render Browser UI\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var html = \"\\n            <div class=\\\"browser-container\\\">\\n                <div class=\\\"browser-window\\\">\\n                    \".concat(this.renderToolbar(), \"\\n                    \").concat(this.renderContent(), \"\\n                </div>\\n            </div>\\n        \");\n      this.container.innerHTML = html;\n      this.updateNavigationState();\n    }\n\n    /**\n     * Render toolbar with navigation controls\n     */\n  }, {\n    key: \"renderToolbar\",\n    value: function renderToolbar() {\n      return \"\\n            <div class=\\\"browser-toolbar\\\">\\n                <div class=\\\"browser-nav-buttons\\\">\\n                    <button class=\\\"browser-btn browser-btn-back\\\" \".concat(!this.canGoBack ? 'disabled' : '', \" data-action=\\\"back\\\" title=\\\"Back\\\">\\n                        <span>\\u25C0</span>\\n                    </button>\\n                    <button class=\\\"browser-btn browser-btn-forward\\\" \").concat(!this.canGoForward ? 'disabled' : '', \" data-action=\\\"forward\\\" title=\\\"Forward\\\">\\n                        <span>\\u25B6</span>\\n                    </button>\\n                    <button class=\\\"browser-btn browser-btn-reload\\\" data-action=\\\"reload\\\" title=\\\"Reload\\\">\\n                        <span>\").concat(this.isLoading ? '‚úï' : '‚Üª', \"</span>\\n                    </button>\\n                </div>\\n                \\n                <div class=\\\"browser-address-bar\\\">\\n                    <span class=\\\"address-bar-icon\\\">\\uD83D\\uDD12</span>\\n                    <input \\n                        type=\\\"text\\\" \\n                        class=\\\"address-bar-input\\\" \\n                        value=\\\"\").concat(this.currentUrl, \"\\\" \\n                        placeholder=\\\"Search or enter website\\\"\\n                        spellcheck=\\\"false\\\"\\n                    />\\n                </div>\\n                \\n                <div class=\\\"browser-actions\\\">\\n                    <button class=\\\"browser-btn\\\" data-action=\\\"home\\\" title=\\\"Home\\\">\\n                        <span>\\uD83C\\uDFE0</span>\\n                    </button>\\n                </div>\\n            </div>\\n        \");\n    }\n\n    /**\n     * Render content area with iframe\n     */\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      if (this.showStartPage) {\n        return this.renderStartPage();\n      }\n      return \"\\n            <div class=\\\"browser-content\\\">\\n                <iframe \\n                    class=\\\"browser-iframe\\\" \\n                    src=\\\"\".concat(this.currentUrl, \"\\\"\\n                    sandbox=\\\"allow-same-origin allow-scripts allow-popups allow-forms allow-popups-to-escape-sandbox\\\"\\n                    allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\"\\n                    frameborder=\\\"0\\\"\\n                ></iframe>\\n                <div class=\\\"browser-loading \").concat(this.isLoading ? 'active' : '', \"\\\">\\n                    <div class=\\\"loading-bar\\\"></div>\\n                </div>\\n            </div>\\n        \");\n    }\n\n    /**\n     * Render start page (shown by default)\n     */\n  }, {\n    key: \"renderStartPage\",\n    value: function renderStartPage() {\n      return \"\\n            <div class=\\\"browser-content browser-start-page\\\">\\n                <div class=\\\"start-page-container\\\">\\n                    <div class=\\\"start-page-logo\\\">\\uD83C\\uDF10</div>\\n                    <h1 class=\\\"start-page-title\\\">Welcome to Browser</h1>\\n                    <p class=\\\"start-page-subtitle\\\">Enter a URL or search term to get started</p>\\n                    \\n                    <div class=\\\"start-page-suggestions\\\">\\n                        <div class=\\\"suggestion-category\\\">\\n                            <h3>Quick Links</h3>\\n                            <div class=\\\"suggestion-grid\\\">\\n                                <button class=\\\"suggestion-item\\\" data-url=\\\"https://www.bing.com\\\">\\n                                    <span class=\\\"suggestion-icon\\\">\\uD83D\\uDD0D</span>\\n                                    <span class=\\\"suggestion-label\\\">Bing Search</span>\\n                                </button>\\n                                <button class=\\\"suggestion-item\\\" data-url=\\\"https://www.wikipedia.org\\\">\\n                                    <span class=\\\"suggestion-icon\\\">\\uD83D\\uDCDA</span>\\n                                    <span class=\\\"suggestion-label\\\">Wikipedia</span>\\n                                </button>\\n                                <button class=\\\"suggestion-item\\\" data-url=\\\"https://github.com\\\">\\n                                    <span class=\\\"suggestion-icon\\\">\\uD83D\\uDCBB</span>\\n                                    <span class=\\\"suggestion-label\\\">GitHub</span>\\n                                </button>\\n                                <button class=\\\"suggestion-item\\\" data-url=\\\"https://www.youtube.com\\\">\\n                                    <span class=\\\"suggestion-icon\\\">\\uD83D\\uDCFA</span>\\n                                    <span class=\\\"suggestion-label\\\">YouTube</span>\\n                                </button>\\n                            </div>\\n                        </div>\\n                        \\n                        <div class=\\\"start-page-note\\\">\\n                            \\uD83D\\uDCA1 <strong>Note:</strong> Some websites (like Google) block iframe embedding for security. \\n                            Try using alternatives like Bing or DuckDuckGo for search.\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        \";\n    }\n\n    /**\n     * Setup event listeners\n     */\n  }, {\n    key: \"setupEventListeners\",\n    value: function setupEventListeners() {\n      var _this = this;\n      // Navigation buttons\n      this.container.addEventListener('click', function (e) {\n        var _e$target$closest;\n        var action = (_e$target$closest = e.target.closest('[data-action]')) === null || _e$target$closest === void 0 ? void 0 : _e$target$closest.dataset.action;\n        if (action === 'back') _this.goBack();\n        if (action === 'forward') _this.goForward();\n        if (action === 'reload') _this.reload();\n        if (action === 'home') _this.goHome();\n      });\n\n      // Start page suggestions\n      this.container.addEventListener('click', function (e) {\n        var suggestionItem = e.target.closest('.suggestion-item');\n        if (suggestionItem) {\n          var url = suggestionItem.dataset.url;\n          if (url) {\n            _this.navigateTo(url);\n          }\n        }\n      });\n\n      // Address bar\n      var addressInput = this.container.querySelector('.address-bar-input');\n      if (addressInput) {\n        addressInput.addEventListener('keydown', function (e) {\n          if (e.key === 'Enter') {\n            _this.navigateTo(e.target.value);\n          }\n        });\n        addressInput.addEventListener('focus', function (e) {\n          e.target.select();\n        });\n      }\n\n      // Iframe load events\n      var iframe = this.container.querySelector('.browser-iframe');\n      if (iframe) {\n        // Note: Load and error detection now handled in detectIframeBlocking()\n        // which is called from navigateTo()\n      }\n\n      // EventBus listeners\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].on('browser:navigate', function (data) {\n        if (data.url) _this.navigateTo(data.url);\n      });\n    }\n\n    /**\n     * Navigate to URL\n     */\n  }, {\n    key: \"navigateTo\",\n    value: function navigateTo(url) {\n      var _this2 = this;\n      // Handle empty or just whitespace\n      if (!url || !url.trim()) {\n        return;\n      }\n\n      // Validate and format URL\n      url = this.formatUrl(url);\n\n      // Check for self-referential URLs\n      if (this.isSelfReferential(url)) {\n        this.showSelfReferentialAlert();\n        return;\n      }\n\n      // Hide start page\n      this.showStartPage = false;\n\n      // Update history\n      if (this.history[this.historyIndex] !== url) {\n        this.history = this.history.slice(0, this.historyIndex + 1);\n        this.history.push(url);\n        this.historyIndex = this.history.length - 1;\n      }\n      this.currentUrl = url;\n      this.isLoading = true;\n\n      // Re-render to show iframe\n      this.render();\n      this.setupEventListeners();\n\n      // Update iframe src\n      var iframe = this.container.querySelector('.browser-iframe');\n      if (iframe) {\n        iframe.src = url;\n\n        // Simple load handler\n        iframe.addEventListener('load', function () {\n          _this2.isLoading = false;\n          _this2.updateLoadingState();\n        }, {\n          once: true\n        });\n      }\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('browser:navigated', {\n        url: url\n      });\n      console.log('üåê Browser: Navigated to', url);\n    }\n\n    /**\n     * Format URL (add https:// if missing)\n     */\n  }, {\n    key: \"formatUrl\",\n    value: function formatUrl(url) {\n      url = url.trim();\n\n      // If it looks like a search query, use Bing (Google blocks iframes)\n      if (!url.includes('.') || url.includes(' ')) {\n        return \"https://www.bing.com/search?q=\".concat(encodeURIComponent(url));\n      }\n\n      // Add protocol if missing\n      if (!url.startsWith('http://') && !url.startsWith('https://')) {\n        url = 'https://' + url;\n      }\n      return url;\n    }\n\n    /**\n     * Check if URL is self-referential\n     */\n  }, {\n    key: \"isSelfReferential\",\n    value: function isSelfReferential(url) {\n      var selfUrls = ['abdulme.link', 'localhost', '127.0.0.1', window.location.hostname];\n      return selfUrls.some(function (domain) {\n        return url.toLowerCase().includes(domain);\n      });\n    }\n\n    /**\n     * Show LinkOS-style alert for self-referential URLs\n     */\n  }, {\n    key: \"showSelfReferentialAlert\",\n    value: function showSelfReferentialAlert() {\n      var alertHtml = \"\\n            <div class=\\\"LinkOS-alert-overlay\\\">\\n                <div class=\\\"LinkOS-alert\\\">\\n                    <div class=\\\"LinkOS-alert-icon\\\">\\u26A0\\uFE0F</div>\\n                    <div class=\\\"LinkOS-alert-content\\\">\\n                        <h3 class=\\\"LinkOS-alert-title\\\">Nice Try! \\uD83D\\uDE04</h3>\\n                        <p class=\\\"LinkOS-alert-message\\\">\\n                            You're already here! No need to open this website in a browser within itself. \\n                            That would create a paradox and the universe might implode! \\uD83C\\uDF0C\\n                        </p>\\n                    </div>\\n                    <div class=\\\"LinkOS-alert-buttons\\\">\\n                        <button class=\\\"LinkOS-alert-btn LinkOS-alert-btn-primary\\\" data-alert-action=\\\"ok\\\">\\n                            OK\\n                        </button>\\n                    </div>\\n                </div>\\n            </div>\\n        \";\n\n      // Add alert to body\n      var alertElement = document.createElement('div');\n      alertElement.innerHTML = alertHtml;\n      document.body.appendChild(alertElement.firstElementChild);\n\n      // Add event listener for OK button\n      var okButton = document.querySelector('[data-alert-action=\"ok\"]');\n      if (okButton) {\n        okButton.addEventListener('click', function () {\n          var overlay = document.querySelector('.LinkOS-alert-overlay');\n          if (overlay) {\n            overlay.style.animation = 'fadeOut 0.2s ease-out';\n            setTimeout(function () {\n              return overlay.remove();\n            }, 200);\n          }\n        });\n      }\n\n      // Close on overlay click\n      var overlay = document.querySelector('.LinkOS-alert-overlay');\n      if (overlay) {\n        overlay.addEventListener('click', function (e) {\n          if (e.target === overlay) {\n            overlay.style.animation = 'fadeOut 0.2s ease-out';\n            setTimeout(function () {\n              return overlay.remove();\n            }, 200);\n          }\n        });\n      }\n    }\n\n    /**\n     * Go back in history\n     */\n  }, {\n    key: \"goBack\",\n    value: function goBack() {\n      if (this.historyIndex > 0) {\n        this.historyIndex--;\n        this.currentUrl = this.history[this.historyIndex];\n        var iframe = this.container.querySelector('.browser-iframe');\n        if (iframe) {\n          iframe.src = this.currentUrl;\n        }\n        this.updateNavigationState();\n        this.updateAddressBar();\n      }\n    }\n\n    /**\n     * Go forward in history\n     */\n  }, {\n    key: \"goForward\",\n    value: function goForward() {\n      if (this.historyIndex < this.history.length - 1) {\n        this.historyIndex++;\n        this.currentUrl = this.history[this.historyIndex];\n        var iframe = this.container.querySelector('.browser-iframe');\n        if (iframe) {\n          iframe.src = this.currentUrl;\n        }\n        this.updateNavigationState();\n        this.updateAddressBar();\n      }\n    }\n\n    /**\n     * Reload current page\n     */\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      var _this3 = this;\n      if (this.isLoading) {\n        // Stop loading\n        var iframe = this.container.querySelector('.browser-iframe');\n        if (iframe) {\n          iframe.src = 'about:blank';\n          setTimeout(function () {\n            iframe.src = _this3.currentUrl;\n          }, 10);\n        }\n      } else {\n        // Reload\n        var _iframe = this.container.querySelector('.browser-iframe');\n        if (_iframe) {\n          _iframe.src = _iframe.src;\n        }\n      }\n    }\n\n    /**\n     * Go to home page (Start page)\n     */\n  }, {\n    key: \"goHome\",\n    value: function goHome() {\n      this.showStartPage = true;\n      this.currentUrl = 'about:blank';\n      this.render();\n      this.setupEventListeners();\n    }\n\n    /**\n     * Update navigation button states\n     */\n  }, {\n    key: \"updateNavigationState\",\n    value: function updateNavigationState() {\n      this.canGoBack = this.historyIndex > 0;\n      this.canGoForward = this.historyIndex < this.history.length - 1;\n      var backBtn = this.container.querySelector('.browser-btn-back');\n      var forwardBtn = this.container.querySelector('.browser-btn-forward');\n      if (backBtn) {\n        backBtn.disabled = !this.canGoBack;\n      }\n      if (forwardBtn) {\n        forwardBtn.disabled = !this.canGoForward;\n      }\n    }\n\n    /**\n     * Update address bar value\n     */\n  }, {\n    key: \"updateAddressBar\",\n    value: function updateAddressBar() {\n      var addressInput = this.container.querySelector('.address-bar-input');\n      if (addressInput) {\n        addressInput.value = this.currentUrl;\n      }\n    }\n\n    /**\n     * Update loading state\n     */\n  }, {\n    key: \"updateLoadingState\",\n    value: function updateLoadingState() {\n      var loadingBar = this.container.querySelector('.browser-loading');\n      var reloadBtn = this.container.querySelector('.browser-btn-reload span');\n      if (loadingBar) {\n        if (this.isLoading) {\n          loadingBar.classList.add('active');\n        } else {\n          loadingBar.classList.remove('active');\n        }\n      }\n      if (reloadBtn) {\n        reloadBtn.textContent = this.isLoading ? '‚úï' : '‚Üª';\n      }\n    }\n\n    /**\n     * Render error\n     */\n  }, {\n    key: \"renderError\",\n    value: function renderError(error) {\n      this.container.innerHTML = \"\\n            <div class=\\\"browser-error\\\">\\n                <h3>Failed to load Browser</h3>\\n                <p>\".concat(error.message, \"</p>\\n            </div>\\n        \");\n    }\n\n    /**\n     * Destroy component\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].off('browser:navigate');\n      this.container = null;\n      console.log('üåê Browser: Destroyed');\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Browser);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4270\n");

/***/ }),

/***/ 9766:
/*!****************************************************!*\
  !*** ./resources/js/components/contact/Contact.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Contact)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 4467);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _EventBus_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../EventBus.js */ 947);\n\n\n\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n\n/**\n * Contact Application Component\n * \n * Features:\n * - Contact form with real-time validation\n * - Auto-save drafts in localStorage\n * - Contact information cards\n * - Social media integration\n * - Success/error animations\n * \n * @author AbdulmeLink Portfolio\n * @version 1.0.0\n */\n\n\nvar Contact = /*#__PURE__*/function () {\n  function Contact(container) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, Contact);\n    this.container = container;\n    this.contactInfo = null;\n    this.formData = {\n      name: '',\n      email: '',\n      subject: '',\n      message: ''\n    };\n    this.validationErrors = {};\n    this.isSubmitting = false;\n    this.autoSaveTimer = null;\n    this.init();\n  }\n\n  /**\n   * Initialize contact component\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Contact, [{\n    key: \"init\",\n    value: function () {\n      var _init = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee() {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              this.setupContainer();\n              this.loadDraft();\n              _context.next = 5;\n              return this.loadContactInfo();\n            case 5:\n              this.createLayout();\n              this.setupEventListeners();\n              this.loadSavedDraft();\n              _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('contact:ready');\n              _context.next = 15;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Failed to initialize Contact:', _context.t0);\n              this.showError('Failed to load contact form. Please try again.');\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 11]]);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n    /**\n     * Setup container with loading state\n     */\n  }, {\n    key: \"setupContainer\",\n    value: function setupContainer() {\n      this.container.className = 'contact-app';\n      this.container.innerHTML = \"\\n            <div class=\\\"contact-loading\\\">\\n                <div class=\\\"loading-spinner\\\"></div>\\n                <p>Loading contact form...</p>\\n            </div>\\n        \";\n    }\n\n    /**\n     * Load contact information from API\n     */\n  }, {\n    key: \"loadContactInfo\",\n    value: function () {\n      var _loadContactInfo = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee2() {\n        var response, result;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch('/api/contact');\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return response.json();\n            case 6:\n              result = _context2.sent;\n              if (!result.success) {\n                _context2.next = 11;\n                break;\n              }\n              this.contactInfo = result.data;\n              _context2.next = 12;\n              break;\n            case 11:\n              throw new Error(result.message || 'Failed to load contact info');\n            case 12:\n              _context2.next = 18;\n              break;\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error loading contact info:', _context2.t0);\n              // Use default contact info\n              this.contactInfo = {\n                contact: {\n                  email: 'hello@abdulme.link',\n                  phone: '+90 555 123 4567',\n                  location: 'Istanbul, Turkey',\n                  responseTime: '24 hours'\n                },\n                social: {}\n              };\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 14]]);\n      }));\n      function loadContactInfo() {\n        return _loadContactInfo.apply(this, arguments);\n      }\n      return loadContactInfo;\n    }()\n    /**\n     * Create main layout structure\n     */\n  }, {\n    key: \"createLayout\",\n    value: function createLayout() {\n      this.container.innerHTML = \"\\n            <div class=\\\"contact-container\\\">\\n                <div class=\\\"contact-content\\\">\\n                    <div class=\\\"contact-header\\\">\\n                        <h1>Get In Touch</h1>\\n                        <p>Have a project in mind? Let's work together!</p>\\n                    </div>\\n                    \\n                    <div class=\\\"contact-grid\\\">\\n                        <div class=\\\"contact-form-wrapper\\\">\\n                            \".concat(this.createContactForm(), \"\\n                        </div>\\n                        \\n                        <div class=\\\"contact-sidebar\\\">\\n                            \").concat(this.createContactCards(), \"\\n                            \").concat(this.createSocialLinks(), \"\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        \");\n    }\n\n    /**\n     * Create contact form\n     */\n  }, {\n    key: \"createContactForm\",\n    value: function createContactForm() {\n      return \"\\n            <form class=\\\"contact-form\\\" id=\\\"contactForm\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"name\\\" class=\\\"form-label\\\">Name *</label>\\n                    <input \\n                        type=\\\"text\\\" \\n                        id=\\\"name\\\" \\n                        name=\\\"name\\\" \\n                        class=\\\"form-input\\\"\\n                        placeholder=\\\"Your full name\\\"\\n                        value=\\\"\".concat(this.formData.name, \"\\\"\\n                        required\\n                        minlength=\\\"2\\\"\\n                    />\\n                    <span class=\\\"form-error\\\" data-field=\\\"name\\\"></span>\\n                </div>\\n                \\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"email\\\" class=\\\"form-label\\\">Email *</label>\\n                    <input \\n                        type=\\\"email\\\" \\n                        id=\\\"email\\\" \\n                        name=\\\"email\\\" \\n                        class=\\\"form-input\\\"\\n                        placeholder=\\\"your.email@example.com\\\"\\n                        value=\\\"\").concat(this.formData.email, \"\\\"\\n                        required\\n                    />\\n                    <span class=\\\"form-error\\\" data-field=\\\"email\\\"></span>\\n                </div>\\n                \\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"subject\\\" class=\\\"form-label\\\">Subject *</label>\\n                    <input \\n                        type=\\\"text\\\" \\n                        id=\\\"subject\\\" \\n                        name=\\\"subject\\\" \\n                        class=\\\"form-input\\\"\\n                        placeholder=\\\"What's this about?\\\"\\n                        value=\\\"\").concat(this.formData.subject, \"\\\"\\n                        required\\n                        minlength=\\\"5\\\"\\n                    />\\n                    <span class=\\\"form-error\\\" data-field=\\\"subject\\\"></span>\\n                </div>\\n                \\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"message\\\" class=\\\"form-label\\\">Message *</label>\\n                    <textarea \\n                        id=\\\"message\\\" \\n                        name=\\\"message\\\" \\n                        class=\\\"form-textarea\\\"\\n                        placeholder=\\\"Tell me about your project...\\\"\\n                        rows=\\\"6\\\"\\n                        required\\n                        minlength=\\\"20\\\"\\n                        maxlength=\\\"1000\\\"\\n                    >\").concat(this.formData.message, \"</textarea>\\n                    <div class=\\\"textarea-meta\\\">\\n                        <span class=\\\"form-error\\\" data-field=\\\"message\\\"></span>\\n                        <span class=\\\"character-count\\\">\\n                            <span class=\\\"current\\\">0</span> / 1000\\n                        </span>\\n                    </div>\\n                </div>\\n                \\n                <div class=\\\"form-actions\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" id=\\\"clearBtn\\\">\\n                        Clear\\n                    </button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" id=\\\"submitBtn\\\">\\n                        <span class=\\\"btn-text\\\">Send Message</span>\\n                        <span class=\\\"btn-spinner\\\" style=\\\"display: none;\\\">\\n                            <span class=\\\"spinner\\\"></span>\\n                            Sending...\\n                        </span>\\n                    </button>\\n                </div>\\n                \\n                <div class=\\\"form-notice\\\">\\n                    <i class=\\\"icon-info\\\"></i>\\n                    Your information is safe and will never be shared.\\n                </div>\\n            </form>\\n        \");\n    }\n\n    /**\n     * Create contact information cards\n     */\n  }, {\n    key: \"createContactCards\",\n    value: function createContactCards() {\n      var contact = this.contactInfo.contact;\n      return \"\\n            <div class=\\\"contact-cards\\\">\\n                <h3>Contact Information</h3>\\n                \\n                <div class=\\\"contact-card\\\" data-action=\\\"copy-email\\\">\\n                    <div class=\\\"card-icon\\\">\\n                        <i class=\\\"icon-email\\\"></i>\\n                    </div>\\n                    <div class=\\\"card-content\\\">\\n                        <h4>Email</h4>\\n                        <p>\".concat(contact.email, \"</p>\\n                        <span class=\\\"card-action\\\">Click to copy</span>\\n                    </div>\\n                </div>\\n                \\n                <div class=\\\"contact-card\\\">\\n                    <div class=\\\"card-icon\\\">\\n                        <i class=\\\"icon-phone\\\"></i>\\n                    </div>\\n                    <div class=\\\"card-content\\\">\\n                        <h4>Phone</h4>\\n                        <p>\").concat(contact.phone, \"</p>\\n                    </div>\\n                </div>\\n                \\n                <div class=\\\"contact-card\\\">\\n                    <div class=\\\"card-icon\\\">\\n                        <i class=\\\"icon-location\\\"></i>\\n                    </div>\\n                    <div class=\\\"card-content\\\">\\n                        <h4>Location</h4>\\n                        <p>\").concat(contact.location, \"</p>\\n                    </div>\\n                </div>\\n                \\n                <div class=\\\"contact-card\\\">\\n                    <div class=\\\"card-icon\\\">\\n                        <i class=\\\"icon-clock\\\"></i>\\n                    </div>\\n                    <div class=\\\"card-content\\\">\\n                        <h4>Response Time</h4>\\n                        <p>Usually within \").concat(contact.responseTime, \"</p>\\n                    </div>\\n                </div>\\n            </div>\\n        \");\n    }\n\n    /**\n     * Create social media links\n     */\n  }, {\n    key: \"createSocialLinks\",\n    value: function createSocialLinks() {\n      var social = this.contactInfo.social;\n      var platforms = [{\n        key: 'github',\n        name: 'GitHub',\n        icon: 'github'\n      }, {\n        key: 'linkedin',\n        name: 'LinkedIn',\n        icon: 'linkedin'\n      }, {\n        key: 'twitter',\n        name: 'Twitter',\n        icon: 'twitter'\n      }, {\n        key: 'dribbble',\n        name: 'Dribbble',\n        icon: 'dribbble'\n      }];\n      return \"\\n            <div class=\\\"social-section\\\">\\n                <h3>Connect With Me</h3>\\n                <div class=\\\"social-links\\\">\\n                    \".concat(platforms.map(function (platform) {\n        if (!social[platform.key]) return '';\n        return \"\\n                            <a href=\\\"\".concat(social[platform.key], \"\\\" \\n                               class=\\\"social-link social-\").concat(platform.key, \"\\\" \\n                               target=\\\"_blank\\\" \\n                               rel=\\\"noopener noreferrer\\\"\\n                               title=\\\"\").concat(platform.name, \"\\\">\\n                                <i class=\\\"icon-\").concat(platform.icon, \"\\\"></i>\\n                                <span>\").concat(platform.name, \"</span>\\n                            </a>\\n                        \");\n      }).join(''), \"\\n                </div>\\n            </div>\\n        \");\n    }\n\n    /**\n     * Setup event listeners\n     */\n  }, {\n    key: \"setupEventListeners\",\n    value: function setupEventListeners() {\n      var _this = this;\n      var form = this.container.querySelector('#contactForm');\n      var clearBtn = this.container.querySelector('#clearBtn');\n      var inputs = this.container.querySelectorAll('.form-input, .form-textarea');\n      var messageInput = this.container.querySelector('#message');\n\n      // Form submission\n      if (form) {\n        form.addEventListener('submit', function (e) {\n          return _this.handleSubmit(e);\n        });\n      }\n\n      // Clear button\n      if (clearBtn) {\n        clearBtn.addEventListener('click', function () {\n          return _this.clearForm();\n        });\n      }\n\n      // Real-time validation and auto-save\n      inputs.forEach(function (input) {\n        input.addEventListener('input', function () {\n          _this.handleInputChange(input);\n          _this.scheduleAutoSave();\n        });\n        input.addEventListener('blur', function () {\n          _this.validateField(input.name);\n        });\n      });\n\n      // Character count for message\n      if (messageInput) {\n        messageInput.addEventListener('input', function () {\n          _this.updateCharacterCount();\n        });\n        this.updateCharacterCount();\n      }\n\n      // Copy email functionality\n      var copyEmailCard = this.container.querySelector('[data-action=\"copy-email\"]');\n      if (copyEmailCard) {\n        copyEmailCard.addEventListener('click', function () {\n          return _this.copyEmail();\n        });\n      }\n    }\n\n    /**\n     * Handle input change\n     */\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(input) {\n      this.formData[input.name] = input.value;\n\n      // Clear error when user starts typing\n      if (this.validationErrors[input.name]) {\n        delete this.validationErrors[input.name];\n        this.clearFieldError(input.name);\n      }\n    }\n\n    /**\n     * Validate single field\n     */\n  }, {\n    key: \"validateField\",\n    value: function validateField(fieldName) {\n      var value = this.formData[fieldName] || '';\n      var rules = {\n        name: {\n          min: 2,\n          message: 'Name must be at least 2 characters'\n        },\n        email: {\n          pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n          message: 'Please enter a valid email address'\n        },\n        subject: {\n          min: 5,\n          message: 'Subject must be at least 5 characters'\n        },\n        message: {\n          min: 20,\n          message: 'Message must be at least 20 characters'\n        }\n      };\n      var rule = rules[fieldName];\n      if (!rule) return true;\n      var isValid = true;\n      var error = '';\n      if (!value.trim()) {\n        isValid = false;\n        error = \"\".concat(fieldName.charAt(0).toUpperCase() + fieldName.slice(1), \" is required\");\n      } else if (rule.min && value.length < rule.min) {\n        isValid = false;\n        error = rule.message;\n      } else if (rule.pattern && !rule.pattern.test(value)) {\n        isValid = false;\n        error = rule.message;\n      }\n      if (!isValid) {\n        this.validationErrors[fieldName] = error;\n        this.showFieldError(fieldName, error);\n      } else {\n        delete this.validationErrors[fieldName];\n        this.clearFieldError(fieldName);\n      }\n      return isValid;\n    }\n\n    /**\n     * Show field error\n     */\n  }, {\n    key: \"showFieldError\",\n    value: function showFieldError(fieldName, message) {\n      var errorElement = this.container.querySelector(\"[data-field=\\\"\".concat(fieldName, \"\\\"]\"));\n      var inputElement = this.container.querySelector(\"[name=\\\"\".concat(fieldName, \"\\\"]\"));\n      if (errorElement) {\n        errorElement.textContent = message;\n        errorElement.style.display = 'block';\n      }\n      if (inputElement) {\n        inputElement.classList.add('error');\n      }\n    }\n\n    /**\n     * Clear field error\n     */\n  }, {\n    key: \"clearFieldError\",\n    value: function clearFieldError(fieldName) {\n      var errorElement = this.container.querySelector(\"[data-field=\\\"\".concat(fieldName, \"\\\"]\"));\n      var inputElement = this.container.querySelector(\"[name=\\\"\".concat(fieldName, \"\\\"]\"));\n      if (errorElement) {\n        errorElement.textContent = '';\n        errorElement.style.display = 'none';\n      }\n      if (inputElement) {\n        inputElement.classList.remove('error');\n      }\n    }\n\n    /**\n     * Update character count\n     */\n  }, {\n    key: \"updateCharacterCount\",\n    value: function updateCharacterCount() {\n      var messageInput = this.container.querySelector('#message');\n      var countElement = this.container.querySelector('.character-count .current');\n      if (messageInput && countElement) {\n        var length = messageInput.value.length;\n        countElement.textContent = length;\n        if (length > 1000) {\n          countElement.parentElement.classList.add('over-limit');\n        } else {\n          countElement.parentElement.classList.remove('over-limit');\n        }\n      }\n    }\n\n    /**\n     * Handle form submission\n     */\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee3(e) {\n        var _this2 = this;\n        var fields, isValid, response, result;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              e.preventDefault();\n              if (!this.isSubmitting) {\n                _context3.next = 3;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 3:\n              // Validate all fields\n              fields = ['name', 'email', 'subject', 'message'];\n              isValid = true;\n              fields.forEach(function (field) {\n                if (!_this2.validateField(field)) {\n                  isValid = false;\n                }\n              });\n              if (isValid) {\n                _context3.next = 9;\n                break;\n              }\n              this.showNotification('Please fix the errors before submitting', 'error');\n              return _context3.abrupt(\"return\");\n            case 9:\n              this.isSubmitting = true;\n              this.updateSubmitButton(true);\n              _context3.prev = 11;\n              _context3.next = 14;\n              return fetch('/api/contact/submit', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'X-Requested-With': 'XMLHttpRequest'\n                },\n                body: JSON.stringify(this.formData)\n              });\n            case 14:\n              response = _context3.sent;\n              _context3.next = 17;\n              return response.json();\n            case 17:\n              result = _context3.sent;\n              if (result.success) {\n                this.showSuccess(result.message);\n                this.clearForm();\n                this.clearDraft();\n                _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('contact:submitted', this.formData);\n              } else {\n                this.showNotification(result.message || 'Failed to send message', 'error');\n              }\n              _context3.next = 25;\n              break;\n            case 21:\n              _context3.prev = 21;\n              _context3.t0 = _context3[\"catch\"](11);\n              console.error('Form submission error:', _context3.t0);\n              this.showNotification('Failed to send message. Please try again.', 'error');\n            case 25:\n              _context3.prev = 25;\n              this.isSubmitting = false;\n              this.updateSubmitButton(false);\n              return _context3.finish(25);\n            case 29:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[11, 21, 25, 29]]);\n      }));\n      function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      }\n      return handleSubmit;\n    }()\n    /**\n     * Update submit button state\n     */\n  }, {\n    key: \"updateSubmitButton\",\n    value: function updateSubmitButton(isLoading) {\n      var submitBtn = this.container.querySelector('#submitBtn');\n      var btnText = submitBtn === null || submitBtn === void 0 ? void 0 : submitBtn.querySelector('.btn-text');\n      var btnSpinner = submitBtn === null || submitBtn === void 0 ? void 0 : submitBtn.querySelector('.btn-spinner');\n      if (submitBtn) {\n        submitBtn.disabled = isLoading;\n        if (btnText) btnText.style.display = isLoading ? 'none' : 'inline';\n        if (btnSpinner) btnSpinner.style.display = isLoading ? 'inline-flex' : 'none';\n      }\n    }\n\n    /**\n     * Clear form\n     */\n  }, {\n    key: \"clearForm\",\n    value: function clearForm() {\n      this.formData = {\n        name: '',\n        email: '',\n        subject: '',\n        message: ''\n      };\n      var form = this.container.querySelector('#contactForm');\n      if (form) {\n        form.reset();\n      }\n      this.validationErrors = {};\n      this.updateCharacterCount();\n      this.clearDraft();\n    }\n\n    /**\n     * Copy email to clipboard\n     */\n  }, {\n    key: \"copyEmail\",\n    value: function () {\n      var _copyEmail = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee4() {\n        var email;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              email = this.contactInfo.contact.email;\n              _context4.prev = 1;\n              _context4.next = 4;\n              return navigator.clipboard.writeText(email);\n            case 4:\n              this.showNotification('Email copied to clipboard!', 'success');\n              _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('contact:emailCopied', {\n                email: email\n              });\n              _context4.next = 12;\n              break;\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](1);\n              console.error('Failed to copy email:', _context4.t0);\n              this.showNotification('Failed to copy email', 'error');\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[1, 8]]);\n      }));\n      function copyEmail() {\n        return _copyEmail.apply(this, arguments);\n      }\n      return copyEmail;\n    }()\n    /**\n     * Load draft from localStorage\n     */\n  }, {\n    key: \"loadDraft\",\n    value: function loadDraft() {\n      try {\n        var draft = localStorage.getItem('contact_draft');\n        if (draft) {\n          var parsed = JSON.parse(draft);\n          this.formData = _objectSpread(_objectSpread({}, this.formData), parsed);\n        }\n      } catch (error) {\n        console.error('Failed to load draft:', error);\n      }\n    }\n\n    /**\n     * Load saved draft into form fields\n     */\n  }, {\n    key: \"loadSavedDraft\",\n    value: function loadSavedDraft() {\n      var _this3 = this;\n      Object.keys(this.formData).forEach(function (key) {\n        var input = _this3.container.querySelector(\"[name=\\\"\".concat(key, \"\\\"]\"));\n        if (input && _this3.formData[key]) {\n          input.value = _this3.formData[key];\n        }\n      });\n      this.updateCharacterCount();\n    }\n\n    /**\n     * Schedule auto-save\n     */\n  }, {\n    key: \"scheduleAutoSave\",\n    value: function scheduleAutoSave() {\n      var _this4 = this;\n      if (this.autoSaveTimer) {\n        clearTimeout(this.autoSaveTimer);\n      }\n      this.autoSaveTimer = setTimeout(function () {\n        _this4.saveDraft();\n      }, 1000);\n    }\n\n    /**\n     * Save draft to localStorage\n     */\n  }, {\n    key: \"saveDraft\",\n    value: function saveDraft() {\n      try {\n        localStorage.setItem('contact_draft', JSON.stringify(this.formData));\n      } catch (error) {\n        console.error('Failed to save draft:', error);\n      }\n    }\n\n    /**\n     * Clear draft from localStorage\n     */\n  }, {\n    key: \"clearDraft\",\n    value: function clearDraft() {\n      try {\n        localStorage.removeItem('contact_draft');\n      } catch (error) {\n        console.error('Failed to clear draft:', error);\n      }\n    }\n\n    /**\n     * Show success message\n     */\n  }, {\n    key: \"showSuccess\",\n    value: function showSuccess(message) {\n      var _this5 = this;\n      var successDiv = document.createElement('div');\n      successDiv.className = 'form-success-message';\n      successDiv.innerHTML = \"\\n            <div class=\\\"success-icon\\\">\\u2713</div>\\n            <h3>Message Sent!</h3>\\n            <p>\".concat(message, \"</p>\\n        \");\n      var formWrapper = this.container.querySelector('.contact-form-wrapper');\n      if (formWrapper) {\n        formWrapper.innerHTML = '';\n        formWrapper.appendChild(successDiv);\n\n        // Reset form after 5 seconds\n        setTimeout(function () {\n          _this5.createLayout();\n          _this5.setupEventListeners();\n        }, 5000);\n      }\n    }\n\n    /**\n     * Show notification\n     */\n  }, {\n    key: \"showNotification\",\n    value: function showNotification(message) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'info';\n      var notification = document.createElement('div');\n      notification.className = \"contact-notification notification-\".concat(type);\n      notification.textContent = message;\n      this.container.appendChild(notification);\n      setTimeout(function () {\n        notification.classList.add('show');\n      }, 10);\n      setTimeout(function () {\n        notification.classList.remove('show');\n        setTimeout(function () {\n          return notification.remove();\n        }, 300);\n      }, 3000);\n    }\n\n    /**\n     * Show error state\n     */\n  }, {\n    key: \"showError\",\n    value: function showError(message) {\n      this.container.innerHTML = \"\\n            <div class=\\\"contact-error\\\">\\n                <div class=\\\"error-icon\\\">\\u26A0\\uFE0F</div>\\n                <h3>Oops! Something went wrong</h3>\\n                <p>\".concat(message, \"</p>\\n                <button class=\\\"btn-retry\\\" onclick=\\\"location.reload()\\\">Retry</button>\\n            </div>\\n        \");\n    }\n\n    /**\n     * Cleanup and destroy component\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // Save draft before destroying\n      if (Object.values(this.formData).some(function (v) {\n        return v;\n      })) {\n        this.saveDraft();\n      }\n\n      // Clear timers\n      if (this.autoSaveTimer) {\n        clearTimeout(this.autoSaveTimer);\n      }\n\n      // Clear container\n      this.container.innerHTML = '';\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('contact:destroyed');\n    }\n  }]);\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9766\n");

/***/ }),

/***/ 8720:
/*!**************************************************!*\
  !*** ./resources/js/components/finder/Finder.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 4467);\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ 3453);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _services_FileSystemService_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/FileSystemService.js */ 5979);\n/* harmony import */ var _EventBus_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../EventBus.js */ 947);\n/* harmony import */ var _config_FinderConfig_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../config/FinderConfig.js */ 9005);\n\n\n\n\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n\n/**\n * Finder - LinkOS-style file browser\n * Displays files and folders from FileSystemService\n */\n\n\n\n\nvar Finder = /*#__PURE__*/function () {\n  function Finder() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this, Finder);\n    this.container = null;\n    this.currentPath = '/';\n    this.viewMode = _config_FinderConfig_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].DEFAULTS.viewMode;\n    this.sortBy = _config_FinderConfig_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].DEFAULTS.sortBy;\n    this.sortOrder = _config_FinderConfig_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].DEFAULTS.sortOrder;\n    this.selectedItems = [];\n    this.history = ['/'];\n    this.historyIndex = 0;\n    this.searchQuery = '';\n    this.sidebarCollapsed = false;\n  }\n\n  /**\n   * Initialize Finder\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Finder, [{\n    key: \"init\",\n    value: function () {\n      var _init = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().mark(function _callee(container) {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.container = container;\n              console.log('üìÅ Finder: Initializing...');\n              _context.prev = 2;\n              _context.next = 5;\n              return _services_FileSystemService_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].loadFileSystem();\n            case 5:\n              // Render UI\n              this.render();\n\n              // Setup event listeners\n              this.setupEventListeners();\n              console.log('üìÅ Finder: Initialized successfully');\n              _EventBus_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].emit('finder:ready');\n              _context.next = 15;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n              console.error('Finder: Initialization failed', _context.t0);\n              this.renderError(_context.t0);\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[2, 11]]);\n      }));\n      function init(_x) {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n    /**\n     * Render Finder UI\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var html = \"\\n            <div class=\\\"finder-container\\\">\\n                <div class=\\\"finder-window\\\">\\n                    \".concat(this.renderToolbar(), \"\\n                    <div class=\\\"finder-body\\\">\\n                        \").concat(this.renderSidebar(), \"\\n                        \").concat(this.renderContent(), \"\\n                    </div>\\n                </div>\\n            </div>\\n        \");\n      this.container.innerHTML = html;\n      console.log('üìÅ Finder: Rendered HTML, container has', this.container.children.length, 'children');\n      console.log('üìÅ Finder: Container dimensions:', this.container.offsetWidth, 'x', this.container.offsetHeight);\n    }\n\n    /**\n     * Render toolbar\n     */\n  }, {\n    key: \"renderToolbar\",\n    value: function renderToolbar() {\n      var canGoBack = this.historyIndex > 0;\n      var canGoForward = this.historyIndex < this.history.length - 1;\n      return \"\\n            <div class=\\\"finder-toolbar\\\">\\n                <div class=\\\"finder-nav-buttons\\\">\\n                    <button class=\\\"finder-btn finder-btn-back\\\" \".concat(!canGoBack ? 'disabled' : '', \" data-action=\\\"back\\\">\\n                        <span>\\u25C0</span>\\n                    </button>\\n                    <button class=\\\"finder-btn finder-btn-forward\\\" \").concat(!canGoForward ? 'disabled' : '', \" data-action=\\\"forward\\\">\\n                        <span>\\u25B6</span>\\n                    </button>\\n                </div>\\n                \\n                <div class=\\\"finder-breadcrumb\\\">\\n                    \").concat(this.renderBreadcrumb(), \"\\n                </div>\\n                \\n                <div class=\\\"finder-view-controls\\\">\\n                    <button class=\\\"finder-btn \").concat(this.viewMode === 'grid' ? 'active' : '', \"\\\" data-action=\\\"view-grid\\\" title=\\\"Grid View\\\">\\n                        <span>\\u229E</span>\\n                    </button>\\n                    <button class=\\\"finder-btn \").concat(this.viewMode === 'list' ? 'active' : '', \"\\\" data-action=\\\"view-list\\\" title=\\\"List View\\\">\\n                        <span>\\u2630</span>\\n                    </button>\\n                    <button class=\\\"finder-btn \").concat(this.viewMode === 'column' ? 'active' : '', \"\\\" data-action=\\\"view-column\\\" title=\\\"Column View\\\">\\n                        <span>\\u22A1</span>\\n                    </button>\\n                </div>\\n                \\n                <div class=\\\"finder-search\\\">\\n                    <input type=\\\"text\\\" placeholder=\\\"Search\\\" class=\\\"finder-search-input\\\" value=\\\"\").concat(this.searchQuery, \"\\\" />\\n                </div>\\n            </div>\\n        \");\n    }\n\n    /**\n     * Render breadcrumb navigation\n     */\n  }, {\n    key: \"renderBreadcrumb\",\n    value: function renderBreadcrumb() {\n      var parts = this.currentPath.split('/').filter(function (p) {\n        return p;\n      });\n      var crumbs = '<span class=\"breadcrumb-item\" data-path=\"/\">Root</span>';\n      var path = '';\n      parts.forEach(function (part) {\n        path += '/' + part;\n        crumbs += \" <span class=\\\"breadcrumb-sep\\\">\\u203A</span> <span class=\\\"breadcrumb-item\\\" data-path=\\\"\".concat(path, \"\\\">\").concat(part, \"</span>\");\n      });\n      return crumbs;\n    }\n\n    /**\n     * Render sidebar\n     */\n  }, {\n    key: \"renderSidebar\",\n    value: function renderSidebar() {\n      var _this = this;\n      return \"\\n            <div class=\\\"finder-sidebar \".concat(this.sidebarCollapsed ? 'collapsed' : '', \"\\\">\\n                <div class=\\\"sidebar-section\\\">\\n                    <div class=\\\"sidebar-header\\\">Favorites</div>\\n                    \").concat(_config_FinderConfig_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].DEFAULT_FAVORITES.map(function (fav) {\n        return \"\\n                        <div class=\\\"sidebar-item \".concat(_this.currentPath === fav.path ? 'active' : '', \"\\\" data-path=\\\"\").concat(fav.path, \"\\\">\\n                            <span class=\\\"sidebar-icon\\\">\").concat(fav.icon, \"</span>\\n                            <span class=\\\"sidebar-label\\\">\").concat(fav.name, \"</span>\\n                        </div>\\n                    \");\n      }).join(''), \"\\n                </div>\\n                \\n                <div class=\\\"sidebar-section\\\">\\n                    <div class=\\\"sidebar-header\\\">Locations</div>\\n                    \").concat(_config_FinderConfig_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].SYSTEM_LOCATIONS.map(function (loc) {\n        return \"\\n                        <div class=\\\"sidebar-item \".concat(_this.currentPath === loc.path ? 'active' : '', \"\\\" data-path=\\\"\").concat(loc.path, \"\\\">\\n                            <span class=\\\"sidebar-icon\\\">\").concat(loc.icon, \"</span>\\n                            <span class=\\\"sidebar-label\\\">\").concat(loc.name, \"</span>\\n                        </div>\\n                    \");\n      }).join(''), \"\\n                </div>\\n            </div>\\n        \");\n    }\n\n    /**\n     * Render content area\n     */\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var contents = _services_FileSystemService_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].getFolderContents(this.currentPath);\n      if (!contents) {\n        return '<div class=\"finder-content\"><div class=\"finder-error\">Folder not found</div></div>';\n      }\n      var items = Object.entries(contents).map(function (_ref) {\n        var _ref2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_ref, 2),\n          name = _ref2[0],\n          node = _ref2[1];\n        return _objectSpread({\n          name: name\n        }, node);\n      });\n\n      // Filter by search query if exists\n      if (this.searchQuery) {\n        var query = this.searchQuery.toLowerCase();\n        items = items.filter(function (item) {\n          return item.name.toLowerCase().includes(query);\n        });\n      }\n\n      // Sort items\n      var sortedItems = this.sortItems(items);\n      return \"\\n            <div class=\\\"finder-content finder-view-\".concat(this.viewMode, \"\\\">\\n                \").concat(sortedItems.length === 0 ? \"<div class=\\\"finder-empty\\\">\".concat(this.searchQuery ? 'No items match your search' : 'This folder is empty', \"</div>\") : '', \"\\n                \").concat(this.viewMode === 'grid' ? this.renderGridView(sortedItems) : '', \"\\n                \").concat(this.viewMode === 'list' ? this.renderListView(sortedItems) : '', \"\\n                \").concat(this.viewMode === 'column' ? this.renderColumnView(sortedItems) : '', \"\\n            </div>\\n        \");\n    }\n\n    /**\n     * Render grid view\n     */\n  }, {\n    key: \"renderGridView\",\n    value: function renderGridView(items) {\n      var _this2 = this;\n      return \"\\n            <div class=\\\"finder-grid\\\">\\n                \".concat(items.map(function (item) {\n        return \"\\n                    <div class=\\\"grid-item \".concat(item.type, \"\\\" data-name=\\\"\").concat(item.name, \"\\\" data-type=\\\"\").concat(item.type, \"\\\">\\n                        <div class=\\\"grid-icon\\\">\").concat(_this2.getFileIcon(item), \"</div>\\n                        <div class=\\\"grid-label\\\">\").concat(item.name, \"</div>\\n                    </div>\\n                \");\n      }).join(''), \"\\n            </div>\\n        \");\n    }\n\n    /**\n     * Render list view\n     */\n  }, {\n    key: \"renderListView\",\n    value: function renderListView(items) {\n      var _this3 = this;\n      return \"\\n            <div class=\\\"finder-list\\\">\\n                <div class=\\\"list-header\\\">\\n                    <div class=\\\"list-col-name\\\">Name</div>\\n                    <div class=\\\"list-col-modified\\\">Modified</div>\\n                    <div class=\\\"list-col-size\\\">Size</div>\\n                    <div class=\\\"list-col-kind\\\">Kind</div>\\n                </div>\\n                \".concat(items.map(function (item) {\n        return \"\\n                    <div class=\\\"list-item \".concat(item.type, \"\\\" data-name=\\\"\").concat(item.name, \"\\\" data-type=\\\"\").concat(item.type, \"\\\">\\n                        <div class=\\\"list-col-name\\\">\\n                            <span class=\\\"list-icon\\\">\").concat(_this3.getFileIcon(item), \"</span>\\n                            <span>\").concat(item.name, \"</span>\\n                        </div>\\n                        <div class=\\\"list-col-modified\\\">\").concat(item.modified || '-', \"</div>\\n                        <div class=\\\"list-col-size\\\">\").concat(item.size ? _this3.formatSize(item.size) : '-', \"</div>\\n                        <div class=\\\"list-col-kind\\\">\").concat(item.type === 'directory' ? 'Folder' : 'File', \"</div>\\n                    </div>\\n                \");\n      }).join(''), \"\\n            </div>\\n        \");\n    }\n\n    /**\n     * Render column view (simplified)\n     */\n  }, {\n    key: \"renderColumnView\",\n    value: function renderColumnView(items) {\n      return this.renderListView(items); // Simplified for now\n    }\n\n    /**\n     * Get file icon based on type/extension\n     */\n  }, {\n    key: \"getFileIcon\",\n    value: function getFileIcon(item) {\n      if (item.type === 'directory') {\n        return _config_FinderConfig_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].FILE_ICONS.directory;\n      }\n      var ext = item.name.split('.').pop().toLowerCase();\n      return _config_FinderConfig_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].FILE_ICONS[ext] || _config_FinderConfig_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].FILE_ICONS.file;\n    }\n\n    /**\n     * Format file size\n     */\n  }, {\n    key: \"formatSize\",\n    value: function formatSize(bytes) {\n      if (bytes < 1024) return bytes + ' B';\n      if (bytes < 1024 * 1024) return Math.round(bytes / 1024) + ' KB';\n      return (bytes / (1024 * 1024)).toFixed(1) + ' MB';\n    }\n\n    /**\n     * Sort items\n     */\n  }, {\n    key: \"sortItems\",\n    value: function sortItems(items) {\n      var _this4 = this;\n      return items.sort(function (a, b) {\n        // Folders first\n        if (a.type === 'directory' && b.type !== 'directory') return -1;\n        if (a.type !== 'directory' && b.type === 'directory') return 1;\n\n        // Then by sort criteria\n        var comparison = 0;\n        if (_this4.sortBy === 'name') {\n          comparison = a.name.localeCompare(b.name);\n        } else if (_this4.sortBy === 'size') {\n          comparison = (a.size || 0) - (b.size || 0);\n        } else if (_this4.sortBy === 'date') {\n          comparison = (a.modified || '').localeCompare(b.modified || '');\n        }\n        return _this4.sortOrder === 'asc' ? comparison : -comparison;\n      });\n    }\n\n    /**\n     * Setup event listeners\n     */\n  }, {\n    key: \"setupEventListeners\",\n    value: function setupEventListeners() {\n      var _this5 = this;\n      // Store bound handlers for cleanup\n      this.handlers = {\n        toolbarClick: function toolbarClick(e) {\n          var _e$target$closest;\n          var action = (_e$target$closest = e.target.closest('[data-action]')) === null || _e$target$closest === void 0 ? void 0 : _e$target$closest.dataset.action;\n          if (action === 'back') _this5.goBack();\n          if (action === 'forward') _this5.goForward();\n          if (action === 'view-grid') _this5.setViewMode('grid');\n          if (action === 'view-list') _this5.setViewMode('list');\n          if (action === 'view-column') _this5.setViewMode('column');\n        },\n        breadcrumbClick: function breadcrumbClick(e) {\n          var breadcrumbItem = e.target.closest('.breadcrumb-item');\n          if (breadcrumbItem) {\n            _this5.navigateTo(breadcrumbItem.dataset.path);\n          }\n        },\n        sidebarClick: function sidebarClick(e) {\n          var sidebarItem = e.target.closest('.sidebar-item');\n          if (sidebarItem) {\n            _this5.navigateTo(sidebarItem.dataset.path);\n          }\n        },\n        itemDoubleClick: function itemDoubleClick(e) {\n          var item = e.target.closest('[data-name][data-type]');\n          if (item) {\n            if (item.dataset.type === 'directory') {\n              var newPath = _this5.currentPath === '/' ? '/' + item.dataset.name : _this5.currentPath + '/' + item.dataset.name;\n              _this5.navigateTo(newPath);\n            } else if (item.dataset.type === 'file') {\n              // Open file viewer for text files\n              _this5.openFile(item.dataset.name);\n            }\n          }\n        },\n        searchInput: function searchInput(e) {\n          // Debounce search to avoid excessive re-renders\n          clearTimeout(_this5.searchTimeout);\n          _this5.searchTimeout = setTimeout(function () {\n            _this5.searchQuery = e.target.value;\n            _this5.render();\n          }, 300);\n        },\n        finderNavigate: function finderNavigate(data) {\n          if (data.path) _this5.navigateTo(data.path);\n        }\n      };\n\n      // Add DOM event listeners\n      this.container.addEventListener('click', this.handlers.toolbarClick);\n      this.container.addEventListener('click', this.handlers.breadcrumbClick);\n      this.container.addEventListener('click', this.handlers.sidebarClick);\n      this.container.addEventListener('dblclick', this.handlers.itemDoubleClick);\n\n      // Search input\n      var searchInput = this.container.querySelector('.finder-search-input');\n      if (searchInput) {\n        searchInput.addEventListener('input', this.handlers.searchInput);\n      }\n\n      // EventBus listeners\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].on('finder:navigate', this.handlers.finderNavigate);\n    }\n\n    /**\n     * Navigate to path\n     */\n  }, {\n    key: \"navigateTo\",\n    value: function navigateTo(path) {\n      if (!_services_FileSystemService_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].pathExists(path)) {\n        console.warn('Finder: Path does not exist:', path);\n        return;\n      }\n      this.currentPath = path;\n\n      // Update history\n      if (this.history[this.historyIndex] !== path) {\n        this.history = this.history.slice(0, this.historyIndex + 1);\n        this.history.push(path);\n        this.historyIndex = this.history.length - 1;\n      }\n      this.render();\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].emit('finder:path-changed', {\n        path: path\n      });\n    }\n\n    /**\n     * Go back in history\n     */\n  }, {\n    key: \"goBack\",\n    value: function goBack() {\n      if (this.historyIndex > 0) {\n        this.historyIndex--;\n        this.currentPath = this.history[this.historyIndex];\n        this.render();\n      }\n    }\n\n    /**\n     * Go forward in history\n     */\n  }, {\n    key: \"goForward\",\n    value: function goForward() {\n      if (this.historyIndex < this.history.length - 1) {\n        this.historyIndex++;\n        this.currentPath = this.history[this.historyIndex];\n        this.render();\n      }\n    }\n\n    /**\n     * Set view mode\n     */\n  }, {\n    key: \"setViewMode\",\n    value: function setViewMode(mode) {\n      this.viewMode = mode;\n      this.render();\n    }\n\n    /**\n     * Open file viewer\n     */\n  }, {\n    key: \"openFile\",\n    value: function openFile(filename) {\n      var filePath = this.currentPath === '/' ? '/' + filename : this.currentPath + '/' + filename;\n      var fileInfo = _services_FileSystemService_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].getNodeInfo(filePath);\n      if (!fileInfo) {\n        console.warn('Finder: File not found:', filePath);\n        return;\n      }\n      if (fileInfo.type !== 'file') {\n        console.warn('Finder: Not a file:', filePath);\n        return;\n      }\n\n      // Emit event to open file viewer\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].emit('file:open', {\n        path: filePath,\n        name: filename,\n        content: fileInfo.content || '',\n        size: fileInfo.size,\n        modified: fileInfo.modified,\n        type: this.getFileType(filename)\n      });\n      console.log('üìÑ Finder: Opening file:', filename);\n    }\n\n    /**\n     * Get file type from extension\n     */\n  }, {\n    key: \"getFileType\",\n    value: function getFileType(filename) {\n      var ext = filename.split('.').pop().toLowerCase();\n      var textExtensions = ['txt', 'md', 'json', 'js', 'py', 'php', 'html', 'css', 'xml', 'log', 'sh', 'yml', 'yaml'];\n      var imageExtensions = ['jpg', 'jpeg', 'png', 'gif', 'svg', 'webp'];\n      var pdfExtensions = ['pdf'];\n      if (textExtensions.includes(ext)) return 'text';\n      if (imageExtensions.includes(ext)) return 'image';\n      if (pdfExtensions.includes(ext)) return 'pdf';\n      return 'unknown';\n    }\n\n    /**\n     * Render error\n     */\n  }, {\n    key: \"renderError\",\n    value: function renderError(error) {\n      this.container.innerHTML = \"\\n            <div class=\\\"finder-error\\\">\\n                <h3>Failed to load Finder</h3>\\n                <p>\".concat(error.message, \"</p>\\n            </div>\\n        \");\n    }\n\n    /**\n     * Destroy component\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // Clear any pending search timeout\n      if (this.searchTimeout) {\n        clearTimeout(this.searchTimeout);\n        this.searchTimeout = null;\n      }\n\n      // Remove DOM event listeners\n      if (this.container && this.handlers) {\n        this.container.removeEventListener('click', this.handlers.toolbarClick);\n        this.container.removeEventListener('click', this.handlers.breadcrumbClick);\n        this.container.removeEventListener('click', this.handlers.sidebarClick);\n        this.container.removeEventListener('dblclick', this.handlers.itemDoubleClick);\n        var searchInput = this.container.querySelector('.finder-search-input');\n        if (searchInput) {\n          searchInput.removeEventListener('input', this.handlers.searchInput);\n        }\n      }\n\n      // Remove EventBus listeners\n      if (this.handlers && this.handlers.finderNavigate) {\n        _EventBus_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].off('finder:navigate', this.handlers.finderNavigate);\n      }\n\n      // Clear references\n      this.handlers = null;\n      this.container = null;\n      this.selectedItems = [];\n      this.history = [];\n      console.log('üìÅ Finder: Destroyed and cleaned up');\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Finder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8720\n");

/***/ }),

/***/ 3026:
/*!********************************************************!*\
  !*** ./resources/js/components/portfolio/Portfolio.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Portfolio)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 2284);\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 4467);\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ 9394);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _EventBus_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../EventBus.js */ 947);\n/* harmony import */ var _services_ThemeService_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../services/ThemeService.js */ 3985);\n\n\n\n\n\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n\n/**\n * Portfolio Application Component - REMASTERED v3.0.0\n * \n * Complete rebuild with:\n * - Proper scroll container architecture\n * - Fixed search icon positioning\n * - Clean technology tags layout\n * - Working card click navigation\n * - Enhanced modal with carousel\n * - Smooth animations and transitions\n * - Theme-aware design\n * \n * @author AbdulmeLink Portfolio\n * @version 3.0.0 (Remastered)\n */\n\n\n\nvar Portfolio = /*#__PURE__*/function () {\n  function Portfolio(container) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this, Portfolio);\n    this.container = container;\n    this.projects = [];\n    this.filteredProjects = [];\n    this.categories = {};\n    this.currentFilter = 'all';\n    this.searchQuery = '';\n    this.searchTimeout = null;\n\n    // Modal state\n    this.currentProject = null;\n    this.currentImageIndex = 0;\n\n    // Lazy loading\n    this.imageObserver = null;\n    this.observedImages = new Set();\n    this.init();\n  }\n\n  /**\n   * Initialize portfolio\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(Portfolio, [{\n    key: \"init\",\n    value: function () {\n      var _init = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default().mark(function _callee() {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              this.showLoading();\n              _context.next = 4;\n              return this.loadData();\n            case 4:\n              this.render();\n              this.attachEvents();\n              // Lazy loading removed - using direct src loading for better performance\n              this.hideLoading();\n              _EventBus_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].emit('portfolio:ready', {\n                projectCount: this.projects.length\n              });\n              console.log('‚úÖ Portfolio Remastered - Loaded', this.projects.length, 'projects');\n              _context.next = 15;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('‚ùå Portfolio initialization failed:', _context.t0);\n              this.showError(_context.t0.message);\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 11]]);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n    /**\n     * Show loading state\n     */\n  }, {\n    key: \"showLoading\",\n    value: function showLoading() {\n      this.container.innerHTML = \"\\n            <div class=\\\"portfolio-loading\\\">\\n                <div class=\\\"spinner\\\"></div>\\n                <p>Loading amazing projects...</p>\\n            </div>\\n        \";\n    }\n\n    /**\n     * Hide loading state\n     */\n  }, {\n    key: \"hideLoading\",\n    value: function hideLoading() {\n      var loading = this.container.querySelector('.portfolio-loading');\n      if (loading) {\n        loading.style.opacity = '0';\n        setTimeout(function () {\n          return loading.remove();\n        }, 300);\n      }\n    }\n\n    /**\n     * Load portfolio data from API\n     */\n  }, {\n    key: \"loadData\",\n    value: function () {\n      var _loadData = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default().mark(function _callee2() {\n        var _result$data$meta;\n        var response, result;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch('/api/portfolio');\n            case 2:\n              response = _context2.sent;\n              if (response.ok) {\n                _context2.next = 5;\n                break;\n              }\n              throw new Error('Failed to load portfolio data');\n            case 5:\n              _context2.next = 7;\n              return response.json();\n            case 7:\n              result = _context2.sent;\n              if (result.success) {\n                _context2.next = 10;\n                break;\n              }\n              throw new Error('Invalid API response');\n            case 10:\n              this.projects = result.data.data || [];\n              this.categories = ((_result$data$meta = result.data.meta) === null || _result$data$meta === void 0 ? void 0 : _result$data$meta.categories) || {};\n              this.filteredProjects = (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.projects);\n\n              // Load Supabase image URLs for projects (async, non-blocking)\n              this.loadProjectImages();\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function loadData() {\n        return _loadData.apply(this, arguments);\n      }\n      return loadData;\n    }()\n    /**\n     * Load project images from Supabase with local fallback (non-blocking)\n     */\n  }, {\n    key: \"loadProjectImages\",\n    value: function loadProjectImages() {\n      var _this = this;\n      // Start image loading in background without blocking app initialization\n      this.loadProjectImagesAsync().then(function () {\n        // Update filtered projects when images are loaded\n        _this.filteredProjects = (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_this.projects);\n\n        // Update existing DOM images with new URLs\n        _this.updateExistingImages();\n\n        // If we're currently showing filtered results, update the grid\n        if (_this.currentFilter !== 'all' || _this.searchQuery) {\n          _this.updateGrid();\n        }\n        _EventBus_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].emit('portfolio:images-loaded', {\n          projectCount: _this.projects.length\n        });\n        console.log('‚úÖ Portfolio images loaded from Supabase');\n      })[\"catch\"](function (error) {\n        console.warn('Failed to load project images from Supabase, using local paths:', error);\n      });\n    }\n\n    /**\n     * Async image loading logic (runs in background)\n     */\n  }, {\n    key: \"loadProjectImagesAsync\",\n    value: function () {\n      var _loadProjectImagesAsync = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default().mark(function _callee4() {\n        var imagePromises;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              // Process projects in parallel for better performance\n              imagePromises = this.projects.map( /*#__PURE__*/function () {\n                var _ref = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default().mark(function _callee3(project) {\n                  var _result$data$gallery, _result$data$_metadat2, response, result, updatedProject, _result$data$_metadat, _result$data$gallery$;\n                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default().wrap(function _callee3$(_context3) {\n                    while (1) switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.prev = 0;\n                        _context3.next = 3;\n                        return fetch(\"/api/images/project/\".concat(project.id));\n                      case 3:\n                        response = _context3.sent;\n                        if (response.ok) {\n                          _context3.next = 7;\n                          break;\n                        }\n                        console.warn(\"Failed to load images for project \".concat(project.id, \", using local paths\"));\n                        return _context3.abrupt(\"return\", project);\n                      case 7:\n                        _context3.next = 9;\n                        return response.json();\n                      case 9:\n                        result = _context3.sent;\n                        if (result.success) {\n                          _context3.next = 13;\n                          break;\n                        }\n                        console.warn(\"Invalid response for project \".concat(project.id, \" images, using local paths\"));\n                        return _context3.abrupt(\"return\", project);\n                      case 13:\n                        // Update project with Supabase URLs where available\n                        updatedProject = _objectSpread({}, project);\n                        if (result.data.thumbnail) {\n                          updatedProject.images = updatedProject.images || {};\n                          updatedProject.images.thumbnail = result.data.thumbnail;\n                          updatedProject.images._thumbnailSource = ((_result$data$_metadat = result.data._metadata) === null || _result$data$_metadat === void 0 ? void 0 : _result$data$_metadat.thumbnailSource) || 'local';\n                        }\n                        if (result.data.gallery && result.data.gallery.length > 0) {\n                          updatedProject.images = updatedProject.images || {};\n                          updatedProject.images.gallery = result.data.gallery.map(function (item) {\n                            return item.url;\n                          });\n                          updatedProject.images._gallerySource = ((_result$data$gallery$ = result.data.gallery[0]) === null || _result$data$gallery$ === void 0 ? void 0 : _result$data$gallery$.source) || 'local';\n                        }\n                        console.log(\"Loaded \".concat(((_result$data$gallery = result.data.gallery) === null || _result$data$gallery === void 0 ? void 0 : _result$data$gallery.length) || 0, \" images for project \").concat(project.id, \" from \").concat(((_result$data$_metadat2 = result.data._metadata) === null || _result$data$_metadat2 === void 0 ? void 0 : _result$data$_metadat2.thumbnailSource) || 'local'));\n                        return _context3.abrupt(\"return\", updatedProject);\n                      case 20:\n                        _context3.prev = 20;\n                        _context3.t0 = _context3[\"catch\"](0);\n                        console.warn(\"Error loading images for project \".concat(project.id, \":\"), _context3.t0);\n                        return _context3.abrupt(\"return\", project);\n                      case 24:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }, _callee3, null, [[0, 20]]);\n                }));\n                return function (_x) {\n                  return _ref.apply(this, arguments);\n                };\n              }()); // Wait for all image loading to complete\n              _context4.next = 3;\n              return Promise.all(imagePromises);\n            case 3:\n              this.projects = _context4.sent;\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function loadProjectImagesAsync() {\n        return _loadProjectImagesAsync.apply(this, arguments);\n      }\n      return loadProjectImagesAsync;\n    }()\n    /**\n     * Initialize lazy loading with Intersection Observer\n     */\n  }, {\n    key: \"initLazyLoading\",\n    value: function initLazyLoading() {\n      var _this2 = this;\n      // Create Intersection Observer for lazy loading\n      this.imageObserver = new IntersectionObserver(function (entries) {\n        entries.forEach(function (entry) {\n          if (entry.isIntersecting) {\n            var img = entry.target;\n            _this2.loadImage(img);\n            _this2.imageObserver.unobserve(img);\n          }\n        });\n      }, {\n        rootMargin: '50px 0px',\n        // Start loading 50px before image enters viewport\n        threshold: 0.1\n      });\n\n      // Observe all lazy images\n      this.observeLazyImages();\n    }\n\n    /**\n     * Observe all lazy images in the container\n     */\n  }, {\n    key: \"observeLazyImages\",\n    value: function observeLazyImages() {\n      var _this3 = this;\n      var lazyImages = this.container.querySelectorAll('img[data-src]');\n      lazyImages.forEach(function (img) {\n        if (!_this3.observedImages.has(img)) {\n          _this3.imageObserver.observe(img);\n          _this3.observedImages.add(img);\n        }\n      });\n    }\n\n    /**\n     * Update existing DOM images with new URLs after async loading\n     */\n  }, {\n    key: \"updateExistingImages\",\n    value: function updateExistingImages() {\n      var _this4 = this;\n      this.projects.forEach(function (project) {\n        var _project$images;\n        var projectCard = _this4.container.querySelector(\"[data-project-id=\\\"\".concat(project.id, \"\\\"]\"));\n        if (projectCard && (_project$images = project.images) !== null && _project$images !== void 0 && _project$images.thumbnail) {\n          var img = projectCard.querySelector('.card-image');\n          if (img && img.src !== project.images.thumbnail) {\n            img.src = project.images.thumbnail;\n          }\n        }\n      });\n    }\n\n    /**\n     * Render complete portfolio UI\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.container.className = 'portfolio-container';\n      this.container.innerHTML = \"\\n            <!-- Fixed Header -->\\n            <header class=\\\"portfolio-header\\\">\\n                <div class=\\\"header-content\\\">\\n                    <div class=\\\"header-title\\\">\\n                        <h1>My Projects</h1>\\n                        <p class=\\\"subtitle\\\">\".concat(this.projects.length, \" projects showcasing full-stack development</p>\\n                    </div>\\n                    \\n                    <div class=\\\"header-controls\\\">\\n                        <!-- Search Box -->\\n                        <div class=\\\"search-box\\\">\\n                            <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\">\\n                                <circle cx=\\\"11\\\" cy=\\\"11\\\" r=\\\"8\\\"></circle>\\n                                <path d=\\\"m21 21-4.35-4.35\\\"></path>\\n                            </svg>\\n                            <input \\n                                type=\\\"text\\\" \\n                                class=\\\"search-input\\\" \\n                                placeholder=\\\"Search projects, technologies...\\\"\\n                                autocomplete=\\\"off\\\"\\n                            >\\n                            <button class=\\\"search-clear hidden\\\" aria-label=\\\"Clear search\\\">\\xD7</button>\\n                        </div>\\n                        \\n                        <!-- Category Filters -->\\n                        <div class=\\\"category-filters\\\">\\n                            <button class=\\\"filter-chip active\\\" data-category=\\\"all\\\">\\n                                <span class=\\\"chip-count\\\">\").concat(this.projects.length, \"</span>\\n                                All\\n                            </button>\\n                            \").concat(this.renderCategoryFilters(), \"\\n                        </div>\\n                    </div>\\n                </div>\\n            </header>\\n\\n            <!-- Scrollable Content Area -->\\n            <main class=\\\"portfolio-main\\\">\\n                <div class=\\\"projects-grid\\\" id=\\\"projectsGrid\\\">\\n                    \").concat(this.renderProjects(), \"\\n                </div>\\n                \\n                <div class=\\\"empty-state hidden\\\" id=\\\"emptyState\\\">\\n                    <svg class=\\\"empty-icon\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"1.5\\\">\\n                        <path d=\\\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\\\"/>\\n                    </svg>\\n                    <h3>No projects found</h3>\\n                    <p>Try adjusting your search or filter criteria</p>\\n                </div>\\n            </main>\\n\\n            <!-- Modal -->\\n            <div class=\\\"portfolio-modal hidden\\\" id=\\\"portfolioModal\\\">\\n                <div class=\\\"modal-backdrop\\\"></div>\\n                <div class=\\\"modal-wrapper\\\">\\n                    <div class=\\\"modal-content\\\">\\n                        <button class=\\\"modal-close\\\" aria-label=\\\"Close\\\">\\n                            <svg viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\">\\n                                <path d=\\\"M18 6L6 18M6 6l12 12\\\"/>\\n                            </svg>\\n                        </button>\\n                        <div class=\\\"modal-body\\\" id=\\\"modalBody\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        \");\n    }\n\n    /**\n     * Render category filter chips\n     */\n  }, {\n    key: \"renderCategoryFilters\",\n    value: function renderCategoryFilters() {\n      var _this5 = this;\n      if (!this.categories || (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.categories) !== 'object') {\n        return '';\n      }\n      return Object.values(this.categories).filter(function (cat) {\n        return cat && cat.id && cat.name;\n      }) // Filter out invalid categories\n      .map(function (cat) {\n        var count = _this5.projects.filter(function (p) {\n          return p.category === cat.id;\n        }).length;\n        var color = cat.color || '#007AFF'; // Fallback color\n        return \"\\n                    <button class=\\\"filter-chip\\\" data-category=\\\"\".concat(cat.id, \"\\\" style=\\\"--chip-color: \").concat(color, \"\\\">\\n                        <span class=\\\"chip-count\\\">\").concat(count, \"</span>\\n                        \").concat(cat.name, \"\\n                    </button>\\n                \");\n      }).join('');\n    }\n\n    /**\n     * Render project cards\n     */\n  }, {\n    key: \"renderProjects\",\n    value: function renderProjects() {\n      var _this6 = this;\n      if (this.filteredProjects.length === 0) return '';\n      return this.filteredProjects.map(function (project, index) {\n        var _project$images2;\n        var category = _this6.categories[project.category] || {};\n        var thumbnail = ((_project$images2 = project.images) === null || _project$images2 === void 0 ? void 0 : _project$images2.thumbnail) || _this6.getPlaceholder();\n        return \"\\n                <article class=\\\"project-card\\\" data-project-id=\\\"\".concat(project.id, \"\\\" style=\\\"--card-delay: \").concat(index * 50, \"ms; --category-color: \").concat(category.color, \"\\\">\\n                    <div class=\\\"card-image\\\">\\n                        <img src=\\\"\").concat(thumbnail, \"\\\" alt=\\\"\").concat(project.title, \"\\\" class=\\\"card-image\\\" onerror=\\\"this.src='\").concat(_this6.getPlaceholder(), \"'\\\">\\n                        <div class=\\\"card-overlay\\\">\\n                            <button class=\\\"view-btn\\\">\\n                                <svg viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\">\\n                                    <path d=\\\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\\\"/>\\n                                    <path d=\\\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\\\"/>\\n                                </svg>\\n                                View Details\\n                            </button>\\n                        </div>\\n                        \").concat(project.featured ? '<div class=\"featured-badge\">‚≠ê Featured</div>' : '', \"\\n                        \").concat(_this6.getStatusBadge(project.status), \"\\n                    </div>\\n                    \\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <span class=\\\"category-tag\\\" style=\\\"background: \").concat(category.color, \"20; color: \").concat(category.color, \"\\\">\\n                                \").concat(category.name || 'Other', \"\\n                            </span>\\n                        </div>\\n                        \\n                        <h3 class=\\\"card-title\\\">\").concat(project.title, \"</h3>\\n                        <p class=\\\"card-description\\\">\").concat(_this6.truncate(project.description, 100), \"</p>\\n                        \\n                        <div class=\\\"card-footer\\\">\\n                            <div class=\\\"tech-stack\\\">\\n                                \").concat(_this6.renderCardTags(project), \"\\n                            </div>\\n                        </div>\\n                    </div>\\n                </article>\\n            \");\n      }).join('');\n    }\n\n    /**\n     * Render card tags (technologies + custom tags)\n     */\n  }, {\n    key: \"renderCardTags\",\n    value: function renderCardTags(project) {\n      var allTags = [].concat((0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(project.technologies || []), (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(project.tags || []));\n      var displayTags = allTags.slice(0, 3);\n      var remaining = allTags.length - 3;\n      return \"\\n            \".concat(displayTags.map(function (tag) {\n        return \"<span class=\\\"tech-tag\\\">\".concat(tag, \"</span>\");\n      }).join(''), \"\\n            \").concat(remaining > 0 ? \"<span class=\\\"tech-tag more\\\">+\".concat(remaining, \"</span>\") : '', \"\\n        \");\n    }\n\n    /**\n     * Attach all event listeners\n     */\n  }, {\n    key: \"attachEvents\",\n    value: function attachEvents() {\n      var _this7 = this;\n      // Search input\n      var searchInput = this.container.querySelector('.search-input');\n      var searchClear = this.container.querySelector('.search-clear');\n      searchInput.addEventListener('input', function (e) {\n        _this7.searchQuery = e.target.value.toLowerCase().trim();\n        searchClear.classList.toggle('hidden', !_this7.searchQuery);\n        clearTimeout(_this7.searchTimeout);\n        _this7.searchTimeout = setTimeout(function () {\n          return _this7.applyFilters();\n        }, 300);\n      });\n      searchClear.addEventListener('click', function () {\n        searchInput.value = '';\n        _this7.searchQuery = '';\n        searchClear.classList.add('hidden');\n        _this7.applyFilters();\n      });\n\n      // Category filters\n      this.container.querySelectorAll('.filter-chip').forEach(function (chip) {\n        chip.addEventListener('click', function (e) {\n          _this7.container.querySelectorAll('.filter-chip').forEach(function (c) {\n            return c.classList.remove('active');\n          });\n          chip.classList.add('active');\n          _this7.currentFilter = chip.dataset.category;\n          _this7.applyFilters();\n        });\n      });\n\n      // Project cards - click to open modal\n      this.container.addEventListener('click', function (e) {\n        var card = e.target.closest('.project-card');\n        if (card) {\n          var projectId = card.dataset.projectId;\n          _this7.openModal(projectId);\n        }\n      });\n\n      // Modal close\n      var modal = this.container.querySelector('#portfolioModal');\n      var modalClose = modal.querySelector('.modal-close');\n      var modalBackdrop = modal.querySelector('.modal-backdrop');\n      modalClose.addEventListener('click', function () {\n        return _this7.closeModal();\n      });\n      modalBackdrop.addEventListener('click', function () {\n        return _this7.closeModal();\n      });\n\n      // Keyboard navigation\n      document.addEventListener('keydown', function (e) {\n        if (!modal.classList.contains('hidden')) {\n          if (e.key === 'Escape') _this7.closeModal();\n          if (e.key === 'ArrowLeft') _this7.prevImage();\n          if (e.key === 'ArrowRight') _this7.nextImage();\n        }\n      });\n    }\n\n    /**\n     * Apply search and category filters\n     */\n  }, {\n    key: \"applyFilters\",\n    value: function applyFilters() {\n      var _this8 = this;\n      var filtered = (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.projects);\n\n      // Category filter\n      if (this.currentFilter !== 'all') {\n        filtered = filtered.filter(function (p) {\n          return p.category === _this8.currentFilter;\n        });\n      }\n\n      // Search filter\n      if (this.searchQuery) {\n        filtered = filtered.filter(function (p) {\n          var searchText = [p.title, p.description, p.category].concat((0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(p.technologies || []), (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(p.highlights || [])).join(' ').toLowerCase();\n          return searchText.includes(_this8.searchQuery);\n        });\n      }\n      this.filteredProjects = filtered;\n      this.updateGrid();\n    }\n\n    /**\n     * Update projects grid\n     */\n  }, {\n    key: \"updateGrid\",\n    value: function updateGrid() {\n      var grid = this.container.querySelector('#projectsGrid');\n      var emptyState = this.container.querySelector('#emptyState');\n      if (this.filteredProjects.length === 0) {\n        grid.innerHTML = '';\n        emptyState.classList.remove('hidden');\n      } else {\n        emptyState.classList.add('hidden');\n        grid.innerHTML = this.renderProjects();\n\n        // Animate cards\n        requestAnimationFrame(function () {\n          grid.querySelectorAll('.project-card').forEach(function (card) {\n            card.classList.add('visible');\n          });\n        });\n\n        // Observe new lazy images\n        this.observeLazyImages();\n      }\n    }\n\n    /**\n     * Open project modal\n     */\n  }, {\n    key: \"openModal\",\n    value: function openModal(projectId) {\n      var project = this.projects.find(function (p) {\n        return p.id === projectId;\n      });\n      if (!project) return;\n      this.currentProject = project;\n      this.currentImageIndex = 0;\n      var modal = this.container.querySelector('#portfolioModal');\n      var modalBody = modal.querySelector('#modalBody');\n      modalBody.innerHTML = this.renderModalContent(project);\n      modal.classList.remove('hidden');\n      setTimeout(function () {\n        return modal.classList.add('active');\n      }, 10);\n\n      // Attach modal-specific events\n      this.attachModalEvents();\n    }\n\n    /**\n     * Render modal content\n     */\n  }, {\n    key: \"renderModalContent\",\n    value: function renderModalContent(project) {\n      var _project$images3,\n        _project$images4,\n        _this9 = this,\n        _project$highlights,\n        _project$technologies,\n        _project$tags,\n        _project$technologies2,\n        _project$tags2,\n        _project$technologies3,\n        _project$links,\n        _project$links2,\n        _project$links3,\n        _project$links4;\n      var category = this.categories[project.category] || {};\n      var images = ((_project$images3 = project.images) === null || _project$images3 === void 0 ? void 0 : _project$images3.gallery) || [];\n      var videos = ((_project$images4 = project.images) === null || _project$images4 === void 0 ? void 0 : _project$images4.videos) || [];\n\n      // Handle both old format (array of strings) and new format (array of objects)\n      var processedImages = images.map(function (img) {\n        if (typeof img === 'string') {\n          return {\n            type: 'image',\n            src: img\n          };\n        } else if ((0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(img) === 'object' && img.url) {\n          return {\n            type: 'image',\n            src: img.url\n          };\n        }\n        return null;\n      }).filter(Boolean);\n      var galleryItems = [].concat((0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(processedImages), (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(videos.map(function (vid) {\n        return {\n          type: 'video',\n          src: vid\n        };\n      })));\n      var hasGallery = galleryItems.length > 0;\n      return \"\\n            <div class=\\\"modal-grid \".concat(!hasGallery ? 'no-gallery' : '', \"\\\">\\n                \").concat(hasGallery ? \"\\n                    <div class=\\\"modal-gallery\\\">\\n                        <div class=\\\"gallery-viewer\\\">\\n                            \".concat(galleryItems[this.currentImageIndex].type === 'image' ? \"\\n                                <img \\n                                    src=\\\"\".concat(galleryItems[this.currentImageIndex].src || this.getPlaceholder(), \"\\\" \\n                                    alt=\\\"\").concat(project.title, \"\\\"\\n                                    class=\\\"gallery-image\\\"\\n                                    style=\\\"max-width: 100%; max-height: 60vh; width: auto; height: auto; object-fit: contain; display: block; margin: 0 auto;\\\"\\n                                    onerror=\\\"this.src='\").concat(this.getPlaceholder(), \"'\\\"\\n                                >\\n                            \") : \"\\n                                <iframe \\n                                    src=\\\"\".concat(galleryItems[this.currentImageIndex].src, \"\\\" \\n                                    class=\\\"gallery-video\\\"\\n                                    title=\\\"YouTube video player\\\" \\n                                    frameborder=\\\"0\\\" \\n                                    allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\\" \\n                                    referrerpolicy=\\\"strict-origin-when-cross-origin\\\" \\n                                    allowfullscreen>\\n                                </iframe>\\n                            \"), \"\\n                            \").concat(galleryItems.length > 1 ? \"\\n                                <button class=\\\"gallery-nav prev\\\" data-nav=\\\"prev\\\">\\n                                    <svg viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\">\\n                                        <polyline points=\\\"15 18 9 12 15 6\\\"></polyline>\\n                                    </svg>\\n                                </button>\\n                                <button class=\\\"gallery-nav next\\\" data-nav=\\\"next\\\">\\n                                    <svg viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\">\\n                                        <polyline points=\\\"9 18 15 12 9 6\\\"></polyline>\\n                                    </svg>\\n                                </button>\\n                                <div class=\\\"gallery-indicator\\\">\".concat(this.currentImageIndex + 1, \" / \").concat(galleryItems.length, \"</div>\\n                            \") : '', \"\\n                        </div>\\n                        \\n                        \").concat(galleryItems.length > 1 ? \"\\n                            <div class=\\\"gallery-thumbs\\\">\\n                                \".concat(galleryItems.map(function (item, idx) {\n        return \"\\n                                    \".concat(item.type === 'image' ? \"\\n                                        <img \\n                                            src=\\\"\".concat(item.src || _this9.getPlaceholder(), \"\\\" \\n                                            alt=\\\"Thumbnail \").concat(idx + 1, \"\\\"\\n                                            class=\\\"thumb \").concat(idx === _this9.currentImageIndex ? 'active' : '', \"\\\"\\n                                            data-index=\\\"\").concat(idx, \"\\\"\\n                                            onerror=\\\"this.src='\").concat(_this9.getPlaceholder(), \"'\\\"\\n                                        >\\n                                    \") : \"\\n                                        <div \\n                                            class=\\\"thumb video-thumb \".concat(idx === _this9.currentImageIndex ? 'active' : '', \"\\\"\\n                                            data-index=\\\"\").concat(idx, \"\\\"\\n                                            style=\\\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); display: flex; align-items: center; justify-content: center;\\\">\\n                                            <svg width=\\\"24\\\" height=\\\"24\\\" fill=\\\"white\\\" viewBox=\\\"0 0 24 24\\\">\\n                                                <path d=\\\"M8 5v14l11-7z\\\"/>\\n                                            </svg>\\n                                        </div>\\n                                    \"), \"\\n                                \");\n      }).join(''), \"\\n                            </div>\\n                        \") : '', \"\\n                    </div>\\n                \") : '', \"\\n                \\n                <div class=\\\"modal-info\\\">\\n                    <div class=\\\"info-header\\\">\\n                        <span class=\\\"category-badge\\\" style=\\\"background: \").concat(category.color, \"20; color: \").concat(category.color, \"\\\">\\n                            \").concat(category.name || 'Project', \"\\n                        </span>\\n                        \").concat(project.featured ? '<span class=\"featured-badge\">‚≠ê Featured</span>' : '', \"\\n                    </div>\\n                    \\n                    <h2 class=\\\"modal-title\\\">\").concat(project.title, \"</h2>\\n                    <p class=\\\"modal-description\\\">\").concat(project.description, \"</p>\\n                    \\n                    \").concat((_project$highlights = project.highlights) !== null && _project$highlights !== void 0 && _project$highlights.length ? \"\\n                        <div class=\\\"highlights-section\\\">\\n                            <h4>Key Achievements</h4>\\n                            <ul class=\\\"highlights-list\\\">\\n                                \".concat(project.highlights.map(function (h) {\n        return \"<li>\".concat(h, \"</li>\");\n      }).join(''), \"\\n                            </ul>\\n                        </div>\\n                    \") : '', \"\\n                    \\n                    \").concat((_project$technologies = project.technologies) !== null && _project$technologies !== void 0 && _project$technologies.length || (_project$tags = project.tags) !== null && _project$tags !== void 0 && _project$tags.length ? \"\\n                        <div class=\\\"tech-section\\\">\\n                            \".concat((_project$technologies2 = project.technologies) !== null && _project$technologies2 !== void 0 && _project$technologies2.length ? \"\\n                                <h4>Technologies</h4>\\n                                <div class=\\\"tech-grid\\\">\\n                                    \".concat(project.technologies.map(function (tech) {\n        return \"<span class=\\\"tech-badge\\\">\".concat(tech, \"</span>\");\n      }).join(''), \"\\n                                </div>\\n                            \") : '', \"\\n                            \\n                            \").concat((_project$tags2 = project.tags) !== null && _project$tags2 !== void 0 && _project$tags2.length ? \"\\n                                <h4 style=\\\"margin-top: \".concat((_project$technologies3 = project.technologies) !== null && _project$technologies3 !== void 0 && _project$technologies3.length ? '1rem' : '0', \"\\\">Tags</h4>\\n                                <div class=\\\"tech-grid\\\">\\n                                    \").concat(project.tags.map(function (tag) {\n        return \"<span class=\\\"tech-badge custom-tag\\\">\".concat(tag, \"</span>\");\n      }).join(''), \"\\n                                </div>\\n                            \") : '', \"\\n                        </div>\\n                    \") : '', \"\\n                    \\n                    <div class=\\\"actions-section\\\">\\n                        \").concat((_project$links = project.links) !== null && _project$links !== void 0 && _project$links.demo ? \"\\n                            <a href=\\\"\".concat(project.links.demo, \"\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" class=\\\"action-button primary\\\">\\n                                <svg viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\">\\n                                    <path d=\\\"M18 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2 2 0 012-2h6M15 3h6v6M10 14L21 3\\\"/>\\n                                </svg>\\n                                \").concat(project.category === 'certification' ? 'View Certificate' : 'View Live Demo', \"\\n                            </a>\\n                        \") : '', \"\\n                        \").concat((_project$links2 = project.links) !== null && _project$links2 !== void 0 && _project$links2.youtube ? \"\\n                            <a href=\\\"\".concat(project.links.youtube, \"\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" class=\\\"action-button primary\\\">\\n                                <svg viewBox=\\\"0 0 24 24\\\" fill=\\\"currentColor\\\">\\n                                    <path d=\\\"M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z\\\"/>\\n                                </svg>\\n                                Watch on YouTube\\n                            </a>\\n                        \") : '', \"\\n                        \").concat((_project$links3 = project.links) !== null && _project$links3 !== void 0 && _project$links3.website ? \"\\n                            <a href=\\\"\".concat(project.links.website, \"\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" class=\\\"action-button primary\\\">\\n                                <svg viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\">\\n                                    <circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"10\\\"/>\\n                                    <line x1=\\\"2\\\" y1=\\\"12\\\" x2=\\\"22\\\" y2=\\\"12\\\"/>\\n                                    <path d=\\\"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z\\\"/>\\n                                </svg>\\n                                View Website\\n                            </a>\\n                        \") : '', \"\\n                        \").concat((_project$links4 = project.links) !== null && _project$links4 !== void 0 && _project$links4.github ? \"\\n                            <a href=\\\"\".concat(project.links.github, \"\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" class=\\\"action-button secondary\\\">\\n                                <svg viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\">\\n                                    <path d=\\\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 00-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0020 4.77 5.07 5.07 0 0019.91 1S18.73.65 16 2.48a13.38 13.38 0 00-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 005 4.77a5.44 5.44 0 00-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 009 18.13V22\\\"/>\\n                                </svg>\\n                                Source Code\\n                            </a>\\n                        \") : '', \"\\n                    </div>\\n                </div>\\n            </div>\\n        \");\n    }\n\n    /**\n     * Attach modal-specific events\n     */\n  }, {\n    key: \"attachModalEvents\",\n    value: function attachModalEvents() {\n      var _this10 = this;\n      var modal = this.container.querySelector('#portfolioModal');\n\n      // Gallery navigation\n      modal.querySelectorAll('.gallery-nav').forEach(function (btn) {\n        btn.addEventListener('click', function () {\n          if (btn.dataset.nav === 'prev') _this10.prevImage();else _this10.nextImage();\n        });\n      });\n\n      // Thumbnail clicks\n      modal.querySelectorAll('.thumb').forEach(function (thumb) {\n        thumb.addEventListener('click', function () {\n          _this10.currentImageIndex = parseInt(thumb.dataset.index);\n          _this10.updateGallery();\n        });\n      });\n    }\n\n    /**\n     * Navigate to previous image\n     */\n  }, {\n    key: \"prevImage\",\n    value: function prevImage() {\n      var _this$currentProject$, _this$currentProject$2;\n      if (!this.currentProject) return;\n      var images = ((_this$currentProject$ = this.currentProject.images) === null || _this$currentProject$ === void 0 ? void 0 : _this$currentProject$.gallery) || [];\n      var videos = ((_this$currentProject$2 = this.currentProject.images) === null || _this$currentProject$2 === void 0 ? void 0 : _this$currentProject$2.videos) || [];\n      var totalItems = images.length + videos.length;\n      if (totalItems <= 1) return;\n      this.currentImageIndex = (this.currentImageIndex - 1 + totalItems) % totalItems;\n      this.updateGallery();\n    }\n\n    /**\n     * Navigate to next image\n     */\n  }, {\n    key: \"nextImage\",\n    value: function nextImage() {\n      var _this$currentProject$3, _this$currentProject$4;\n      if (!this.currentProject) return;\n      var images = ((_this$currentProject$3 = this.currentProject.images) === null || _this$currentProject$3 === void 0 ? void 0 : _this$currentProject$3.gallery) || [];\n      var videos = ((_this$currentProject$4 = this.currentProject.images) === null || _this$currentProject$4 === void 0 ? void 0 : _this$currentProject$4.videos) || [];\n      var totalItems = images.length + videos.length;\n      if (totalItems <= 1) return;\n      this.currentImageIndex = (this.currentImageIndex + 1) % totalItems;\n      this.updateGallery();\n    }\n\n    /**\n     * Update gallery image and thumbs\n     */\n  }, {\n    key: \"updateGallery\",\n    value: function updateGallery() {\n      var _this$currentProject$5,\n        _this$currentProject$6,\n        _this11 = this;\n      var modal = this.container.querySelector('#portfolioModal');\n      var viewer = modal.querySelector('.gallery-viewer');\n      var indicator = modal.querySelector('.gallery-indicator');\n      var thumbs = modal.querySelectorAll('.thumb');\n      var images = ((_this$currentProject$5 = this.currentProject.images) === null || _this$currentProject$5 === void 0 ? void 0 : _this$currentProject$5.gallery) || [];\n      var videos = ((_this$currentProject$6 = this.currentProject.images) === null || _this$currentProject$6 === void 0 ? void 0 : _this$currentProject$6.videos) || [];\n\n      // Handle both old format (array of strings) and new format (array of objects)\n      var processedImages = images.map(function (img) {\n        if (typeof img === 'string') {\n          return {\n            type: 'image',\n            src: img\n          };\n        } else if ((0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(img) === 'object' && img.url) {\n          return {\n            type: 'image',\n            src: img.url\n          };\n        }\n        return null;\n      }).filter(Boolean);\n      var galleryItems = [].concat((0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(processedImages), (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(videos.map(function (vid) {\n        return {\n          type: 'video',\n          src: vid\n        };\n      })));\n      if (viewer) {\n        var currentItem = galleryItems[this.currentImageIndex];\n        if (currentItem.type === 'image') {\n          viewer.innerHTML = \"\\n                    <img \\n                        src=\\\"\".concat(currentItem.src || this.getPlaceholder(), \"\\\" \\n                        alt=\\\"\").concat(this.currentProject.title, \"\\\"\\n                        class=\\\"gallery-image\\\"\\n                        style=\\\"max-width: 100%; max-height: 60vh; width: auto; height: auto; object-fit: contain; display: block; margin: 0 auto;\\\"\\n                        onerror=\\\"this.src='\").concat(this.getPlaceholder(), \"'\\\"\\n                    >\\n                \");\n        } else {\n          viewer.innerHTML = \"\\n                    <iframe \\n                        src=\\\"\".concat(currentItem.src, \"\\\" \\n                        class=\\\"gallery-video\\\"\\n                        title=\\\"YouTube video player\\\" \\n                        frameborder=\\\"0\\\" \\n                        allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\\" \\n                        referrerpolicy=\\\"strict-origin-when-cross-origin\\\" \\n                        allowfullscreen>\\n                    </iframe>\\n                \");\n        }\n\n        // Re-add navigation buttons\n        if (galleryItems.length > 1) {\n          viewer.innerHTML += \"\\n                    <button class=\\\"gallery-nav prev\\\" data-nav=\\\"prev\\\">\\n                        <svg viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\">\\n                            <polyline points=\\\"15 18 9 12 15 6\\\"></polyline>\\n                        </svg>\\n                    </button>\\n                    <button class=\\\"gallery-nav next\\\" data-nav=\\\"next\\\">\\n                        <svg viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\">\\n                            <polyline points=\\\"9 18 15 12 9 6\\\"></polyline>\\n                        </svg>\\n                    </button>\\n                    <div class=\\\"gallery-indicator\\\">\".concat(this.currentImageIndex + 1, \" / \").concat(galleryItems.length, \"</div>\\n                \");\n\n          // Re-attach nav events\n          viewer.querySelectorAll('.gallery-nav').forEach(function (btn) {\n            btn.addEventListener('click', function () {\n              if (btn.dataset.nav === 'prev') _this11.prevImage();else _this11.nextImage();\n            });\n          });\n        }\n      }\n      if (indicator) {\n        indicator.textContent = \"\".concat(this.currentImageIndex + 1, \" / \").concat(galleryItems.length);\n      }\n      thumbs.forEach(function (thumb, idx) {\n        thumb.classList.toggle('active', idx === _this11.currentImageIndex);\n      });\n    }\n\n    /**\n     * Close modal\n     */\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      var _this12 = this;\n      var modal = this.container.querySelector('#portfolioModal');\n      modal.classList.remove('active');\n      setTimeout(function () {\n        modal.classList.add('hidden');\n        _this12.currentProject = null;\n        _this12.currentImageIndex = 0;\n      }, 300);\n    }\n\n    /**\n     * Get status badge HTML\n     */\n  }, {\n    key: \"getStatusBadge\",\n    value: function getStatusBadge(status) {\n      var badges = {\n        'live': '<div class=\"status-badge live\">Live</div>',\n        'completed': '<div class=\"status-badge completed\">Completed</div>',\n        'in-progress': '<div class=\"status-badge progress\">In Progress</div>',\n        'archived': '<div class=\"status-badge archived\">Archived</div>'\n      };\n      return badges[status] || '';\n    }\n\n    /**\n     * Get placeholder image\n     */\n  }, {\n    key: \"getPlaceholder\",\n    value: function getPlaceholder() {\n      return \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 800 500'%3E%3Cdefs%3E%3ClinearGradient id='g' x1='0%25' y1='0%25' x2='100%25' y2='100%25'%3E%3Cstop offset='0%25' style='stop-color:%23667eea'/%3E%3Cstop offset='100%25' style='stop-color:%23764ba2'/%3E%3C/linearGradient%3E%3C/defs%3E%3Crect width='800' height='500' fill='url(%23g)'/%3E%3Cg transform='translate(400,250)'%3E%3Crect x='-50' y='-50' width='100' height='100' rx='10' fill='white' opacity='0.2'/%3E%3Ccircle cx='-20' cy='-20' r='10' fill='white' opacity='0.4'/%3E%3Cpath d='M50 30L20 0L-30 50L50 50Z' fill='white' opacity='0.4'/%3E%3C/g%3E%3C/svg%3E\";\n    }\n\n    /**\n     * Truncate text\n     */\n  }, {\n    key: \"truncate\",\n    value: function truncate(text, length) {\n      if (!text || text.length <= length) return text || '';\n      return text.substring(0, length).trim() + '...';\n    }\n\n    /**\n     * Show error state\n     */\n  }, {\n    key: \"showError\",\n    value: function showError(message) {\n      this.container.innerHTML = \"\\n            <div class=\\\"portfolio-error\\\">\\n                <svg class=\\\"error-icon\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\">\\n                    <circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"10\\\"/>\\n                    <line x1=\\\"12\\\" y1=\\\"8\\\" x2=\\\"12\\\" y2=\\\"12\\\"/>\\n                    <line x1=\\\"12\\\" y1=\\\"16\\\" x2=\\\"12.01\\\" y2=\\\"16\\\"/>\\n                </svg>\\n                <h3>Oops! Something went wrong</h3>\\n                <p>\".concat(message, \"</p>\\n                <button onclick=\\\"location.reload()\\\" class=\\\"retry-button\\\">Retry</button>\\n            </div>\\n        \");\n    }\n  }]);\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3026\n");

/***/ }),

/***/ 6370:
/*!***********************************************************************!*\
  !*** ./resources/js/components/preferences/PreferencesIntegration.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PreferencesIntegration)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 2284);\n/* harmony import */ var _babel_runtime_helpers_toArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/toArray */ 7695);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _EventBus_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../EventBus.js */ 947);\n/* harmony import */ var _services_ThemeService_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/ThemeService.js */ 3985);\n\n\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n/**\n * PreferencesIntegration - Applies user preferences to all components\n * Listens for preference changes and updates UI in real-time\n * @module PreferencesIntegration\n */\n\n\n\nvar PreferencesIntegration = /*#__PURE__*/function () {\n  function PreferencesIntegration() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, PreferencesIntegration);\n    this.preferences = null;\n    this.themeService = _services_ThemeService_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\n    this.init();\n  }\n\n  /**\n   * Initialize preference listeners\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(PreferencesIntegration, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n      // Listen for preference loading\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].on('preferences:loaded', function (prefs) {\n        _this.preferences = prefs;\n        _this.applyAllPreferences();\n      });\n\n      // Listen for individual preference changes\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].on('preference:changed', function (data) {\n        _this.handlePreferenceChange(data.path, data.value);\n      });\n    }\n\n    /**\n     * Apply all preferences on load\n     */\n  }, {\n    key: \"applyAllPreferences\",\n    value: function applyAllPreferences() {\n      if (!this.preferences) return;\n\n      // Apply appearance preferences\n      this.applyAppearancePreferences();\n\n      // Apply desktop preferences\n      this.applyDesktopPreferences();\n\n      // Apply dock preferences\n      this.applyDockPreferences();\n\n      // Apply terminal preferences\n      this.applyTerminalPreferences();\n\n      // Apply performance preferences\n      this.applyPerformancePreferences();\n\n      // Apply animation preferences\n      this.applyAnimationPreferences();\n    }\n\n    /**\n     * Handle individual preference change\n     */\n  }, {\n    key: \"handlePreferenceChange\",\n    value: function handlePreferenceChange(path, value) {\n      var _path$split = path.split('.'),\n        _path$split2 = (0,_babel_runtime_helpers_toArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_path$split),\n        category = _path$split2[0],\n        keyPath = _path$split2.slice(1);\n      switch (category) {\n        case 'appearance':\n          this.handleAppearanceChange(keyPath.join('.'), value);\n          break;\n        case 'desktop':\n          this.handleDesktopChange(keyPath.join('.'), value);\n          break;\n        case 'dock':\n          this.handleDockChange(keyPath.join('.'), value);\n          break;\n        case 'terminal':\n          this.handleTerminalChange(keyPath.join('.'), value);\n          break;\n        case 'performance':\n        case 'boot':\n        case 'animations':\n          this.handlePerformanceChange(keyPath.join('.'), value, category);\n          break;\n        case 'privacy':\n          this.handlePrivacyChange(keyPath.join('.'), value);\n          break;\n      }\n    }\n\n    /**\n     * Apply appearance preferences\n     */\n  }, {\n    key: \"applyAppearancePreferences\",\n    value: function applyAppearancePreferences() {\n      var _this$preferences;\n      var appearance = (_this$preferences = this.preferences) === null || _this$preferences === void 0 ? void 0 : _this$preferences.appearance;\n      if (!appearance) return;\n\n      // Apply theme\n      this.applyTheme(appearance.theme || 'auto');\n\n      // Apply accent color\n      if (appearance.accent_color) {\n        document.documentElement.style.setProperty('--accent-color', appearance.accent_color);\n      }\n\n      // Apply transparency\n      if (appearance.transparency !== undefined) {\n        document.documentElement.style.setProperty('--transparency', appearance.transparency);\n      }\n    }\n\n    /**\n     * Handle appearance changes\n     */\n  }, {\n    key: \"handleAppearanceChange\",\n    value: function handleAppearanceChange(key, value) {\n      switch (key) {\n        case 'theme':\n          // Use ThemeService for proper theme management\n          this.themeService.setTheme(value);\n          break;\n        case 'accent_color':\n          document.documentElement.style.setProperty('--accent-color', value);\n          _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('theme:accentChanged', {\n            color: value\n          });\n          break;\n        case 'transparency':\n          document.documentElement.style.setProperty('--transparency', value);\n          _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('theme:transparencyChanged', {\n            value: value\n          });\n          break;\n      }\n    }\n\n    /**\n     * Apply theme (light/dark/auto)\n     */\n  }, {\n    key: \"applyTheme\",\n    value: function applyTheme(theme) {\n      // Use ThemeService for consistent theme management\n      this.themeService.setTheme(theme);\n    }\n\n    /**\n     * Apply desktop preferences\n     */\n  }, {\n    key: \"applyDesktopPreferences\",\n    value: function applyDesktopPreferences() {\n      var _this$preferences2, _desktop$icons;\n      var desktop = (_this$preferences2 = this.preferences) === null || _this$preferences2 === void 0 ? void 0 : _this$preferences2.desktop;\n      if (!desktop) return;\n\n      // Emit wallpaper preferences\n      if (desktop.wallpaper) {\n        _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('wallpaper:preferencesLoaded', desktop.wallpaper);\n      }\n\n      // Apply icon size\n      if ((_desktop$icons = desktop.icons) !== null && _desktop$icons !== void 0 && _desktop$icons.size) {\n        var iconSize = this.getIconSizeValue(desktop.icons.size);\n        document.documentElement.style.setProperty('--desktop-icon-size', iconSize);\n      }\n    }\n\n    /**\n     * Handle desktop changes\n     */\n  }, {\n    key: \"handleDesktopChange\",\n    value: function handleDesktopChange(key, value) {\n      if (key.startsWith('wallpaper.')) {\n        var wallpaperKey = key.replace('wallpaper.', '');\n        _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('wallpaper:settingChanged', {\n          key: wallpaperKey,\n          value: value\n        });\n      } else if (key === 'icons.size') {\n        var iconSize = this.getIconSizeValue(value);\n        document.documentElement.style.setProperty('--desktop-icon-size', iconSize);\n        _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('desktop:iconSizeChanged', {\n          size: value\n        });\n      }\n    }\n\n    /**\n     * Get icon size value in pixels\n     */\n  }, {\n    key: \"getIconSizeValue\",\n    value: function getIconSizeValue(size) {\n      var sizes = {\n        small: '48px',\n        medium: '64px',\n        large: '80px'\n      };\n      return sizes[size] || sizes.medium;\n    }\n\n    /**\n     * Apply dock preferences\n     */\n  }, {\n    key: \"applyDockPreferences\",\n    value: function applyDockPreferences() {\n      var _this$preferences3;\n      var dock = (_this$preferences3 = this.preferences) === null || _this$preferences3 === void 0 ? void 0 : _this$preferences3.dock;\n      if (!dock) return;\n\n      // Emit dock preferences\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('dock:preferencesLoaded', dock);\n    }\n\n    /**\n     * Handle dock changes\n     */\n  }, {\n    key: \"handleDockChange\",\n    value: function handleDockChange(key, value) {\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('dock:settingChanged', {\n        key: key,\n        value: value\n      });\n    }\n\n    /**\n     * Apply terminal preferences\n     */\n  }, {\n    key: \"applyTerminalPreferences\",\n    value: function applyTerminalPreferences() {\n      var _this$preferences4;\n      var terminal = (_this$preferences4 = this.preferences) === null || _this$preferences4 === void 0 ? void 0 : _this$preferences4.terminal;\n      if (!terminal) return;\n\n      // Emit terminal preferences\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('terminal:preferencesLoaded', terminal);\n    }\n\n    /**\n     * Handle terminal changes\n     */\n  }, {\n    key: \"handleTerminalChange\",\n    value: function handleTerminalChange(key, value) {\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('terminal:settingChanged', {\n        key: key,\n        value: value\n      });\n    }\n\n    /**\n     * Apply performance preferences\n     */\n  }, {\n    key: \"applyPerformancePreferences\",\n    value: function applyPerformancePreferences() {\n      var _this$preferences5;\n      var animations = (_this$preferences5 = this.preferences) === null || _this$preferences5 === void 0 ? void 0 : _this$preferences5.animations;\n      if (!animations) return;\n\n      // Apply animation speed\n      if (animations.speed) {\n        this.applyAnimationSpeed(animations.speed);\n      }\n\n      // Apply reduced motion\n      if (animations.reduced_motion) {\n        document.documentElement.style.setProperty('--animation-duration', '0ms');\n        document.body.classList.add('reduce-motion');\n      }\n    }\n\n    /**\n     * Apply animation preferences\n     */\n  }, {\n    key: \"applyAnimationPreferences\",\n    value: function applyAnimationPreferences() {\n      var _this$preferences6;\n      var animations = (_this$preferences6 = this.preferences) === null || _this$preferences6 === void 0 ? void 0 : _this$preferences6.animations;\n      if (!animations) return;\n\n      // Set animation speed multiplier\n      var speedMultipliers = {\n        slow: 1.5,\n        normal: 1.0,\n        fast: 0.5,\n        off: 0\n      };\n      var multiplier = speedMultipliers[animations.speed] || 1.0;\n      document.documentElement.style.setProperty('--animation-speed', multiplier);\n\n      // Handle reduced motion\n      if (animations.reduced_motion) {\n        document.body.classList.add('reduce-motion');\n      } else {\n        document.body.classList.remove('reduce-motion');\n      }\n    }\n\n    /**\n     * Handle performance changes\n     */\n  }, {\n    key: \"handlePerformanceChange\",\n    value: function handlePerformanceChange(key, value, category) {\n      if (category === 'animations') {\n        if (key === 'speed') {\n          this.applyAnimationSpeed(value);\n        } else if (key === 'reduced_motion') {\n          if (value) {\n            document.body.classList.add('reduce-motion');\n            document.documentElement.style.setProperty('--animation-duration', '0ms');\n          } else {\n            document.body.classList.remove('reduce-motion');\n            document.documentElement.style.removeProperty('--animation-duration');\n          }\n        }\n      }\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('performance:settingChanged', {\n        key: key,\n        value: value,\n        category: category\n      });\n    }\n\n    /**\n     * Apply animation speed\n     */\n  }, {\n    key: \"applyAnimationSpeed\",\n    value: function applyAnimationSpeed(speed) {\n      var speedValues = {\n        slow: '1.5',\n        normal: '1.0',\n        fast: '0.5',\n        off: '0'\n      };\n      var speedValue = speedValues[speed] || '1.0';\n      document.documentElement.style.setProperty('--animation-speed', speedValue);\n      if (speed === 'off') {\n        document.body.classList.add('animations-off');\n      } else {\n        document.body.classList.remove('animations-off');\n      }\n    }\n\n    /**\n     * Handle privacy changes\n     */\n  }, {\n    key: \"handlePrivacyChange\",\n    value: function handlePrivacyChange(key, value) {\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('privacy:settingChanged', {\n        key: key,\n        value: value\n      });\n    }\n\n    /**\n     * Get current preferences\n     */\n  }, {\n    key: \"getPreferences\",\n    value: function getPreferences() {\n      return this.preferences;\n    }\n\n    /**\n     * Get preference value by path\n     */\n  }, {\n    key: \"getPreference\",\n    value: function getPreference(path) {\n      var keys = path.split('.');\n      var value = this.preferences;\n      var _iterator = _createForOfIteratorHelper(keys),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var key = _step.value;\n          if (value && (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(value) === 'object') {\n            value = value[key];\n          } else {\n            return null;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return value;\n    }\n  }]);\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6370\n");

/***/ }),

/***/ 6796:
/*!******************************************************!*\
  !*** ./resources/js/components/terminal/Terminal.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _EventBus_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../EventBus.js */ 947);\n/* harmony import */ var _services_SoundService_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/SoundService.js */ 8823);\n/* harmony import */ var _services_FileSystemService_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/FileSystemService.js */ 5979);\n/* harmony import */ var _themes_TerminalThemes_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./themes/TerminalThemes.js */ 59);\n/* harmony import */ var _commands_HelpCommand_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./commands/HelpCommand.js */ 2805);\n/* harmony import */ var _commands_ClearCommand_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./commands/ClearCommand.js */ 1455);\n/* harmony import */ var _commands_LSCommand_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./commands/LSCommand.js */ 719);\n/* harmony import */ var _commands_PWDCommand_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./commands/PWDCommand.js */ 2541);\n/* harmony import */ var _commands_CDCommand_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./commands/CDCommand.js */ 4893);\n/* harmony import */ var _commands_CatCommand_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./commands/CatCommand.js */ 7700);\n/* harmony import */ var _commands_WhoAmICommand_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./commands/WhoAmICommand.js */ 4159);\n/* harmony import */ var _commands_NeofetchCommand_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./commands/NeofetchCommand.js */ 7302);\n/* harmony import */ var _commands_GamesCommand_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./commands/GamesCommand.js */ 8097);\n/* harmony import */ var _commands_ThemeCommand_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./commands/ThemeCommand.js */ 4551);\n/* harmony import */ var _commands_SoundCommand_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./commands/SoundCommand.js */ 4985);\n/* harmony import */ var _commands_AlienBootCommand_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./commands/AlienBootCommand.js */ 3113);\n/* harmony import */ var _commands_ExitCommand_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./commands/ExitCommand.js */ 6496);\n/* harmony import */ var _games_SnakeGame_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./games/SnakeGame.js */ 4960);\n/* harmony import */ var _games_TetrisGame_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./games/TetrisGame.js */ 8587);\n/* harmony import */ var _games_TypingGame_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./games/TypingGame.js */ 6305);\n/* harmony import */ var _games_Game2048_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./games/Game2048.js */ 6636);\n\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n\n\n\n\n\n\n// Commands\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Games\n\n\n\n\n\n/**\n * Terminal - LinkOS Terminal application with xterm.js\n * Provides authentic terminal experience with command system and games\n */\nvar Terminal = /*#__PURE__*/function () {\n  function Terminal() {\n    var container = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, Terminal);\n    this.container = container;\n    this.terminal = null;\n    this.fitAddon = null;\n    this.webLinksAddon = null;\n\n    // Terminal state\n    this.isInitialized = false;\n    this.currentDirectory = '~';\n    this.commandHistory = [];\n    this.historyIndex = -1;\n    this.currentInput = '';\n    this.isCommandRunning = false;\n    this.isGameRunning = false;\n\n    // Options\n    this.skipBootSound = options.skipBootSound || false;\n\n    // Command system\n    this.commandRegistry = new Map();\n    this.fileSystem = null;\n    this.sessionData = null;\n\n    // Sound service\n    this.soundService = new _services_SoundService_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\n    this.currentTheme = 'default';\n\n    // Configuration - theme loaded from TERMINAL_THEMES\n    this.config = {\n      theme: _themes_TerminalThemes_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"][\"default\"],\n      // Use shared theme system\n      fontSize: 11,\n      fontFamily: 'Menlo, Monaco, \"SF Mono\", \"Cascadia Code\", \"JetBrains Mono\", \"Fira Code\", \"Source Code Pro\", Consolas, \"Courier New\", monospace',\n      lineHeight: 1.2,\n      letterSpacing: 0,\n      cursorBlink: true,\n      cursorStyle: 'block',\n      scrollback: 1000,\n      tabStopWidth: 4,\n      bellSound: true,\n      bellStyle: 'sound'\n    };\n    this.init();\n  }\n\n  /**\n   * Initialize terminal\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(Terminal, [{\n    key: \"init\",\n    value: function () {\n      var _init = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee() {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return this.loadDependencies();\n            case 3:\n              _context.next = 5;\n              return this.loadFileSystem();\n            case 5:\n              this.loadSessionData(); // Load session BEFORE setup to get correct initial directory\n              this.loadUserPreferences(); // Load user preferences for theme, font, etc.\n              this.setupTerminal();\n              this.registerCommands();\n              this.setupEventListeners();\n              this.isInitialized = true;\n              _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('terminal:ready', {\n                terminalId: this.id,\n                config: this.config\n              });\n              _context.next = 18;\n              break;\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Failed to initialize terminal:', _context.t0);\n              this.showError('Terminal initialization failed');\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 14]]);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n    /**\n     * Load xterm.js dependencies\n     */\n  }, {\n    key: \"loadDependencies\",\n    value: function () {\n      var _loadDependencies = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee2() {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(window.Terminal && window.FitAddon && window.WebLinksAddon)) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                var scripts = ['/js/vendor/xterm.js', '/js/vendor/xterm-addon-fit.js', '/js/vendor/xterm-addon-web-links.js'];\n                var loaded = 0;\n                scripts.forEach(function (src) {\n                  var script = document.createElement('script');\n                  script.src = src;\n                  script.onload = function () {\n                    loaded++;\n                    if (loaded === scripts.length) {\n                      resolve();\n                    }\n                  };\n                  script.onerror = function () {\n                    return reject(new Error(\"Failed to load \".concat(src)));\n                  };\n                  document.head.appendChild(script);\n                });\n              }));\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function loadDependencies() {\n        return _loadDependencies.apply(this, arguments);\n      }\n      return loadDependencies;\n    }()\n    /**\n     * Load file system data using centralized FileSystemService\n     * Now shares the same filesystem.json with Finder component\n     */\n  }, {\n    key: \"loadFileSystem\",\n    value: function () {\n      var _loadFileSystem = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee3() {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _services_FileSystemService_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].loadFileSystem();\n            case 3:\n              this.fileSystem = _context3.sent;\n              console.log('üíª Terminal: Loaded filesystem from FileSystemService (shared with Finder)');\n              _context3.next = 11;\n              break;\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Terminal: Failed to load filesystem:', _context3.t0);\n              this.fileSystem = this.getDefaultFileSystem();\n            case 11:\n              console.log('Terminal: fileSystem loaded', this.fileSystem);\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 7]]);\n      }));\n      function loadFileSystem() {\n        return _loadFileSystem.apply(this, arguments);\n      }\n      return loadFileSystem;\n    }()\n    /**\n     * Setup xterm.js terminal\n     */\n  }, {\n    key: \"setupTerminal\",\n    value: function setupTerminal() {\n      var _this = this;\n      // Create container if not provided\n      if (!this.container) {\n        this.container = document.createElement('div');\n        this.container.className = 'terminal-container';\n      }\n\n      // Initialize terminal with current config (already loaded from preferences)\n      this.terminal = new window.Terminal(this.config);\n\n      // Add addons\n      this.fitAddon = new window.FitAddon.FitAddon();\n      this.webLinksAddon = new window.WebLinksAddon.WebLinksAddon();\n      this.terminal.loadAddon(this.fitAddon);\n      this.terminal.loadAddon(this.webLinksAddon);\n\n      // Open terminal\n      this.terminal.open(this.container);\n\n      // Apply saved theme after terminal is opened (must be before other settings)\n      if (this.currentTheme) {\n        this.applyTheme(this.currentTheme);\n      }\n\n      // Re-apply all config options to ensure they stick after theme application\n      this.terminal.options.fontSize = this.config.fontSize;\n      this.terminal.options.fontFamily = this.config.fontFamily;\n      this.terminal.options.lineHeight = this.config.lineHeight;\n      this.terminal.options.cursorStyle = this.config.cursorStyle;\n      this.terminal.options.cursorBlink = this.config.cursorBlink;\n      this.terminal.options.scrollback = this.config.scrollback;\n      this.terminal.options.bellStyle = this.config.bellStyle;\n      this.terminal.options.letterSpacing = this.config.letterSpacing;\n      this.terminal.options.tabStopWidth = this.config.tabStopWidth;\n      console.log('‚úì Terminal configured:', {\n        fontSize: this.config.fontSize,\n        fontFamily: this.config.fontFamily,\n        cursorStyle: this.config.cursorStyle,\n        cursorBlink: this.config.cursorBlink,\n        theme: this.currentTheme\n      });\n\n      // Fit terminal to container\n      this.fitAddon.fit();\n\n      // Setup input handling\n      this.setupInputHandling();\n\n      // Show welcome message\n      this.showWelcome();\n\n      // Show prompt\n      this.showPrompt();\n\n      // Focus terminal to enable cursor blinking\n      this.focus();\n\n      // Play boot sound after short delay (skip if flag is set, e.g., from alien boot screen)\n      if (!this.skipBootSound) {\n        setTimeout(function () {\n          _this.soundService.playBootSound(_this.currentTheme);\n        }, 300);\n      }\n    }\n\n    /**\n     * Focus the terminal\n     */\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (this.terminal) {\n        this.terminal.focus();\n      }\n    }\n\n    /**\n     * Setup input handling\n     */\n  }, {\n    key: \"setupInputHandling\",\n    value: function setupInputHandling() {\n      var _this2 = this;\n      this.terminal.onData(function (data) {\n        if (_this2.isCommandRunning || _this2.isGameRunning) return;\n        var code = data.charCodeAt(0);\n        switch (code) {\n          case 13:\n            // Enter\n            _this2.handleEnter();\n            break;\n          case 127: // Backspace\n          case 8:\n            _this2.handleBackspace();\n            break;\n          case 9:\n            // Tab\n            _this2.handleTab();\n            break;\n          case 3:\n            // Ctrl+C\n            _this2.handleCtrlC();\n            break;\n          case 12:\n            // Ctrl+L\n            _this2.handleClear();\n            break;\n          case 1:\n            // Ctrl+A\n            _this2.handleCtrlA();\n            break;\n          case 5:\n            // Ctrl+E\n            _this2.handleCtrlE();\n            break;\n          case 11:\n            // Ctrl+K\n            _this2.handleCtrlK();\n            break;\n          case 21:\n            // Ctrl+U\n            _this2.handleCtrlU();\n            break;\n          case 23:\n            // Ctrl+W\n            _this2.handleCtrlW();\n            break;\n          default:\n            // Handle special keys\n            if (data === '\\x1b[A') {\n              // Up arrow\n              _this2.handleUpArrow();\n            } else if (data === '\\x1b[B') {\n              // Down arrow\n              _this2.handleDownArrow();\n            } else if (data === '\\x1b[C') {\n              // Right arrow\n              _this2.handleRightArrow();\n            } else if (data === '\\x1b[D') {\n              // Left arrow\n              _this2.handleLeftArrow();\n            } else if (code >= 32 && code <= 126) {\n              // Printable characters\n              _this2.handleCharacter(data);\n            }\n            break;\n        }\n      });\n    }\n\n    /**\n     * Handle Enter key\n     */\n  }, {\n    key: \"handleEnter\",\n    value: function handleEnter() {\n      this.terminal.writeln('');\n\n      // Play enter sound\n      if (this.soundService) {\n        this.soundService.generateEnterSound(this.currentTheme);\n      }\n      var command = this.currentInput.trim();\n      if (command) {\n        this.addToHistory(command);\n        this.executeCommand(command);\n      } else {\n        this.showPrompt();\n      }\n      this.currentInput = '';\n      this.historyIndex = -1;\n    }\n\n    /**\n     * Handle Backspace\n     */\n  }, {\n    key: \"handleBackspace\",\n    value: function handleBackspace() {\n      if (this.currentInput.length > 0) {\n        this.currentInput = this.currentInput.slice(0, -1);\n        this.terminal.write('\\b \\b');\n\n        // Play a softer keypress sound for backspace\n        if (this.soundService) {\n          this.soundService.playKeypressSound(this.currentTheme);\n        }\n      }\n    }\n\n    /**\n     * Handle Tab completion\n     */\n  }, {\n    key: \"handleTab\",\n    value: function handleTab() {\n      // Play tab sound\n      if (this.soundService) {\n        this.soundService.generateTabSound(this.currentTheme);\n      }\n      var completions = this.getCompletions(this.currentInput);\n      if (completions.length === 1) {\n        var completion = completions[0];\n        // Clear current line and write completion\n        var promptLength = this.getPromptLength();\n        this.terminal.write(\"\\x1B[\".concat(promptLength + 1, \"G\\x1B[K\"));\n        this.currentInput = completion;\n        this.terminal.write(completion);\n      } else if (completions.length > 1) {\n        this.terminal.writeln('');\n        this.showCompletions(completions);\n        this.showPrompt();\n        this.terminal.write(this.currentInput);\n      }\n    }\n\n    /**\n     * Handle Ctrl+C\n     */\n  }, {\n    key: \"handleCtrlC\",\n    value: function handleCtrlC() {\n      this.terminal.writeln('^C');\n      this.currentInput = '';\n      this.isCommandRunning = false;\n      this.showPrompt();\n    }\n\n    /**\n     * Handle Ctrl+L (clear)\n     */\n  }, {\n    key: \"handleClear\",\n    value: function handleClear() {\n      this.terminal.clear();\n      this.showPrompt();\n    }\n\n    /**\n     * Handle Ctrl+A (beginning of line)\n     */\n  }, {\n    key: \"handleCtrlA\",\n    value: function handleCtrlA() {\n      // Move cursor to beginning of input\n      var promptLength = this.getPromptLength();\n      this.terminal.write(\"\\x1B[\".concat(promptLength + 1, \"G\"));\n    }\n\n    /**\n     * Handle Ctrl+E (end of line)\n     */\n  }, {\n    key: \"handleCtrlE\",\n    value: function handleCtrlE() {\n      // Move cursor to end of input\n      var promptLength = this.getPromptLength();\n      this.terminal.write(\"\\x1B[\".concat(promptLength + this.currentInput.length + 1, \"G\"));\n    }\n\n    /**\n     * Handle Ctrl+K (cut to end)\n     */\n  }, {\n    key: \"handleCtrlK\",\n    value: function handleCtrlK() {\n      this.terminal.write('\\x1b[K'); // Clear from cursor to end of line\n      this.currentInput = '';\n    }\n\n    /**\n     * Handle Ctrl+U (cut to beginning)\n     */\n  }, {\n    key: \"handleCtrlU\",\n    value: function handleCtrlU() {\n      // Clear from beginning to cursor\n      var promptLength = this.getPromptLength();\n      this.terminal.write(\"\\x1B[\".concat(promptLength + 1, \"G\\x1B[K\"));\n      this.currentInput = '';\n    }\n\n    /**\n     * Handle Ctrl+W (delete word)\n     */\n  }, {\n    key: \"handleCtrlW\",\n    value: function handleCtrlW() {\n      var words = this.currentInput.split(' ');\n      if (words.length > 1) {\n        words.pop();\n        var newInput = words.join(' ') + ' ';\n        var diff = this.currentInput.length - newInput.length;\n        for (var i = 0; i < diff; i++) {\n          this.terminal.write('\\b \\b');\n        }\n        this.currentInput = newInput;\n      } else {\n        this.handleCtrlU();\n      }\n    }\n\n    /**\n     * Handle up arrow (command history)\n     */\n  }, {\n    key: \"handleUpArrow\",\n    value: function handleUpArrow() {\n      if (this.commandHistory.length === 0) return;\n      if (this.historyIndex === -1) {\n        this.historyIndex = this.commandHistory.length - 1;\n      } else if (this.historyIndex > 0) {\n        this.historyIndex--;\n      }\n      this.replaceCurrentInput(this.commandHistory[this.historyIndex]);\n    }\n\n    /**\n     * Handle down arrow (command history)\n     */\n  }, {\n    key: \"handleDownArrow\",\n    value: function handleDownArrow() {\n      if (this.historyIndex === -1) return;\n      this.historyIndex++;\n      if (this.historyIndex >= this.commandHistory.length) {\n        this.historyIndex = -1;\n        this.replaceCurrentInput('');\n      } else {\n        this.replaceCurrentInput(this.commandHistory[this.historyIndex]);\n      }\n    }\n\n    /**\n     * Handle right arrow\n     */\n  }, {\n    key: \"handleRightArrow\",\n    value: function handleRightArrow() {\n      // TODO: Implement cursor movement within line\n    }\n\n    /**\n     * Handle left arrow\n     */\n  }, {\n    key: \"handleLeftArrow\",\n    value: function handleLeftArrow() {\n      // TODO: Implement cursor movement within line\n    }\n\n    /**\n     * Handle character input\n     */\n  }, {\n    key: \"handleCharacter\",\n    value: function handleCharacter(_char) {\n      this.currentInput += _char;\n      this.terminal.write(_char);\n\n      // Play keypress sound for typing\n      if (this.soundService) {\n        this.soundService.playKeypressSound(this.currentTheme);\n      }\n    }\n\n    /**\n     * Replace current input line\n     */\n  }, {\n    key: \"replaceCurrentInput\",\n    value: function replaceCurrentInput(newInput) {\n      // Clear current input\n      var promptLength = this.getPromptLength();\n      this.terminal.write(\"\\x1B[\".concat(promptLength + 1, \"G\\x1B[K\"));\n\n      // Write new input\n      this.currentInput = newInput;\n      this.terminal.write(newInput);\n    }\n\n    /**\n     * Get prompt length for cursor positioning\n     */\n  }, {\n    key: \"getPromptLength\",\n    value: function getPromptLength() {\n      return \"\".concat(this.getUserName(), \":\").concat(this.currentDirectory, \"$ \").length;\n    }\n\n    /**\n     * Show welcome message\n     */\n  }, {\n    key: \"showWelcome\",\n    value: function showWelcome() {\n      var _this3 = this;\n      var welcome = ['‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ', '‚îÇ              \\x1b[32m‚ú® AbdulmeLink Terminal ‚ú®\\x1b[0m              ‚îÇ', '‚îÇ                                                     ‚îÇ', '‚îÇ  Welcome to the authentic LinkOS terminal experience ‚îÇ', '‚îÇ                                                     ‚îÇ', '‚îÇ  Type \\x1b[33mhelp\\x1b[0m to see available commands                ‚îÇ', '‚îÇ  Type \\x1b[33mgames\\x1b[0m to see available games                  ‚îÇ', '‚îÇ                                                     ‚îÇ', '‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ', ''];\n      welcome.forEach(function (line) {\n        _this3.terminal.writeln(line);\n      });\n    }\n\n    /**\n     * Show command prompt\n     */\n  }, {\n    key: \"showPrompt\",\n    value: function showPrompt() {\n      var userName = this.getUserName();\n      var prompt = \"\\x1B[32m\".concat(userName, \"\\x1B[0m:\\x1B[34m\").concat(this.currentDirectory, \"\\x1B[0m$ \");\n      this.terminal.write(prompt);\n    }\n\n    /**\n     * Get username for prompt\n     */\n  }, {\n    key: \"getUserName\",\n    value: function getUserName() {\n      return 'guest';\n    }\n\n    /**\n     * Add command to history\n     */\n  }, {\n    key: \"addToHistory\",\n    value: function addToHistory(command) {\n      this.commandHistory.push(command);\n\n      // Limit history size\n      if (this.commandHistory.length > 100) {\n        this.commandHistory.shift();\n      }\n\n      // Save to session storage\n      this.saveSessionData();\n    }\n\n    /**\n     * Execute command\n     */\n  }, {\n    key: \"executeCommand\",\n    value: function () {\n      var _executeCommand = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee4(input) {\n        var parts, command, args, commandHandler;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              this.isCommandRunning = true;\n              parts = input.split(' ');\n              command = parts[0].toLowerCase();\n              args = parts.slice(1);\n              _context4.prev = 4;\n              if (!this.commandRegistry.has(command)) {\n                _context4.next = 11;\n                break;\n              }\n              commandHandler = this.commandRegistry.get(command);\n              _context4.next = 9;\n              return commandHandler.execute(args, this);\n            case 9:\n              _context4.next = 13;\n              break;\n            case 11:\n              this.writeError(\"command not found: \".concat(command));\n              this.suggestCommands(command);\n            case 13:\n              _context4.next = 18;\n              break;\n            case 15:\n              _context4.prev = 15;\n              _context4.t0 = _context4[\"catch\"](4);\n              this.writeError(\"Error executing command: \".concat(_context4.t0.message));\n            case 18:\n              this.isCommandRunning = false;\n              this.showPrompt();\n            case 20:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[4, 15]]);\n      }));\n      function executeCommand(_x) {\n        return _executeCommand.apply(this, arguments);\n      }\n      return executeCommand;\n    }()\n    /**\n     * Register commands\n     */\n  }, {\n    key: \"registerCommands\",\n    value: function registerCommands() {\n      // Import and register commands will be implemented separately\n      this.registerCommand('help', new _commands_HelpCommand_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]());\n      this.registerCommand('clear', new _commands_ClearCommand_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"]());\n      this.registerCommand('ls', new _commands_LSCommand_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]());\n      this.registerCommand('pwd', new _commands_PWDCommand_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"]());\n      this.registerCommand('cd', new _commands_CDCommand_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"]());\n      this.registerCommand('cat', new _commands_CatCommand_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"]());\n      this.registerCommand('whoami', new _commands_WhoAmICommand_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"]());\n      this.registerCommand('neofetch', new _commands_NeofetchCommand_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"]());\n      this.registerCommand('theme', new _commands_ThemeCommand_js__WEBPACK_IMPORTED_MODULE_17__[\"default\"]());\n      this.registerCommand('sound', new _commands_SoundCommand_js__WEBPACK_IMPORTED_MODULE_18__[\"default\"]());\n      this.registerCommand('alienboot', new _commands_AlienBootCommand_js__WEBPACK_IMPORTED_MODULE_19__[\"default\"]());\n      this.registerCommand('exit', new _commands_ExitCommand_js__WEBPACK_IMPORTED_MODULE_20__[\"default\"]());\n\n      // Games\n      this.registerCommand('games', new _commands_GamesCommand_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"]());\n      this.registerCommand('snake', new _games_SnakeGame_js__WEBPACK_IMPORTED_MODULE_21__[\"default\"]());\n      this.registerCommand('tetris', new _games_TetrisGame_js__WEBPACK_IMPORTED_MODULE_22__[\"default\"]());\n      this.registerCommand('typing', new _games_TypingGame_js__WEBPACK_IMPORTED_MODULE_23__[\"default\"]());\n      this.registerCommand('2048', new _games_Game2048_js__WEBPACK_IMPORTED_MODULE_24__[\"default\"]());\n    }\n\n    /**\n     * Register a command\n     */\n  }, {\n    key: \"registerCommand\",\n    value: function registerCommand(name, handler) {\n      this.commandRegistry.set(name, handler);\n    }\n\n    /**\n     * Get command completions\n     */\n  }, {\n    key: \"getCompletions\",\n    value: function getCompletions(input) {\n      var parts = input.split(' ');\n      var commandName = parts[0];\n\n      // If only typing command, complete command names\n      if (parts.length === 1) {\n        var commands = Array.from(this.commandRegistry.keys());\n        return commands.filter(function (cmd) {\n          return cmd.startsWith(input);\n        });\n      }\n\n      // If typing arguments, complete filenames/directories\n      if (parts.length >= 2 && (commandName === 'cd' || commandName === 'cat' || commandName === 'ls')) {\n        var partial = parts[parts.length - 1];\n        var currentPath = this.getCurrentPath();\n        var contents = this.getDirectoryContents(currentPath);\n        if (!contents) return [];\n        var items = Object.keys(contents);\n\n        // For cd, only show directories\n        if (commandName === 'cd') {\n          var dirs = items.filter(function (name) {\n            return contents[name].type === 'directory' && name.startsWith(partial);\n          });\n          return dirs.map(function (dir) {\n            return \"\".concat(parts.slice(0, -1).join(' '), \" \").concat(dir);\n          });\n        }\n\n        // For cat and ls, show all items\n        var matches = items.filter(function (name) {\n          return name.startsWith(partial);\n        });\n        return matches.map(function (match) {\n          return \"\".concat(parts.slice(0, -1).join(' '), \" \").concat(match);\n        });\n      }\n      return [];\n    }\n\n    /**\n     * Show completions\n     */\n  }, {\n    key: \"showCompletions\",\n    value: function showCompletions(completions) {\n      var columns = Math.floor(this.terminal.cols / 20);\n      var output = '';\n      for (var i = 0; i < completions.length; i++) {\n        output += completions[i].padEnd(20);\n        if ((i + 1) % columns === 0) {\n          output += '\\r\\n';\n        }\n      }\n      this.terminal.write(output);\n      this.terminal.writeln('');\n    }\n\n    /**\n     * Suggest commands for typos\n     */\n  }, {\n    key: \"suggestCommands\",\n    value: function suggestCommands(input) {\n      var _this4 = this;\n      var commands = Array.from(this.commandRegistry.keys());\n      var suggestions = commands.filter(function (cmd) {\n        return _this4.levenshteinDistance(input, cmd) <= 2;\n      });\n      if (suggestions.length > 0) {\n        this.terminal.writeln(\"\\x1B[33mDid you mean: \".concat(suggestions.join(', '), \"?\\x1B[0m\"));\n      }\n    }\n\n    /**\n     * Calculate Levenshtein distance for suggestions\n     */\n  }, {\n    key: \"levenshteinDistance\",\n    value: function levenshteinDistance(str1, str2) {\n      var matrix = [];\n      for (var i = 0; i <= str2.length; i++) {\n        matrix[i] = [i];\n      }\n      for (var j = 0; j <= str1.length; j++) {\n        matrix[0][j] = j;\n      }\n      for (var _i = 1; _i <= str2.length; _i++) {\n        for (var _j = 1; _j <= str1.length; _j++) {\n          if (str2.charAt(_i - 1) === str1.charAt(_j - 1)) {\n            matrix[_i][_j] = matrix[_i - 1][_j - 1];\n          } else {\n            matrix[_i][_j] = Math.min(matrix[_i - 1][_j - 1] + 1, matrix[_i][_j - 1] + 1, matrix[_i - 1][_j] + 1);\n          }\n        }\n      }\n      return matrix[str2.length][str1.length];\n    }\n\n    /**\n     * Write text to terminal\n     */\n  }, {\n    key: \"write\",\n    value: function write(text) {\n      this.terminal.write(text);\n    }\n\n    /**\n     * Write line to terminal\n     */\n  }, {\n    key: \"writeln\",\n    value: function writeln(text) {\n      this.terminal.writeln(text);\n    }\n\n    /**\n     * Write error message\n     */\n  }, {\n    key: \"writeError\",\n    value: function writeError(message) {\n      this.terminal.writeln(\"\\x1B[31m\".concat(message, \"\\x1B[0m\"));\n    }\n\n    /**\n     * Write success message\n     */\n  }, {\n    key: \"writeSuccess\",\n    value: function writeSuccess(message) {\n      this.terminal.writeln(\"\\x1B[32m\".concat(message, \"\\x1B[0m\"));\n    }\n\n    /**\n     * Write info message\n     */\n  }, {\n    key: \"writeInfo\",\n    value: function writeInfo(message) {\n      this.terminal.writeln(\"\\x1B[36m\".concat(message, \"\\x1B[0m\"));\n    }\n\n    /**\n     * Write warning message\n     */\n  }, {\n    key: \"writeWarning\",\n    value: function writeWarning(message) {\n      this.terminal.writeln(\"\\x1B[33m\".concat(message, \"\\x1B[0m\"));\n    }\n\n    /**\n     * Clear terminal\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.terminal.clear();\n    }\n\n    /**\n     * Set game running state to disable normal input handling\n     */\n  }, {\n    key: \"setGameRunning\",\n    value: function setGameRunning(isRunning) {\n      this.isGameRunning = isRunning;\n      if (!isRunning) {\n        // Clear any accumulated input when game ends\n        this.currentInput = '';\n      }\n    }\n\n    /**\n     * Write prompt (used by games to return to command prompt)\n     */\n  }, {\n    key: \"writePrompt\",\n    value: function writePrompt() {\n      this.terminal.write(\"\\n\\x1B[32m\".concat(this.currentDirectory, \"\\x1B[0m $ \"));\n    }\n\n    /**\n     * Get current path without ~ prefix\n     */\n  }, {\n    key: \"getCurrentPath\",\n    value: function getCurrentPath() {\n      if (this.currentDirectory === '~') {\n        return '';\n      }\n      // Remove ~/ prefix and return the path\n      return this.currentDirectory.substring(2);\n    }\n\n    /**\n     * Validate if a path exists in the filesystem\n     */\n  }, {\n    key: \"validatePath\",\n    value: function validatePath(path) {\n      var _this$fileSystem$home;\n      if (!this.fileSystem) return false;\n      if (!path || path === '') {\n        return true; // Root (home/abdulmelik) always exists\n      }\n\n      // Start from /home/abdulmelik/contents\n      var current = (_this$fileSystem$home = this.fileSystem.home) === null || _this$fileSystem$home === void 0 || (_this$fileSystem$home = _this$fileSystem$home.contents) === null || _this$fileSystem$home === void 0 || (_this$fileSystem$home = _this$fileSystem$home.abdulmelik) === null || _this$fileSystem$home === void 0 ? void 0 : _this$fileSystem$home.contents;\n      if (!current) return false;\n\n      // Navigate through the path\n      var parts = path.split('/').filter(function (p) {\n        return p;\n      });\n      for (var i = 0; i < parts.length; i++) {\n        var part = parts[i];\n        if (!current[part]) {\n          return false;\n        }\n        if (current[part].type === 'directory') {\n          // Navigate to contents of directory\n          current = current[part].contents || {};\n        } else if (i < parts.length - 1) {\n          // It's a file but we're not at the end of the path\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Get contents of a directory\n     */\n  }, {\n    key: \"getDirectoryContents\",\n    value: function getDirectoryContents(path) {\n      var _this$fileSystem$home2;\n      if (!this.fileSystem) {\n        console.error('Terminal: fileSystem is not loaded');\n        return null;\n      }\n\n      // Start from /home/abdulmelik/contents\n      var current = (_this$fileSystem$home2 = this.fileSystem.home) === null || _this$fileSystem$home2 === void 0 || (_this$fileSystem$home2 = _this$fileSystem$home2.contents) === null || _this$fileSystem$home2 === void 0 || (_this$fileSystem$home2 = _this$fileSystem$home2.abdulmelik) === null || _this$fileSystem$home2 === void 0 ? void 0 : _this$fileSystem$home2.contents;\n      if (!current) {\n        console.error('Terminal: Could not access home/abdulmelik/contents', this.fileSystem);\n        return null;\n      }\n\n      // If at root (~), return home directory contents\n      if (!path || path === '') {\n        return current;\n      }\n\n      // Navigate through the path\n      var parts = path.split('/').filter(function (p) {\n        return p;\n      });\n      var _iterator = _createForOfIteratorHelper(parts),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var part = _step.value;\n          if (!current[part]) {\n            return null;\n          }\n          if (current[part].type === 'directory') {\n            current = current[part].contents || {};\n          } else {\n            // It's a file, can't list contents\n            return null;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return current;\n    }\n\n    /**\n     * Navigate up one directory level\n     */\n  }, {\n    key: \"navigateUp\",\n    value: function navigateUp() {\n      if (this.currentDirectory === '~') {\n        return; // Already at root\n      }\n      var parts = this.currentDirectory.split('/');\n      parts.pop(); // Remove last part\n\n      if (parts.length === 1 && parts[0] === '~') {\n        this.currentDirectory = '~';\n      } else {\n        this.currentDirectory = parts.join('/');\n      }\n    }\n\n    /**\n     * Resize terminal\n     */\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (this.fitAddon) {\n        this.fitAddon.fit();\n      }\n    }\n\n    /**\n     * Apply saved theme from localStorage\n     */\n  }, {\n    key: \"applySavedTheme\",\n    value: function applySavedTheme(themeName) {\n      // Use shared TERMINAL_THEMES instead of duplicating\n      if (_themes_TerminalThemes_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"][themeName]) {\n        this.config.theme = _themes_TerminalThemes_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"][themeName];\n      }\n    }\n\n    /**\n     * Get default file system\n     */\n  }, {\n    key: \"getDefaultFileSystem\",\n    value: function getDefaultFileSystem() {\n      return {\n        \"home\": {\n          \"type\": \"directory\",\n          \"modified\": \"Oct 1 00:00\",\n          \"size\": 4096,\n          \"contents\": {\n            \"abdulmelik\": {\n              \"type\": \"directory\",\n              \"modified\": \"Oct 1 00:00\",\n              \"size\": 4096,\n              \"contents\": {\n                \"README.md\": {\n                  \"type\": \"file\",\n                  \"modified\": \"Oct 1 00:00\",\n                  \"size\": 128,\n                  \"content\": \"# Welcome!\\n\\nType 'help' for available commands.\"\n                },\n                \"Documents\": {\n                  \"type\": \"directory\",\n                  \"modified\": \"Oct 1 00:00\",\n                  \"size\": 4096,\n                  \"contents\": {}\n                },\n                \"Projects\": {\n                  \"type\": \"directory\",\n                  \"modified\": \"Oct 1 00:00\",\n                  \"size\": 4096,\n                  \"contents\": {}\n                }\n              }\n            }\n          }\n        }\n      };\n    }\n\n    /**\n     * Load session data\n     */\n  }, {\n    key: \"loadSessionData\",\n    value: function loadSessionData() {\n      try {\n        var saved = localStorage.getItem('terminal_session');\n        if (saved) {\n          this.sessionData = JSON.parse(saved);\n          this.commandHistory = this.sessionData.commandHistory || [];\n          this.currentDirectory = this.sessionData.currentDirectory || '~';\n        }\n      } catch (error) {\n        console.warn('Failed to load session data:', error);\n      }\n    }\n\n    /**\n     * Load user preferences for terminal\n     */\n  }, {\n    key: \"loadUserPreferences\",\n    value: function loadUserPreferences() {\n      try {\n        var saved = localStorage.getItem('userPreferences');\n        if (saved) {\n          var prefs = JSON.parse(saved);\n          if (prefs.terminal) {\n            var terminal = prefs.terminal;\n\n            // Apply appearance settings\n            if (terminal.appearance) {\n              if (terminal.appearance.theme) {\n                // Store theme name for later application\n                this.currentTheme = terminal.appearance.theme;\n              }\n              if (terminal.appearance.font_family) {\n                this.config.fontFamily = terminal.appearance.font_family;\n              }\n              if (terminal.appearance.font_size) {\n                this.config.fontSize = parseInt(terminal.appearance.font_size);\n              }\n              if (terminal.appearance.line_height) {\n                this.config.lineHeight = parseFloat(terminal.appearance.line_height);\n              }\n              if (terminal.appearance.cursor_style) {\n                this.config.cursorStyle = terminal.appearance.cursor_style;\n              }\n              if (terminal.appearance.cursor_blink !== undefined) {\n                this.config.cursorBlink = terminal.appearance.cursor_blink;\n              }\n            }\n\n            // Apply behavior settings\n            if (terminal.behavior) {\n              if (terminal.behavior.history_size) {\n                this.config.scrollback = parseInt(terminal.behavior.history_size);\n              }\n              if (terminal.behavior.bell_sound !== undefined) {\n                this.config.bellSound = terminal.behavior.bell_sound;\n                this.config.bellStyle = terminal.behavior.bell_sound ? 'sound' : 'none';\n              }\n            }\n            console.log('‚úì Terminal preferences loaded:', terminal);\n          }\n        }\n      } catch (error) {\n        console.warn('Failed to load user preferences:', error);\n      }\n    }\n\n    /**\n     * Save session data\n     */\n  }, {\n    key: \"saveSessionData\",\n    value: function saveSessionData() {\n      try {\n        var sessionData = {\n          commandHistory: this.commandHistory,\n          currentDirectory: this.currentDirectory,\n          timestamp: Date.now()\n        };\n        localStorage.setItem('terminal_session', JSON.stringify(sessionData));\n      } catch (error) {\n        console.warn('Failed to save session data:', error);\n      }\n    }\n\n    /**\n     * Setup event listeners\n     */\n  }, {\n    key: \"setupEventListeners\",\n    value: function setupEventListeners() {\n      var _this5 = this;\n      // Window resize\n      window.addEventListener('resize', function () {\n        _this5.resize();\n      });\n\n      // App events\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].on('terminal:command', function (data) {\n        if (data.command) {\n          _this5.executeCommand(data.command);\n        }\n      });\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].on('terminal:clear', function () {\n        _this5.clear();\n        _this5.showPrompt();\n      });\n\n      // Preference changes\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].on('preference:changed', function (data) {\n        _this5.handlePreferenceChange(data);\n      });\n\n      // Initial preferences load\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].on('preferences:loaded', function (preferences) {\n        _this5.applyAllPreferences(preferences);\n      });\n    }\n\n    /**\n     * Handle preference changes\n     */\n  }, {\n    key: \"handlePreferenceChange\",\n    value: function handlePreferenceChange(data) {\n      var _this6 = this;\n      var path = data.path,\n        value = data.value,\n        preferences = data.preferences;\n      if (!path.startsWith('terminal.')) return;\n      console.log('Terminal preference changed:', path, value);\n      console.log('Terminal initialized:', this.isInitialized, 'Terminal exists:', !!this.terminal);\n\n      // Apply specific preference\n      if (path === 'terminal.appearance.theme') {\n        this.applyTheme(value);\n      } else if (path === 'terminal.appearance.font_family') {\n        this.config.fontFamily = value;\n        if (this.terminal) {\n          this.terminal.options.fontFamily = value;\n        }\n      } else if (path === 'terminal.appearance.font_size') {\n        this.config.fontSize = parseInt(value);\n        if (this.terminal) {\n          this.terminal.options.fontSize = parseInt(value);\n        }\n      } else if (path === 'terminal.appearance.line_height') {\n        this.config.lineHeight = parseFloat(value);\n        if (this.terminal) {\n          this.terminal.options.lineHeight = parseFloat(value);\n        }\n      } else if (path === 'terminal.appearance.cursor_style') {\n        this.config.cursorStyle = value;\n        if (this.terminal) {\n          this.terminal.options.cursorStyle = value;\n          // Force cursor refresh\n          this.terminal.refresh(0, this.terminal.rows - 1);\n        }\n      } else if (path === 'terminal.appearance.cursor_blink') {\n        this.config.cursorBlink = value;\n        if (this.terminal) {\n          this.terminal.options.cursorBlink = value;\n          // Force cursor refresh\n          this.terminal.refresh(0, this.terminal.rows - 1);\n        }\n      } else if (path === 'terminal.behavior.history_size') {\n        this.config.scrollback = parseInt(value);\n        if (this.terminal) {\n          this.terminal.options.scrollback = parseInt(value);\n        }\n      } else if (path === 'terminal.behavior.bell_sound') {\n        this.config.bellSound = value;\n        if (this.terminal) {\n          this.terminal.options.bellStyle = value ? 'sound' : 'none';\n        }\n      }\n\n      // Trigger resize to apply font/line height changes\n      if (path.includes('font') || path.includes('size') || path.includes('line_height')) {\n        setTimeout(function () {\n          return _this6.resize();\n        }, 100);\n      }\n    }\n\n    /**\n     * Apply all preferences at once\n     */\n  }, {\n    key: \"applyAllPreferences\",\n    value: function applyAllPreferences(preferences) {\n      var _this7 = this;\n      if (!(preferences !== null && preferences !== void 0 && preferences.terminal)) return;\n      var terminal = preferences.terminal;\n\n      // Apply appearance\n      if (terminal.appearance) {\n        if (terminal.appearance.theme) {\n          this.applyTheme(terminal.appearance.theme);\n        }\n        if (terminal.appearance.font_family) {\n          this.config.fontFamily = terminal.appearance.font_family;\n          if (this.terminal) {\n            this.terminal.options.fontFamily = terminal.appearance.font_family;\n          }\n        }\n        if (terminal.appearance.font_size) {\n          this.config.fontSize = parseInt(terminal.appearance.font_size);\n          if (this.terminal) {\n            this.terminal.options.fontSize = parseInt(terminal.appearance.font_size);\n          }\n        }\n        if (terminal.appearance.line_height) {\n          this.config.lineHeight = parseFloat(terminal.appearance.line_height);\n          if (this.terminal) {\n            this.terminal.options.lineHeight = parseFloat(terminal.appearance.line_height);\n          }\n        }\n        if (terminal.appearance.cursor_style) {\n          this.config.cursorStyle = terminal.appearance.cursor_style;\n          if (this.terminal) {\n            this.terminal.options.cursorStyle = terminal.appearance.cursor_style;\n          }\n        }\n        if (terminal.appearance.cursor_blink !== undefined) {\n          this.config.cursorBlink = terminal.appearance.cursor_blink;\n          if (this.terminal) {\n            this.terminal.options.cursorBlink = terminal.appearance.cursor_blink;\n          }\n        }\n      }\n\n      // Apply behavior\n      if (terminal.behavior) {\n        if (terminal.behavior.history_size) {\n          this.config.scrollback = parseInt(terminal.behavior.history_size);\n          if (this.terminal) {\n            this.terminal.options.scrollback = parseInt(terminal.behavior.history_size);\n          }\n        }\n        if (terminal.behavior.bell_sound !== undefined) {\n          this.config.bellSound = terminal.behavior.bell_sound;\n          if (this.terminal) {\n            this.terminal.options.bellStyle = terminal.behavior.bell_sound ? 'sound' : 'none';\n          }\n        }\n      }\n\n      // Trigger resize to apply changes\n      setTimeout(function () {\n        return _this7.resize();\n      }, 100);\n      console.log('All terminal preferences applied');\n    }\n\n    /**\n     * Apply terminal theme\n     */\n  }, {\n    key: \"applyTheme\",\n    value: function applyTheme(themeName) {\n      console.log('Applying theme:', themeName);\n      var theme = _themes_TerminalThemes_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"][themeName] || _themes_TerminalThemes_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"][\"default\"];\n      if (!theme) {\n        console.error('Theme not found:', themeName);\n        return;\n      }\n      if (this.terminal) {\n        // Store current cursor settings to preserve them\n        var cursorStyle = this.terminal.options.cursorStyle || this.config.cursorStyle;\n        var cursorBlink = this.terminal.options.cursorBlink !== undefined ? this.terminal.options.cursorBlink : this.config.cursorBlink;\n\n        // Update config theme (only color-related properties)\n        Object.assign(this.config.theme, theme);\n\n        // Apply theme to terminal\n        this.terminal.options.theme = this.config.theme;\n\n        // Restore cursor settings (theme shouldn't affect these)\n        this.terminal.options.cursorStyle = cursorStyle;\n        this.terminal.options.cursorBlink = cursorBlink;\n\n        // Trigger refresh to apply theme immediately\n        this.terminal.refresh(0, this.terminal.rows - 1);\n        console.log(\"\\u2713 Terminal theme applied: \".concat(themeName, \" (\").concat(theme.name, \")\"));\n        console.log('  Cursor preserved:', {\n          style: cursorStyle,\n          blink: cursorBlink\n        });\n      } else {\n        console.warn('Terminal not initialized yet, theme will be applied on init');\n      }\n    }\n\n    /**\n     * Show error fallback\n     */\n  }, {\n    key: \"showError\",\n    value: function showError(message) {\n      if (this.container) {\n        this.container.innerHTML = \"\\n                <div style=\\\"\\n                    padding: 2rem;\\n                    text-align: center;\\n                    color: #ff073a;\\n                    font-family: monospace;\\n                    background: #000;\\n                    height: 100%;\\n                    display: flex;\\n                    align-items: center;\\n                    justify-content: center;\\n                \\\">\\n                    <div>\\n                        <h3>Terminal Error</h3>\\n                        <p>\".concat(message, \"</p>\\n                        <button onclick=\\\"location.reload()\\\" style=\\\"\\n                            background: #00ff41;\\n                            color: #000;\\n                            border: none;\\n                            padding: 8px 16px;\\n                            margin-top: 1rem;\\n                            cursor: pointer;\\n                        \\\">Reload</button>\\n                    </div>\\n                </div>\\n            \");\n      }\n    }\n\n    /**\n     * Destroy terminal and clean up\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.terminal) {\n        this.terminal.dispose();\n      }\n      this.saveSessionData();\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].off('terminal:command');\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].off('terminal:clear');\n      this.terminal = null;\n      this.container = null;\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Terminal);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6796\n");

/***/ }),

/***/ 3113:
/*!***********************************************************************!*\
  !*** ./resources/js/components/terminal/commands/AlienBootCommand.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n/**\n * AlienBootCommand - Show ABDULMELINK boot screen\n */\nvar AlienBootCommand = /*#__PURE__*/function () {\n  function AlienBootCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, AlienBootCommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(AlienBootCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        var terminalWindow, originalZIndex, AlienBootScreenModule, AlienBootScreen, bootScreen;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              terminal.writeln('');\n              terminal.writeInfo('Initiating ABDULMELINK boot sequence...');\n\n              // Get terminal window for z-index manipulation\n              terminalWindow = terminal.container.closest('.LinkOS-window');\n              originalZIndex = terminalWindow ? terminalWindow.style.zIndex : null; // Dynamically import AlienBootScreen\n              _context.prev = 4;\n              // Lower terminal z-index temporarily so boot screen appears on top\n              if (terminalWindow) {\n                terminalWindow.style.zIndex = '1000';\n              }\n              _context.next = 8;\n              return __webpack_require__.e(/*! import() */ \"resources_js_components_AlienBootScreen_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../AlienBootScreen.js */ 6738));\n            case 8:\n              AlienBootScreenModule = _context.sent;\n              AlienBootScreen = AlienBootScreenModule[\"default\"];\n              bootScreen = new AlienBootScreen();\n              _context.next = 13;\n              return bootScreen.show(terminal.soundService);\n            case 13:\n              // Restore terminal z-index after boot\n              if (terminalWindow) {\n                terminalWindow.style.zIndex = originalZIndex || '';\n              }\n              terminal.writeln('');\n              terminal.writeSuccess('‚úì Boot sequence complete');\n              terminal.writeInfo('System online - ABDULMELINK operational');\n              terminal.writeln('');\n              _context.next = 24;\n              break;\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](4);\n              // Restore z-index even on error\n              if (terminalWindow) {\n                terminalWindow.style.zIndex = originalZIndex || '';\n              }\n              terminal.writeError('Failed to load boot screen: ' + _context.t0.message);\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[4, 20]]);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AlienBootCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzExMy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRkEsSUFHTUEsZ0JBQWdCO0VBQUEsU0FBQUEsaUJBQUE7SUFBQUMsaUZBQUEsT0FBQUQsZ0JBQUE7RUFBQTtFQUFBLE9BQUFFLDhFQUFBLENBQUFGLGdCQUFBO0lBQUFHLEdBQUE7SUFBQUMsS0FBQTtNQUFBLElBQUFDLFFBQUEsR0FBQUMsbUZBQUEsZUFBQUMsc0VBQUEsQ0FDbEIsU0FBQUUsUUFBY0MsSUFBSSxFQUFFQyxRQUFRO1FBQUEsSUFBQUMsY0FBQSxFQUFBQyxjQUFBLEVBQUFDLHFCQUFBLEVBQUFDLGVBQUEsRUFBQUMsVUFBQTtRQUFBLE9BQUFULHNFQUFBLFVBQUFXLFNBQUFDLFFBQUE7VUFBQSxrQkFBQUEsUUFBQSxDQUFBQyxJQUFBLEdBQUFELFFBQUEsQ0FBQUUsSUFBQTtZQUFBO2NBQ3hCVixRQUFRLENBQUNXLE9BQU8sQ0FBQyxFQUFFLENBQUM7Y0FDcEJYLFFBQVEsQ0FBQ1ksU0FBUyxDQUFDLHlDQUF5QyxDQUFDOztjQUU3RDtjQUNNWCxjQUFjLEdBQUdELFFBQVEsQ0FBQ2EsU0FBUyxDQUFDQyxPQUFPLENBQUMsZ0JBQWdCLENBQUM7Y0FDN0RaLGNBQWMsR0FBR0QsY0FBYyxHQUFHQSxjQUFjLENBQUNjLEtBQUssQ0FBQ0MsTUFBTSxHQUFHLElBQUksRUFFMUU7Y0FBQVIsUUFBQSxDQUFBQyxJQUFBO2NBRUk7Y0FDQSxJQUFJUixjQUFjLEVBQUU7Z0JBQ2hCQSxjQUFjLENBQUNjLEtBQUssQ0FBQ0MsTUFBTSxHQUFHLE1BQU07Y0FDeEM7Y0FBQ1IsUUFBQSxDQUFBRSxJQUFBO2NBQUEsT0FFbUMsNktBQWtDO1lBQUE7Y0FBaEVQLHFCQUFxQixHQUFBSyxRQUFBLENBQUFTLElBQUE7Y0FDckJiLGVBQWUsR0FBR0QscUJBQXFCLFdBQVE7Y0FFL0NFLFVBQVUsR0FBRyxJQUFJRCxlQUFlLENBQUMsQ0FBQztjQUFBSSxRQUFBLENBQUFFLElBQUE7Y0FBQSxPQUNsQ0wsVUFBVSxDQUFDYSxJQUFJLENBQUNsQixRQUFRLENBQUNtQixZQUFZLENBQUM7WUFBQTtjQUU1QztjQUNBLElBQUlsQixjQUFjLEVBQUU7Z0JBQ2hCQSxjQUFjLENBQUNjLEtBQUssQ0FBQ0MsTUFBTSxHQUFHZCxjQUFjLElBQUksRUFBRTtjQUN0RDtjQUVBRixRQUFRLENBQUNXLE9BQU8sQ0FBQyxFQUFFLENBQUM7Y0FDcEJYLFFBQVEsQ0FBQ29CLFlBQVksQ0FBQywwQkFBMEIsQ0FBQztjQUNqRHBCLFFBQVEsQ0FBQ1ksU0FBUyxDQUFDLHlDQUF5QyxDQUFDO2NBQzdEWixRQUFRLENBQUNXLE9BQU8sQ0FBQyxFQUFFLENBQUM7Y0FBQ0gsUUFBQSxDQUFBRSxJQUFBO2NBQUE7WUFBQTtjQUFBRixRQUFBLENBQUFDLElBQUE7Y0FBQUQsUUFBQSxDQUFBYSxFQUFBLEdBQUFiLFFBQUE7Y0FFckI7Y0FDQSxJQUFJUCxjQUFjLEVBQUU7Z0JBQ2hCQSxjQUFjLENBQUNjLEtBQUssQ0FBQ0MsTUFBTSxHQUFHZCxjQUFjLElBQUksRUFBRTtjQUN0RDtjQUNBRixRQUFRLENBQUNzQixVQUFVLENBQUMsOEJBQThCLEdBQUdkLFFBQUEsQ0FBQWEsRUFBQSxDQUFNRSxPQUFPLENBQUM7WUFBQztZQUFBO2NBQUEsT0FBQWYsUUFBQSxDQUFBZ0IsSUFBQTtVQUFBO1FBQUEsR0FBQTFCLE9BQUE7TUFBQSxDQUUzRTtNQUFBLFNBQUEyQixRQUFBQyxFQUFBLEVBQUFDLEdBQUE7UUFBQSxPQUFBakMsUUFBQSxDQUFBa0MsS0FBQSxPQUFBQyxTQUFBO01BQUE7TUFBQSxPQUFBSixPQUFBO0lBQUE7RUFBQTtBQUFBO0FBR0wsaUVBQWVwQyxnQkFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy90ZXJtaW5hbC9jb21tYW5kcy9BbGllbkJvb3RDb21tYW5kLmpzP2Q5ZjgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBbGllbkJvb3RDb21tYW5kIC0gU2hvdyBBQkRVTE1FTElOSyBib290IHNjcmVlblxuICovXG5jbGFzcyBBbGllbkJvb3RDb21tYW5kIHtcbiAgICBhc3luYyBleGVjdXRlKGFyZ3MsIHRlcm1pbmFsKSB7XG4gICAgICAgIHRlcm1pbmFsLndyaXRlbG4oJycpO1xuICAgICAgICB0ZXJtaW5hbC53cml0ZUluZm8oJ0luaXRpYXRpbmcgQUJEVUxNRUxJTksgYm9vdCBzZXF1ZW5jZS4uLicpO1xuICAgICAgICBcbiAgICAgICAgLy8gR2V0IHRlcm1pbmFsIHdpbmRvdyBmb3Igei1pbmRleCBtYW5pcHVsYXRpb25cbiAgICAgICAgY29uc3QgdGVybWluYWxXaW5kb3cgPSB0ZXJtaW5hbC5jb250YWluZXIuY2xvc2VzdCgnLkxpbmtPUy13aW5kb3cnKTtcbiAgICAgICAgY29uc3Qgb3JpZ2luYWxaSW5kZXggPSB0ZXJtaW5hbFdpbmRvdyA/IHRlcm1pbmFsV2luZG93LnN0eWxlLnpJbmRleCA6IG51bGw7XG4gICAgICAgIFxuICAgICAgICAvLyBEeW5hbWljYWxseSBpbXBvcnQgQWxpZW5Cb290U2NyZWVuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBMb3dlciB0ZXJtaW5hbCB6LWluZGV4IHRlbXBvcmFyaWx5IHNvIGJvb3Qgc2NyZWVuIGFwcGVhcnMgb24gdG9wXG4gICAgICAgICAgICBpZiAodGVybWluYWxXaW5kb3cpIHtcbiAgICAgICAgICAgICAgICB0ZXJtaW5hbFdpbmRvdy5zdHlsZS56SW5kZXggPSAnMTAwMCc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbnN0IEFsaWVuQm9vdFNjcmVlbk1vZHVsZSA9IGF3YWl0IGltcG9ydCgnLi4vLi4vQWxpZW5Cb290U2NyZWVuLmpzJyk7XG4gICAgICAgICAgICBjb25zdCBBbGllbkJvb3RTY3JlZW4gPSBBbGllbkJvb3RTY3JlZW5Nb2R1bGUuZGVmYXVsdDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgY29uc3QgYm9vdFNjcmVlbiA9IG5ldyBBbGllbkJvb3RTY3JlZW4oKTtcbiAgICAgICAgICAgIGF3YWl0IGJvb3RTY3JlZW4uc2hvdyh0ZXJtaW5hbC5zb3VuZFNlcnZpY2UpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBSZXN0b3JlIHRlcm1pbmFsIHotaW5kZXggYWZ0ZXIgYm9vdFxuICAgICAgICAgICAgaWYgKHRlcm1pbmFsV2luZG93KSB7XG4gICAgICAgICAgICAgICAgdGVybWluYWxXaW5kb3cuc3R5bGUuekluZGV4ID0gb3JpZ2luYWxaSW5kZXggfHwgJyc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlbG4oJycpO1xuICAgICAgICAgICAgdGVybWluYWwud3JpdGVTdWNjZXNzKCfinJMgQm9vdCBzZXF1ZW5jZSBjb21wbGV0ZScpO1xuICAgICAgICAgICAgdGVybWluYWwud3JpdGVJbmZvKCdTeXN0ZW0gb25saW5lIC0gQUJEVUxNRUxJTksgb3BlcmF0aW9uYWwnKTtcbiAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlbG4oJycpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgLy8gUmVzdG9yZSB6LWluZGV4IGV2ZW4gb24gZXJyb3JcbiAgICAgICAgICAgIGlmICh0ZXJtaW5hbFdpbmRvdykge1xuICAgICAgICAgICAgICAgIHRlcm1pbmFsV2luZG93LnN0eWxlLnpJbmRleCA9IG9yaWdpbmFsWkluZGV4IHx8ICcnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGVybWluYWwud3JpdGVFcnJvcignRmFpbGVkIHRvIGxvYWQgYm9vdCBzY3JlZW46ICcgKyBlcnJvci5tZXNzYWdlKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQWxpZW5Cb290Q29tbWFuZDtcbiJdLCJuYW1lcyI6WyJBbGllbkJvb3RDb21tYW5kIiwiX2NsYXNzQ2FsbENoZWNrIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJfZXhlY3V0ZSIsIl9hc3luY1RvR2VuZXJhdG9yIiwiX3JlZ2VuZXJhdG9yUnVudGltZSIsIm1hcmsiLCJfY2FsbGVlIiwiYXJncyIsInRlcm1pbmFsIiwidGVybWluYWxXaW5kb3ciLCJvcmlnaW5hbFpJbmRleCIsIkFsaWVuQm9vdFNjcmVlbk1vZHVsZSIsIkFsaWVuQm9vdFNjcmVlbiIsImJvb3RTY3JlZW4iLCJ3cmFwIiwiX2NhbGxlZSQiLCJfY29udGV4dCIsInByZXYiLCJuZXh0Iiwid3JpdGVsbiIsIndyaXRlSW5mbyIsImNvbnRhaW5lciIsImNsb3Nlc3QiLCJzdHlsZSIsInpJbmRleCIsInNlbnQiLCJzaG93Iiwic291bmRTZXJ2aWNlIiwid3JpdGVTdWNjZXNzIiwidDAiLCJ3cml0ZUVycm9yIiwibWVzc2FnZSIsInN0b3AiLCJleGVjdXRlIiwiX3giLCJfeDIiLCJhcHBseSIsImFyZ3VtZW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3113\n");

/***/ }),

/***/ 4893:
/*!****************************************************************!*\
  !*** ./resources/js/components/terminal/commands/CDCommand.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n/**\n * CDCommand - Change directory\n */\nvar CDCommand = /*#__PURE__*/function () {\n  function CDCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, CDCommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(CDCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        var targetDir, path, newPath, pathToValidate, _terminal$fileSystem$, parts, current, _iterator, _step, part;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(args.length === 0)) {\n                _context.next = 4;\n                break;\n              }\n              // No arguments - go to home\n              terminal.currentDirectory = '~';\n              terminal.saveSessionData();\n              return _context.abrupt(\"return\");\n            case 4:\n              targetDir = args[0]; // Handle root directory\n              if (!(targetDir === '/')) {\n                _context.next = 8;\n                break;\n              }\n              terminal.writeError('cd: /: Permission denied (filesystem root not accessible)');\n              return _context.abrupt(\"return\");\n            case 8:\n              if (!(targetDir === '~' || targetDir === '/home' || targetDir === '$HOME')) {\n                _context.next = 12;\n                break;\n              }\n              terminal.currentDirectory = '~';\n              terminal.saveSessionData();\n              return _context.abrupt(\"return\");\n            case 12:\n              if (!(targetDir === '.')) {\n                _context.next = 14;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 14:\n              if (!(targetDir === '..')) {\n                _context.next = 18;\n                break;\n              }\n              terminal.navigateUp();\n              terminal.saveSessionData();\n              return _context.abrupt(\"return\");\n            case 18:\n              if (!targetDir.startsWith('~/')) {\n                _context.next = 32;\n                break;\n              }\n              path = targetDir.substring(2);\n              if (path) {\n                _context.next = 24;\n                break;\n              }\n              // Just ~/ means home\n              terminal.currentDirectory = '~';\n              _context.next = 30;\n              break;\n            case 24:\n              if (!terminal.validatePath(path)) {\n                _context.next = 28;\n                break;\n              }\n              terminal.currentDirectory = \"~/\".concat(path);\n              _context.next = 30;\n              break;\n            case 28:\n              terminal.writeError(\"cd: \".concat(targetDir, \": No such file or directory\"));\n              return _context.abrupt(\"return\");\n            case 30:\n              terminal.saveSessionData();\n              return _context.abrupt(\"return\");\n            case 32:\n              if (terminal.currentDirectory === '~') {\n                newPath = \"~/\".concat(targetDir);\n              } else {\n                newPath = \"\".concat(terminal.currentDirectory, \"/\").concat(targetDir);\n              }\n\n              // Validate the new path\n              pathToValidate = newPath === '~' ? '' : newPath.substring(2);\n              if (!terminal.validatePath(pathToValidate)) {\n                _context.next = 65;\n                break;\n              }\n              // Check if it's a directory, not a file\n              parts = pathToValidate.split('/').filter(function (p) {\n                return p;\n              });\n              current = (_terminal$fileSystem$ = terminal.fileSystem.home) === null || _terminal$fileSystem$ === void 0 || (_terminal$fileSystem$ = _terminal$fileSystem$.contents) === null || _terminal$fileSystem$ === void 0 || (_terminal$fileSystem$ = _terminal$fileSystem$.abdulmelik) === null || _terminal$fileSystem$ === void 0 ? void 0 : _terminal$fileSystem$.contents;\n              if (!(current && parts.length > 0)) {\n                _context.next = 61;\n                break;\n              }\n              _iterator = _createForOfIteratorHelper(parts);\n              _context.prev = 39;\n              _iterator.s();\n            case 41:\n              if ((_step = _iterator.n()).done) {\n                _context.next = 53;\n                break;\n              }\n              part = _step.value;\n              if (current[part]) {\n                _context.next = 45;\n                break;\n              }\n              return _context.abrupt(\"break\", 53);\n            case 45:\n              if (!(current[part].type === 'directory')) {\n                _context.next = 49;\n                break;\n              }\n              current = current[part].contents || {};\n              _context.next = 51;\n              break;\n            case 49:\n              // It's a file, not a directory\n              terminal.writeError(\"cd: \".concat(targetDir, \": Not a directory\"));\n              return _context.abrupt(\"return\");\n            case 51:\n              _context.next = 41;\n              break;\n            case 53:\n              _context.next = 58;\n              break;\n            case 55:\n              _context.prev = 55;\n              _context.t0 = _context[\"catch\"](39);\n              _iterator.e(_context.t0);\n            case 58:\n              _context.prev = 58;\n              _iterator.f();\n              return _context.finish(58);\n            case 61:\n              terminal.currentDirectory = newPath;\n              terminal.saveSessionData();\n              _context.next = 66;\n              break;\n            case 65:\n              terminal.writeError(\"cd: \".concat(targetDir, \": No such file or directory\"));\n            case 66:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[39, 55, 58, 61]]);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CDCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4893\n");

/***/ }),

/***/ 7700:
/*!*****************************************************************!*\
  !*** ./resources/js/components/terminal/commands/CatCommand.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n/**\n * CatCommand - Display file contents\n */\nvar CatCommand = /*#__PURE__*/function () {\n  function CatCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, CatCommand);\n    this.interrupted = false;\n    this.keyHandler = null;\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(CatCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        var fileName, currentPath, contents, fileItem, isAlienTheme, lines;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(args.length === 0)) {\n                _context.next = 4;\n                break;\n              }\n              terminal.writeError('cat: missing file operand');\n              terminal.writeInfo('Try \\'cat --help\\' for more information.');\n              return _context.abrupt(\"return\");\n            case 4:\n              fileName = args[0]; // Handle help flag\n              if (!(fileName === '--help' || fileName === '-h')) {\n                _context.next = 9;\n                break;\n              }\n              terminal.writeln('Usage: cat [FILE]...');\n              terminal.writeln('Concatenate FILE(s) to standard output.');\n              return _context.abrupt(\"return\");\n            case 9:\n              // Get file from current directory\n              currentPath = terminal.getCurrentPath();\n              contents = terminal.getDirectoryContents(currentPath);\n              if (!(!contents || !contents[fileName])) {\n                _context.next = 14;\n                break;\n              }\n              terminal.writeError(\"cat: \".concat(fileName, \": No such file or directory\"));\n              return _context.abrupt(\"return\");\n            case 14:\n              fileItem = contents[fileName];\n              if (!(fileItem.type === 'directory')) {\n                _context.next = 18;\n                break;\n              }\n              terminal.writeError(\"cat: \".concat(fileName, \": Is a directory\"));\n              return _context.abrupt(\"return\");\n            case 18:\n              if (fileItem.content) {\n                _context.next = 21;\n                break;\n              }\n              terminal.writeError(\"cat: \".concat(fileName, \": Permission denied or empty file\"));\n              return _context.abrupt(\"return\");\n            case 21:\n              // Check if alien theme for animated output\n              isAlienTheme = terminal.currentTheme === 'alien'; // Display file content\n              lines = fileItem.content.split('\\n');\n              if (!isAlienTheme) {\n                _context.next = 28;\n                break;\n              }\n              _context.next = 26;\n              return this.displayAlienStyle(lines, terminal);\n            case 26:\n              _context.next = 29;\n              break;\n            case 28:\n              // Normal theme: instant display\n              lines.forEach(function (line) {\n                return terminal.writeln(line);\n              });\n            case 29:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n    /**\n     * Display content with alien theme animation and sounds\n     */\n  }, {\n    key: \"displayAlienStyle\",\n    value: function () {\n      var _displayAlienStyle = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee2(lines, terminal) {\n        var _this = this;\n        var charDelay, _terminal$soundServic, _terminal$soundServic2, _terminal$soundServic3, _terminal$soundServic6, _terminal$soundServic7, _terminal$soundServic8, i, _terminal$soundServic5, line, j, _char, _terminal$soundServic4;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              charDelay = 15; // ms per character\n              // Reset interrupted flag\n              this.interrupted = false;\n\n              // Setup keyboard interrupt handler (Ctrl+C / ESC)\n              this.keyHandler = terminal.terminal.onData(function (key) {\n                if (key === '\\x03' || key === '\\x1b') {\n                  // Ctrl+C or ESC\n                  _this.interrupted = true;\n                }\n              });\n              _context2.prev = 3;\n              // Start: Play A4 (0.2s) then Db5 (0.1s)\n              (_terminal$soundServic = terminal.soundService) === null || _terminal$soundServic === void 0 || _terminal$soundServic.playAlienCatA4(0.6);\n              _context2.next = 7;\n              return this.delay(900);\n            case 7:\n              if (!this.interrupted) {\n                _context2.next = 9;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 9:\n              (_terminal$soundServic2 = terminal.soundService) === null || _terminal$soundServic2 === void 0 || _terminal$soundServic2.playAlienCatDb5(0.10);\n              _context2.next = 12;\n              return this.delay(100);\n            case 12:\n              if (!this.interrupted) {\n                _context2.next = 14;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 14:\n              (_terminal$soundServic3 = terminal.soundService) === null || _terminal$soundServic3 === void 0 || _terminal$soundServic3.playAlienCatLineBreak(0.10);\n              _context2.next = 17;\n              return this.delay(200);\n            case 17:\n              if (!this.interrupted) {\n                _context2.next = 19;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 19:\n              i = 0;\n            case 20:\n              if (!(i < lines.length)) {\n                _context2.next = 50;\n                break;\n              }\n              if (!this.interrupted) {\n                _context2.next = 23;\n                break;\n              }\n              return _context2.abrupt(\"break\", 50);\n            case 23:\n              line = lines[i]; // Type out character by character\n              j = 0;\n            case 25:\n              if (!(j < line.length)) {\n                _context2.next = 41;\n                break;\n              }\n              if (!this.interrupted) {\n                _context2.next = 28;\n                break;\n              }\n              return _context2.abrupt(\"break\", 41);\n            case 28:\n              _char = line[j];\n              terminal.write(_char);\n\n              // Check if character is whitespace\n              if (!(_char === ' ' || _char === '\\t')) {\n                _context2.next = 36;\n                break;\n              }\n              // Play A4 for 0.1s on whitespace\n              (_terminal$soundServic4 = terminal.soundService) === null || _terminal$soundServic4 === void 0 || _terminal$soundServic4.playAlienCatA4(0.05);\n              _context2.next = 34;\n              return this.delay(50);\n            case 34:\n              _context2.next = 38;\n              break;\n            case 36:\n              _context2.next = 38;\n              return this.delay(charDelay);\n            case 38:\n              j++;\n              _context2.next = 25;\n              break;\n            case 41:\n              if (!this.interrupted) {\n                _context2.next = 43;\n                break;\n              }\n              return _context2.abrupt(\"break\", 50);\n            case 43:\n              // Move to next line with newline\n              terminal.writeln('');\n\n              // Play F5 for 0.1s after each line\n              (_terminal$soundServic5 = terminal.soundService) === null || _terminal$soundServic5 === void 0 || _terminal$soundServic5.playAlienCatLineBreak(0.30);\n              _context2.next = 47;\n              return this.delay(300);\n            case 47:\n              i++;\n              _context2.next = 20;\n              break;\n            case 50:\n              if (!this.interrupted) {\n                _context2.next = 54;\n                break;\n              }\n              terminal.writeln('');\n              terminal.writeInfo('^C');\n              return _context2.abrupt(\"return\");\n            case 54:\n              // End: Play A4 (0.2s) then F5 (0.1s)\n              (_terminal$soundServic6 = terminal.soundService) === null || _terminal$soundServic6 === void 0 || _terminal$soundServic6.playAlienCatDb5(0.60);\n              _context2.next = 57;\n              return this.delay(900);\n            case 57:\n              if (!this.interrupted) {\n                _context2.next = 59;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 59:\n              (_terminal$soundServic7 = terminal.soundService) === null || _terminal$soundServic7 === void 0 || _terminal$soundServic7.playAlienCatA4(0.10);\n              _context2.next = 62;\n              return this.delay(100);\n            case 62:\n              if (!this.interrupted) {\n                _context2.next = 64;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 64:\n              (_terminal$soundServic8 = terminal.soundService) === null || _terminal$soundServic8 === void 0 || _terminal$soundServic8.playAlienCatLineBreak(0.10);\n              _context2.next = 67;\n              return this.delay(100);\n            case 67:\n              _context2.prev = 67;\n              // Always dispose of the key handler\n              if (this.keyHandler) {\n                this.keyHandler.dispose();\n                this.keyHandler = null;\n              }\n              return _context2.finish(67);\n            case 70:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[3,, 67, 70]]);\n      }));\n      function displayAlienStyle(_x3, _x4) {\n        return _displayAlienStyle.apply(this, arguments);\n      }\n      return displayAlienStyle;\n    }()\n    /**\n     * Helper function for delays\n     */\n  }, {\n    key: \"delay\",\n    value: function delay(ms) {\n      return new Promise(function (resolve) {\n        return setTimeout(resolve, ms);\n      });\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CatCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7700\n");

/***/ }),

/***/ 1455:
/*!*******************************************************************!*\
  !*** ./resources/js/components/terminal/commands/ClearCommand.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n/**\n * ClearCommand - Clear terminal screen\n */\nvar ClearCommand = /*#__PURE__*/function () {\n  function ClearCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, ClearCommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(ClearCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              terminal.clear();\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ClearCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ1NS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRkEsSUFHTUEsWUFBWTtFQUFBLFNBQUFBLGFBQUE7SUFBQUMsaUZBQUEsT0FBQUQsWUFBQTtFQUFBO0VBQUEsT0FBQUUsOEVBQUEsQ0FBQUYsWUFBQTtJQUFBRyxHQUFBO0lBQUFDLEtBQUE7TUFBQSxJQUFBQyxRQUFBLEdBQUFDLG1GQUFBLGVBQUFDLHNFQUFBLENBQ2QsU0FBQUUsUUFBY0MsSUFBSSxFQUFFQyxRQUFRO1FBQUEsT0FBQUosc0VBQUEsVUFBQU0sU0FBQUMsUUFBQTtVQUFBLGtCQUFBQSxRQUFBLENBQUFDLElBQUEsR0FBQUQsUUFBQSxDQUFBRSxJQUFBO1lBQUE7Y0FDeEJMLFFBQVEsQ0FBQ00sS0FBSyxDQUFDLENBQUM7WUFBQztZQUFBO2NBQUEsT0FBQUgsUUFBQSxDQUFBSSxJQUFBO1VBQUE7UUFBQSxHQUFBVCxPQUFBO01BQUEsQ0FDcEI7TUFBQSxTQUFBVSxRQUFBQyxFQUFBLEVBQUFDLEdBQUE7UUFBQSxPQUFBaEIsUUFBQSxDQUFBaUIsS0FBQSxPQUFBQyxTQUFBO01BQUE7TUFBQSxPQUFBSixPQUFBO0lBQUE7RUFBQTtBQUFBO0FBR0wsaUVBQWVuQixZQUFZIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvdGVybWluYWwvY29tbWFuZHMvQ2xlYXJDb21tYW5kLmpzPzllZmQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDbGVhckNvbW1hbmQgLSBDbGVhciB0ZXJtaW5hbCBzY3JlZW5cbiAqL1xuY2xhc3MgQ2xlYXJDb21tYW5kIHtcbiAgICBhc3luYyBleGVjdXRlKGFyZ3MsIHRlcm1pbmFsKSB7XG4gICAgICAgIHRlcm1pbmFsLmNsZWFyKCk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDbGVhckNvbW1hbmQ7XG4iXSwibmFtZXMiOlsiQ2xlYXJDb21tYW5kIiwiX2NsYXNzQ2FsbENoZWNrIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJfZXhlY3V0ZSIsIl9hc3luY1RvR2VuZXJhdG9yIiwiX3JlZ2VuZXJhdG9yUnVudGltZSIsIm1hcmsiLCJfY2FsbGVlIiwiYXJncyIsInRlcm1pbmFsIiwid3JhcCIsIl9jYWxsZWUkIiwiX2NvbnRleHQiLCJwcmV2IiwibmV4dCIsImNsZWFyIiwic3RvcCIsImV4ZWN1dGUiLCJfeCIsIl94MiIsImFwcGx5IiwiYXJndW1lbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1455\n");

/***/ }),

/***/ 6496:
/*!******************************************************************!*\
  !*** ./resources/js/components/terminal/commands/ExitCommand.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _EventBus_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../EventBus.js */ 947);\n\n\n/**\n * ExitCommand - Exit terminal or alien mode\n */\n\nvar ExitCommand = /*#__PURE__*/function () {\n  function ExitCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, ExitCommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(ExitCommand, [{\n    key: \"execute\",\n    value: function execute(args, terminal) {\n      terminal.writeln('');\n\n      // Check if we're in alien mode\n      if (window.alienTerminalActive) {\n        terminal.writeInfo('Exiting ABDULMELINK system...');\n        terminal.writeln('');\n\n        // Small delay for message to be visible\n        setTimeout(function () {\n          // Get the ThemeCommand instance to call exitAlienTerminal\n          var themeCommand = terminal.commandRegistry.get('theme');\n          if (themeCommand && themeCommand.exitAlienTerminal) {\n            themeCommand.exitAlienTerminal();\n          } else {\n            // Fallback: manually exit\n            if (window.alienTerminalContainer) {\n              window.alienTerminalContainer.remove();\n            }\n            window.alienTerminalActive = false;\n            window.alienTerminalInstance = null;\n            window.alienTerminalContainer = null;\n\n            // Restore desktop\n            var desktopContainer = document.getElementById('desktop');\n            if (desktopContainer) {\n              desktopContainer.style.display = '';\n            }\n            var dockContainer = document.querySelector('.dock');\n            if (dockContainer) {\n              dockContainer.style.display = '';\n            }\n\n            // Restore all windows\n            var allWindows = document.querySelectorAll('.LinkOS-window');\n            allWindows.forEach(function (win) {\n              win.style.display = '';\n            });\n          }\n        }, 500);\n      } else {\n        // Normal terminal mode - close the window via EventBus\n        terminal.writeInfo('Closing terminal...');\n        terminal.writeln('');\n        setTimeout(function () {\n          var terminalWindow = terminal.container.closest('.LinkOS-window');\n          if (terminalWindow) {\n            var _terminalWindow$id;\n            var windowId = (_terminalWindow$id = terminalWindow.id) === null || _terminalWindow$id === void 0 ? void 0 : _terminalWindow$id.replace('window-', '');\n            if (windowId) {\n              // Emit window close event so WindowManager can handle it properly\n              _EventBus_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].emit('window:close-requested', {\n                windowId: windowId\n              });\n            }\n          }\n        }, 300);\n      }\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ExitCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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YWwvY29tbWFuZHMvRXhpdENvbW1hbmQuanM/OTUzOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4aXRDb21tYW5kIC0gRXhpdCB0ZXJtaW5hbCBvciBhbGllbiBtb2RlXG4gKi9cbmltcG9ydCBFdmVudEJ1cyBmcm9tICcuLi8uLi9FdmVudEJ1cy5qcyc7XG5cbmNsYXNzIEV4aXRDb21tYW5kIHtcbiAgICBleGVjdXRlKGFyZ3MsIHRlcm1pbmFsKSB7XG4gICAgICAgIHRlcm1pbmFsLndyaXRlbG4oJycpO1xuICAgICAgICBcbiAgICAgICAgLy8gQ2hlY2sgaWYgd2UncmUgaW4gYWxpZW4gbW9kZVxuICAgICAgICBpZiAod2luZG93LmFsaWVuVGVybWluYWxBY3RpdmUpIHtcbiAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlSW5mbygnRXhpdGluZyBBQkRVTE1FTElOSyBzeXN0ZW0uLi4nKTtcbiAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlbG4oJycpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBTbWFsbCBkZWxheSBmb3IgbWVzc2FnZSB0byBiZSB2aXNpYmxlXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAvLyBHZXQgdGhlIFRoZW1lQ29tbWFuZCBpbnN0YW5jZSB0byBjYWxsIGV4aXRBbGllblRlcm1pbmFsXG4gICAgICAgICAgICAgICAgY29uc3QgdGhlbWVDb21tYW5kID0gdGVybWluYWwuY29tbWFuZFJlZ2lzdHJ5LmdldCgndGhlbWUnKTtcbiAgICAgICAgICAgICAgICBpZiAodGhlbWVDb21tYW5kICYmIHRoZW1lQ29tbWFuZC5leGl0QWxpZW5UZXJtaW5hbCkge1xuICAgICAgICAgICAgICAgICAgICB0aGVtZUNvbW1hbmQuZXhpdEFsaWVuVGVybWluYWwoKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBGYWxsYmFjazogbWFudWFsbHkgZXhpdFxuICAgICAgICAgICAgICAgICAgICBpZiAod2luZG93LmFsaWVuVGVybWluYWxDb250YWluZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5hbGllblRlcm1pbmFsQ29udGFpbmVyLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuYWxpZW5UZXJtaW5hbEFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuYWxpZW5UZXJtaW5hbEluc3RhbmNlID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmFsaWVuVGVybWluYWxDb250YWluZXIgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLy8gUmVzdG9yZSBkZXNrdG9wXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGRlc2t0b3BDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGVza3RvcCcpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZGVza3RvcENvbnRhaW5lcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVza3RvcENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gJyc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGRvY2tDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZG9jaycpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZG9ja0NvbnRhaW5lcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9ja0NvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gJyc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIC8vIFJlc3RvcmUgYWxsIHdpbmRvd3NcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYWxsV2luZG93cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5MaW5rT1Mtd2luZG93Jyk7XG4gICAgICAgICAgICAgICAgICAgIGFsbFdpbmRvd3MuZm9yRWFjaCh3aW4gPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2luLnN0eWxlLmRpc3BsYXkgPSAnJztcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgNTAwKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIE5vcm1hbCB0ZXJtaW5hbCBtb2RlIC0gY2xvc2UgdGhlIHdpbmRvdyB2aWEgRXZlbnRCdXNcbiAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlSW5mbygnQ2xvc2luZyB0ZXJtaW5hbC4uLicpO1xuICAgICAgICAgICAgdGVybWluYWwud3JpdGVsbignJyk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRlcm1pbmFsV2luZG93ID0gdGVybWluYWwuY29udGFpbmVyLmNsb3Nlc3QoJy5MaW5rT1Mtd2luZG93Jyk7XG4gICAgICAgICAgICAgICAgaWYgKHRlcm1pbmFsV2luZG93KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHdpbmRvd0lkID0gdGVybWluYWxXaW5kb3cuaWQ/LnJlcGxhY2UoJ3dpbmRvdy0nLCAnJyk7XG4gICAgICAgICAgICAgICAgICAgIGlmICh3aW5kb3dJZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gRW1pdCB3aW5kb3cgY2xvc2UgZXZlbnQgc28gV2luZG93TWFuYWdlciBjYW4gaGFuZGxlIGl0IHByb3Blcmx5XG4gICAgICAgICAgICAgICAgICAgICAgICBFdmVudEJ1cy5lbWl0KCd3aW5kb3c6Y2xvc2UtcmVxdWVzdGVkJywgeyB3aW5kb3dJZCB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIDMwMCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEV4aXRDb21tYW5kO1xuIl0sIm5hbWVzIjpbIkV2ZW50QnVzIiwiRXhpdENvbW1hbmQiLCJfY2xhc3NDYWxsQ2hlY2siLCJfY3JlYXRlQ2xhc3MiLCJrZXkiLCJ2YWx1ZSIsImV4ZWN1dGUiLCJhcmdzIiwidGVybWluYWwiLCJ3cml0ZWxuIiwid2luZG93IiwiYWxpZW5UZXJtaW5hbEFjdGl2ZSIsIndyaXRlSW5mbyIsInNldFRpbWVvdXQiLCJ0aGVtZUNvbW1hbmQiLCJjb21tYW5kUmVnaXN0cnkiLCJnZXQiLCJleGl0QWxpZW5UZXJtaW5hbCIsImFsaWVuVGVybWluYWxDb250YWluZXIiLCJyZW1vdmUiLCJhbGllblRlcm1pbmFsSW5zdGFuY2UiLCJkZXNrdG9wQ29udGFpbmVyIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInN0eWxlIiwiZGlzcGxheSIsImRvY2tDb250YWluZXIiLCJxdWVyeVNlbGVjdG9yIiwiYWxsV2luZG93cyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwid2luIiwidGVybWluYWxXaW5kb3ciLCJjb250YWluZXIiLCJjbG9zZXN0IiwiX3Rlcm1pbmFsV2luZG93JGlkIiwid2luZG93SWQiLCJpZCIsInJlcGxhY2UiLCJlbWl0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6496\n");

/***/ }),

/***/ 8097:
/*!*******************************************************************!*\
  !*** ./resources/js/components/terminal/commands/GamesCommand.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n/**\n * GamesCommand - Show available games\n */\nvar GamesCommand = /*#__PURE__*/function () {\n  function GamesCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, GamesCommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(GamesCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        var games;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              games = ['', '\\x1b[35m‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\\x1b[0m', '\\x1b[35m‚îÇ            Available Games              ‚îÇ\\x1b[0m', '\\x1b[35m‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\\x1b[0m', '', '  \\x1b[33msnake\\x1b[0m     - Classic snake game', '  \\x1b[33mtetris\\x1b[0m    - Block puzzle game', '  \\x1b[33mtyping\\x1b[0m    - Typing speed test', '  \\x1b[33m2048\\x1b[0m      - Number puzzle game', '', '\\x1b[36mTip: Press ESC or Ctrl+C to exit any game\\x1b[0m', ''];\n              games.forEach(function (line) {\n                return terminal.writeln(line);\n              });\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GamesCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODA5Ny5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRkEsSUFHTUEsWUFBWTtFQUFBLFNBQUFBLGFBQUE7SUFBQUMsaUZBQUEsT0FBQUQsWUFBQTtFQUFBO0VBQUEsT0FBQUUsOEVBQUEsQ0FBQUYsWUFBQTtJQUFBRyxHQUFBO0lBQUFDLEtBQUE7TUFBQSxJQUFBQyxRQUFBLEdBQUFDLG1GQUFBLGVBQUFDLHNFQUFBLENBQ2QsU0FBQUUsUUFBY0MsSUFBSSxFQUFFQyxRQUFRO1FBQUEsSUFBQUMsS0FBQTtRQUFBLE9BQUFMLHNFQUFBLFVBQUFPLFNBQUFDLFFBQUE7VUFBQSxrQkFBQUEsUUFBQSxDQUFBQyxJQUFBLEdBQUFELFFBQUEsQ0FBQUUsSUFBQTtZQUFBO2NBQ2xCTCxLQUFLLEdBQUcsQ0FDVixFQUFFLEVBQ0YsNERBQTRELEVBQzVELDREQUE0RCxFQUM1RCw0REFBNEQsRUFDNUQsRUFBRSxFQUNGLGlEQUFpRCxFQUNqRCxnREFBZ0QsRUFDaEQsZ0RBQWdELEVBQ2hELGlEQUFpRCxFQUNqRCxFQUFFLEVBQ0YsMERBQTBELEVBQzFELEVBQUUsQ0FDTDtjQUVEQSxLQUFLLENBQUNNLE9BQU8sQ0FBQyxVQUFBQyxJQUFJO2dCQUFBLE9BQUlSLFFBQVEsQ0FBQ1MsT0FBTyxDQUFDRCxJQUFJLENBQUM7Y0FBQSxFQUFDO1lBQUM7WUFBQTtjQUFBLE9BQUFKLFFBQUEsQ0FBQU0sSUFBQTtVQUFBO1FBQUEsR0FBQVosT0FBQTtNQUFBLENBQ2pEO01BQUEsU0FBQWEsUUFBQUMsRUFBQSxFQUFBQyxHQUFBO1FBQUEsT0FBQW5CLFFBQUEsQ0FBQW9CLEtBQUEsT0FBQUMsU0FBQTtNQUFBO01BQUEsT0FBQUosT0FBQTtJQUFBO0VBQUE7QUFBQTtBQUdMLGlFQUFldEIsWUFBWSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy9jb21wb25lbnRzL3Rlcm1pbmFsL2NvbW1hbmRzL0dhbWVzQ29tbWFuZC5qcz82MGYyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2FtZXNDb21tYW5kIC0gU2hvdyBhdmFpbGFibGUgZ2FtZXNcbiAqL1xuY2xhc3MgR2FtZXNDb21tYW5kIHtcbiAgICBhc3luYyBleGVjdXRlKGFyZ3MsIHRlcm1pbmFsKSB7XG4gICAgICAgIGNvbnN0IGdhbWVzID0gW1xuICAgICAgICAgICAgJycsXG4gICAgICAgICAgICAnXFx4MWJbMzVt4pWt4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pWuXFx4MWJbMG0nLFxuICAgICAgICAgICAgJ1xceDFiWzM1beKUgiAgICAgICAgICAgIEF2YWlsYWJsZSBHYW1lcyAgICAgICAgICAgICAg4pSCXFx4MWJbMG0nLFxuICAgICAgICAgICAgJ1xceDFiWzM1beKVsOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKVr1xceDFiWzBtJyxcbiAgICAgICAgICAgICcnLFxuICAgICAgICAgICAgJyAgXFx4MWJbMzNtc25ha2VcXHgxYlswbSAgICAgLSBDbGFzc2ljIHNuYWtlIGdhbWUnLFxuICAgICAgICAgICAgJyAgXFx4MWJbMzNtdGV0cmlzXFx4MWJbMG0gICAgLSBCbG9jayBwdXp6bGUgZ2FtZScsXG4gICAgICAgICAgICAnICBcXHgxYlszM210eXBpbmdcXHgxYlswbSAgICAtIFR5cGluZyBzcGVlZCB0ZXN0JyxcbiAgICAgICAgICAgICcgIFxceDFiWzMzbTIwNDhcXHgxYlswbSAgICAgIC0gTnVtYmVyIHB1enpsZSBnYW1lJyxcbiAgICAgICAgICAgICcnLFxuICAgICAgICAgICAgJ1xceDFiWzM2bVRpcDogUHJlc3MgRVNDIG9yIEN0cmwrQyB0byBleGl0IGFueSBnYW1lXFx4MWJbMG0nLFxuICAgICAgICAgICAgJydcbiAgICAgICAgXTtcbiAgICAgICAgXG4gICAgICAgIGdhbWVzLmZvckVhY2gobGluZSA9PiB0ZXJtaW5hbC53cml0ZWxuKGxpbmUpKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEdhbWVzQ29tbWFuZDtcbiJdLCJuYW1lcyI6WyJHYW1lc0NvbW1hbmQiLCJfY2xhc3NDYWxsQ2hlY2siLCJfY3JlYXRlQ2xhc3MiLCJrZXkiLCJ2YWx1ZSIsIl9leGVjdXRlIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJfcmVnZW5lcmF0b3JSdW50aW1lIiwibWFyayIsIl9jYWxsZWUiLCJhcmdzIiwidGVybWluYWwiLCJnYW1lcyIsIndyYXAiLCJfY2FsbGVlJCIsIl9jb250ZXh0IiwicHJldiIsIm5leHQiLCJmb3JFYWNoIiwibGluZSIsIndyaXRlbG4iLCJzdG9wIiwiZXhlY3V0ZSIsIl94IiwiX3gyIiwiYXBwbHkiLCJhcmd1bWVudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8097\n");

/***/ }),

/***/ 2805:
/*!******************************************************************!*\
  !*** ./resources/js/components/terminal/commands/HelpCommand.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n/**\n * HelpCommand - Display available terminal commands\n */\nvar HelpCommand = /*#__PURE__*/function () {\n  function HelpCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, HelpCommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(HelpCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        var commands;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              commands = ['', '\\x1b[32m‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\\x1b[0m', '\\x1b[32m‚îÇ          Available Commands             ‚îÇ\\x1b[0m', '\\x1b[32m‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\\x1b[0m', '', '\\x1b[36mNavigation:\\x1b[0m', '  \\x1b[33mls\\x1b[0m        List directory contents', '  \\x1b[33mpwd\\x1b[0m       Print working directory', '  \\x1b[33mcd\\x1b[0m        Change directory', '  \\x1b[33mcat\\x1b[0m       Display file contents', '', '\\x1b[36mSystem Info:\\x1b[0m', '  \\x1b[33mwhoami\\x1b[0m    Display user information', '  \\x1b[33mneofetch\\x1b[0m  Display system information', '', '\\x1b[36mUtilities:\\x1b[0m', '  \\x1b[33mhelp\\x1b[0m      Show this help message', '  \\x1b[33mclear\\x1b[0m     Clear the terminal', '  \\x1b[33mtheme\\x1b[0m     Change terminal theme', '  \\x1b[33msound\\x1b[0m     Control sound effects', '  \\x1b[33malienboot\\x1b[0m Show ABDULMELINK boot screen', '  \\x1b[33mexit\\x1b[0m      Close terminal window', '', '\\x1b[36mGames:\\x1b[0m', '  \\x1b[33mgames\\x1b[0m     Show available games', '  \\x1b[33msnake\\x1b[0m     Classic snake game', '  \\x1b[33mtetris\\x1b[0m    Block puzzle game', '  \\x1b[33mtyping\\x1b[0m    Typing speed test', '  \\x1b[33m2048\\x1b[0m      Number puzzle game', ''];\n              commands.forEach(function (line) {\n                return terminal.writeln(line);\n              });\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HelpCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjgwNS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRkEsSUFHTUEsV0FBVztFQUFBLFNBQUFBLFlBQUE7SUFBQUMsaUZBQUEsT0FBQUQsV0FBQTtFQUFBO0VBQUEsT0FBQUUsOEVBQUEsQ0FBQUYsV0FBQTtJQUFBRyxHQUFBO0lBQUFDLEtBQUE7TUFBQSxJQUFBQyxRQUFBLEdBQUFDLG1GQUFBLGVBQUFDLHNFQUFBLENBQ2IsU0FBQUUsUUFBY0MsSUFBSSxFQUFFQyxRQUFRO1FBQUEsSUFBQUMsUUFBQTtRQUFBLE9BQUFMLHNFQUFBLFVBQUFPLFNBQUFDLFFBQUE7VUFBQSxrQkFBQUEsUUFBQSxDQUFBQyxJQUFBLEdBQUFELFFBQUEsQ0FBQUUsSUFBQTtZQUFBO2NBQ2xCTCxRQUFRLEdBQUcsQ0FDYixFQUFFLEVBQ0YsNERBQTRELEVBQzVELDREQUE0RCxFQUM1RCw0REFBNEQsRUFDNUQsRUFBRSxFQUNGLDRCQUE0QixFQUM1QixvREFBb0QsRUFDcEQsb0RBQW9ELEVBQ3BELDZDQUE2QyxFQUM3QyxrREFBa0QsRUFDbEQsRUFBRSxFQUNGLDZCQUE2QixFQUM3QixxREFBcUQsRUFDckQsdURBQXVELEVBQ3ZELEVBQUUsRUFDRiwyQkFBMkIsRUFDM0IsbURBQW1ELEVBQ25ELCtDQUErQyxFQUMvQyxrREFBa0QsRUFDbEQsa0RBQWtELEVBQ2xELHlEQUF5RCxFQUN6RCxrREFBa0QsRUFDbEQsRUFBRSxFQUNGLHVCQUF1QixFQUN2QixpREFBaUQsRUFDakQsK0NBQStDLEVBQy9DLDhDQUE4QyxFQUM5Qyw4Q0FBOEMsRUFDOUMsK0NBQStDLEVBQy9DLEVBQUUsQ0FDTDtjQUVEQSxRQUFRLENBQUNNLE9BQU8sQ0FBQyxVQUFBQyxJQUFJO2dCQUFBLE9BQUlSLFFBQVEsQ0FBQ1MsT0FBTyxDQUFDRCxJQUFJLENBQUM7Y0FBQSxFQUFDO1lBQUM7WUFBQTtjQUFBLE9BQUFKLFFBQUEsQ0FBQU0sSUFBQTtVQUFBO1FBQUEsR0FBQVosT0FBQTtNQUFBLENBQ3BEO01BQUEsU0FBQWEsUUFBQUMsRUFBQSxFQUFBQyxHQUFBO1FBQUEsT0FBQW5CLFFBQUEsQ0FBQW9CLEtBQUEsT0FBQUMsU0FBQTtNQUFBO01BQUEsT0FBQUosT0FBQTtJQUFBO0VBQUE7QUFBQTtBQUdMLGlFQUFldEIsV0FBVyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy9jb21wb25lbnRzL3Rlcm1pbmFsL2NvbW1hbmRzL0hlbHBDb21tYW5kLmpzP2VjNTciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBIZWxwQ29tbWFuZCAtIERpc3BsYXkgYXZhaWxhYmxlIHRlcm1pbmFsIGNvbW1hbmRzXG4gKi9cbmNsYXNzIEhlbHBDb21tYW5kIHtcbiAgICBhc3luYyBleGVjdXRlKGFyZ3MsIHRlcm1pbmFsKSB7XG4gICAgICAgIGNvbnN0IGNvbW1hbmRzID0gW1xuICAgICAgICAgICAgJycsXG4gICAgICAgICAgICAnXFx4MWJbMzJt4pWt4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pWuXFx4MWJbMG0nLFxuICAgICAgICAgICAgJ1xceDFiWzMybeKUgiAgICAgICAgICBBdmFpbGFibGUgQ29tbWFuZHMgICAgICAgICAgICAg4pSCXFx4MWJbMG0nLFxuICAgICAgICAgICAgJ1xceDFiWzMybeKVsOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKVr1xceDFiWzBtJyxcbiAgICAgICAgICAgICcnLFxuICAgICAgICAgICAgJ1xceDFiWzM2bU5hdmlnYXRpb246XFx4MWJbMG0nLFxuICAgICAgICAgICAgJyAgXFx4MWJbMzNtbHNcXHgxYlswbSAgICAgICAgTGlzdCBkaXJlY3RvcnkgY29udGVudHMnLFxuICAgICAgICAgICAgJyAgXFx4MWJbMzNtcHdkXFx4MWJbMG0gICAgICAgUHJpbnQgd29ya2luZyBkaXJlY3RvcnknLFxuICAgICAgICAgICAgJyAgXFx4MWJbMzNtY2RcXHgxYlswbSAgICAgICAgQ2hhbmdlIGRpcmVjdG9yeScsXG4gICAgICAgICAgICAnICBcXHgxYlszM21jYXRcXHgxYlswbSAgICAgICBEaXNwbGF5IGZpbGUgY29udGVudHMnLFxuICAgICAgICAgICAgJycsXG4gICAgICAgICAgICAnXFx4MWJbMzZtU3lzdGVtIEluZm86XFx4MWJbMG0nLFxuICAgICAgICAgICAgJyAgXFx4MWJbMzNtd2hvYW1pXFx4MWJbMG0gICAgRGlzcGxheSB1c2VyIGluZm9ybWF0aW9uJyxcbiAgICAgICAgICAgICcgIFxceDFiWzMzbW5lb2ZldGNoXFx4MWJbMG0gIERpc3BsYXkgc3lzdGVtIGluZm9ybWF0aW9uJyxcbiAgICAgICAgICAgICcnLFxuICAgICAgICAgICAgJ1xceDFiWzM2bVV0aWxpdGllczpcXHgxYlswbScsXG4gICAgICAgICAgICAnICBcXHgxYlszM21oZWxwXFx4MWJbMG0gICAgICBTaG93IHRoaXMgaGVscCBtZXNzYWdlJyxcbiAgICAgICAgICAgICcgIFxceDFiWzMzbWNsZWFyXFx4MWJbMG0gICAgIENsZWFyIHRoZSB0ZXJtaW5hbCcsXG4gICAgICAgICAgICAnICBcXHgxYlszM210aGVtZVxceDFiWzBtICAgICBDaGFuZ2UgdGVybWluYWwgdGhlbWUnLFxuICAgICAgICAgICAgJyAgXFx4MWJbMzNtc291bmRcXHgxYlswbSAgICAgQ29udHJvbCBzb3VuZCBlZmZlY3RzJyxcbiAgICAgICAgICAgICcgIFxceDFiWzMzbWFsaWVuYm9vdFxceDFiWzBtIFNob3cgQUJEVUxNRUxJTksgYm9vdCBzY3JlZW4nLFxuICAgICAgICAgICAgJyAgXFx4MWJbMzNtZXhpdFxceDFiWzBtICAgICAgQ2xvc2UgdGVybWluYWwgd2luZG93JyxcbiAgICAgICAgICAgICcnLFxuICAgICAgICAgICAgJ1xceDFiWzM2bUdhbWVzOlxceDFiWzBtJyxcbiAgICAgICAgICAgICcgIFxceDFiWzMzbWdhbWVzXFx4MWJbMG0gICAgIFNob3cgYXZhaWxhYmxlIGdhbWVzJyxcbiAgICAgICAgICAgICcgIFxceDFiWzMzbXNuYWtlXFx4MWJbMG0gICAgIENsYXNzaWMgc25ha2UgZ2FtZScsXG4gICAgICAgICAgICAnICBcXHgxYlszM210ZXRyaXNcXHgxYlswbSAgICBCbG9jayBwdXp6bGUgZ2FtZScsXG4gICAgICAgICAgICAnICBcXHgxYlszM210eXBpbmdcXHgxYlswbSAgICBUeXBpbmcgc3BlZWQgdGVzdCcsXG4gICAgICAgICAgICAnICBcXHgxYlszM20yMDQ4XFx4MWJbMG0gICAgICBOdW1iZXIgcHV6emxlIGdhbWUnLFxuICAgICAgICAgICAgJydcbiAgICAgICAgXTtcbiAgICAgICAgXG4gICAgICAgIGNvbW1hbmRzLmZvckVhY2gobGluZSA9PiB0ZXJtaW5hbC53cml0ZWxuKGxpbmUpKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEhlbHBDb21tYW5kO1xuIl0sIm5hbWVzIjpbIkhlbHBDb21tYW5kIiwiX2NsYXNzQ2FsbENoZWNrIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJfZXhlY3V0ZSIsIl9hc3luY1RvR2VuZXJhdG9yIiwiX3JlZ2VuZXJhdG9yUnVudGltZSIsIm1hcmsiLCJfY2FsbGVlIiwiYXJncyIsInRlcm1pbmFsIiwiY29tbWFuZHMiLCJ3cmFwIiwiX2NhbGxlZSQiLCJfY29udGV4dCIsInByZXYiLCJuZXh0IiwiZm9yRWFjaCIsImxpbmUiLCJ3cml0ZWxuIiwic3RvcCIsImV4ZWN1dGUiLCJfeCIsIl94MiIsImFwcGx5IiwiYXJndW1lbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2805\n");

/***/ }),

/***/ 719:
/*!****************************************************************!*\
  !*** ./resources/js/components/terminal/commands/LSCommand.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ 9394);\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ 3453);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n/**\n * LSCommand - List directory contents\n */\nvar LSCommand = /*#__PURE__*/function () {\n  function LSCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this, LSCommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(LSCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().mark(function _callee(args, terminal) {\n        var flags, targetPath, _iterator, _step, arg, pathToCheck, currentPath, contents, parts, fileName, dirPath, parentContents;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              // Parse flags and target path\n              flags = {\n                longFormat: false,\n                showAll: false\n              };\n              targetPath = null;\n              _iterator = _createForOfIteratorHelper(args);\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  arg = _step.value;\n                  if (arg.startsWith('-')) {\n                    // Parse flags\n                    if (arg.includes('l')) flags.longFormat = true;\n                    if (arg.includes('a')) flags.showAll = true;\n                  } else {\n                    targetPath = arg;\n                  }\n                }\n\n                // Determine the actual path to list\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n              if (!targetPath) {\n                _context.next = 18;\n                break;\n              }\n              if (!targetPath.startsWith('~/')) {\n                _context.next = 9;\n                break;\n              }\n              pathToCheck = targetPath.substring(2);\n              _context.next = 16;\n              break;\n            case 9:\n              if (!targetPath.startsWith('/')) {\n                _context.next = 14;\n                break;\n              }\n              terminal.writeError(\"ls: cannot access '\".concat(targetPath, \"': No such file or directory\"));\n              return _context.abrupt(\"return\");\n            case 14:\n              // Relative path\n              currentPath = terminal.getCurrentPath();\n              pathToCheck = currentPath ? \"\".concat(currentPath, \"/\").concat(targetPath) : targetPath;\n            case 16:\n              _context.next = 19;\n              break;\n            case 18:\n              // No target specified, use current directory\n              pathToCheck = terminal.getCurrentPath();\n            case 19:\n              // Check if it's a file or directory\n              contents = terminal.getDirectoryContents(pathToCheck);\n              if (contents) {\n                // It's a directory, list its contents\n                this.listDirectory(contents, flags, terminal);\n              } else {\n                // Check if it's a file\n                parts = pathToCheck.split('/').filter(function (p) {\n                  return p;\n                });\n                fileName = parts.pop();\n                dirPath = parts.join('/');\n                parentContents = terminal.getDirectoryContents(dirPath);\n                if (parentContents && parentContents[fileName] && parentContents[fileName].type === 'file') {\n                  // It's a file, display it\n                  if (flags.longFormat) {\n                    this.displayLongFormat([{\n                      name: fileName,\n                      item: parentContents[fileName]\n                    }], terminal);\n                  } else {\n                    terminal.writeln(fileName);\n                  }\n                } else {\n                  terminal.writeError(\"ls: cannot access '\".concat(targetPath || pathToCheck, \"': No such file or directory\"));\n                }\n              }\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n    /**\n     * List directory contents\n     */\n  }, {\n    key: \"listDirectory\",\n    value: function listDirectory(contents, flags, terminal) {\n      if (Object.keys(contents).length === 0) {\n        return; // Empty directory\n      }\n\n      // Separate directories and files\n      var dirs = [];\n      var files = [];\n      for (var _i = 0, _Object$entries = Object.entries(contents); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_Object$entries[_i], 2),\n          name = _Object$entries$_i[0],\n          item = _Object$entries$_i[1];\n        // Skip hidden files unless -a flag\n        if (!flags.showAll && name.startsWith('.')) {\n          continue;\n        }\n        if (item.type === 'directory') {\n          dirs.push({\n            name: name,\n            item: item\n          });\n        } else {\n          files.push({\n            name: name,\n            item: item\n          });\n        }\n      }\n\n      // Sort alphabetically\n      dirs.sort(function (a, b) {\n        return a.name.localeCompare(b.name);\n      });\n      files.sort(function (a, b) {\n        return a.name.localeCompare(b.name);\n      });\n\n      // Display based on format\n      if (flags.longFormat) {\n        this.displayLongFormat([].concat(dirs, files), terminal);\n      } else {\n        this.displayShortFormat([].concat(dirs, files), terminal);\n      }\n    }\n\n    /**\n     * Display long format listing\n     */\n  }, {\n    key: \"displayLongFormat\",\n    value: function displayLongFormat(items, terminal) {\n      items.forEach(function (_ref) {\n        var name = _ref.name,\n          item = _ref.item;\n        var type = item.type === 'directory' ? 'd' : '-';\n        var permissions = 'rwxr-xr-x';\n        var size = String(item.size || 0).padStart(8);\n        var modified = item.modified || 'Jan 1 00:00';\n        var color = item.type === 'directory' ? '\\x1b[34m' : '\\x1b[0m';\n        terminal.writeln(\"\".concat(type).concat(permissions, \" 1 abdulmelik staff \").concat(size, \" \").concat(modified, \" \").concat(color).concat(name, \"\\x1B[0m\"));\n      });\n    }\n\n    /**\n     * Display short format (columns)\n     */\n  }, {\n    key: \"displayShortFormat\",\n    value: function displayShortFormat(items, terminal) {\n      var allItems = items.map(function (_ref2) {\n        var name = _ref2.name,\n          item = _ref2.item;\n        var color = item.type === 'directory' ? '\\x1b[34m' : '\\x1b[0m';\n        return {\n          display: \"\".concat(color).concat(name, \"\\x1B[0m\"),\n          actual: name\n        };\n      });\n      if (allItems.length === 0) return;\n\n      // Display in columns\n      var termWidth = terminal.terminal.cols;\n      var maxLen = Math.max.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(allItems.map(function (i) {\n        return i.actual.length;\n      }))) + 2;\n      var columns = Math.floor(termWidth / maxLen) || 1;\n      for (var i = 0; i < allItems.length; i += columns) {\n        var row = allItems.slice(i, i + columns);\n        var formattedRow = row.map(function (item, idx) {\n          var actualLen = item.actual.length;\n          var displayLen = item.display.length;\n          var padding = maxLen - actualLen;\n          return item.display + ' '.repeat(padding);\n        }).join('');\n        terminal.writeln(formattedRow);\n      }\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LSCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///719\n");

/***/ }),

/***/ 7302:
/*!**********************************************************************!*\
  !*** ./resources/js/components/terminal/commands/NeofetchCommand.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n/**\n * NeofetchCommand - Display system information\n */\nvar NeofetchCommand = /*#__PURE__*/function () {\n  function NeofetchCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, NeofetchCommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(NeofetchCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        var info;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              info = ['                   \\x1b[34m-`\\x1b[0m                    \\x1b[32mguest@abdulme.link\\x1b[0m', '                  \\x1b[34m.o+`\\x1b[0m                   \\x1b[32m-----------------\\x1b[0m', '                 \\x1b[34m`ooo/\\x1b[0m                   \\x1b[33mOS:\\x1b[0m Web Browser', '                \\x1b[34m`+oooo:\\x1b[0m                  \\x1b[33mBrowser:\\x1b[0m ' + this.getBrowserName(), '               \\x1b[34m`+oooooo:\\x1b[0m                 \\x1b[33mPlatform:\\x1b[0m ' + navigator.platform, '               \\x1b[34m-+oooooo+:\\x1b[0m                \\x1b[33mLanguage:\\x1b[0m ' + navigator.language, '             \\x1b[34m`/:-:++oooo+:\\x1b[0m               \\x1b[33mOnline:\\x1b[0m ' + navigator.onLine, '            \\x1b[34m`/++++/+++++++:\\x1b[0m              \\x1b[33mMemory:\\x1b[0m ' + (navigator.deviceMemory || 'Unknown') + 'GB', '           \\x1b[34m`/++++++++++++++:\\x1b[0m             \\x1b[33mCores:\\x1b[0m ' + navigator.hardwareConcurrency, '          \\x1b[34m`/+++ooooooooo+++/`\\x1b[0m            \\x1b[33mScreen:\\x1b[0m ' + screen.width + 'x' + screen.height, '         \\x1b[34m./ooosssso++osssssso+`\\x1b[0m          \\x1b[33mColors:\\x1b[0m 16777216', '        \\x1b[34m.oossssso-````/ossssss+`\\x1b[0m         \\x1b[33mTerminal:\\x1b[0m xterm.js', '       \\x1b[34m-osssssso.\\x1b[0m      \\x1b[34m:ssssssso.\\x1b[0m        \\x1b[33mShell:\\x1b[0m Web Terminal', '      \\x1b[34m:osssssss/\\x1b[0m        \\x1b[34mosssso+++.\\x1b[0m       \\x1b[33mUptime:\\x1b[0m ' + this.getUptime(), '     \\x1b[34m/ossssssss/\\x1b[0m        \\x1b[34m+ssssooo/-\\x1b[0m       ', '   \\x1b[34m`/ossssso+/:-\\x1b[0m        \\x1b[34m-:/+osssso+-\\x1b[0m     ', '  \\x1b[34m`+sso+:-`\\x1b[0m                 \\x1b[34m`.-/+oso:\\x1b[0m    ', ' \\x1b[34m`++:.\\x1b[0m                           \\x1b[34m`-/+/\\x1b[0m   ', ' \\x1b[34m.`\\x1b[0m                                 \\x1b[34m`/\\x1b[0m   '];\n              info.forEach(function (line) {\n                return terminal.writeln(line);\n              });\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n    /**\n     * Get browser name from user agent\n     */\n  }, {\n    key: \"getBrowserName\",\n    value: function getBrowserName() {\n      var ua = navigator.userAgent;\n      if (ua.includes('Chrome')) return 'Chrome';\n      if (ua.includes('Firefox')) return 'Firefox';\n      if (ua.includes('Safari')) return 'Safari';\n      if (ua.includes('Edge')) return 'Edge';\n      return 'Unknown';\n    }\n\n    /**\n     * Get formatted uptime\n     */\n  }, {\n    key: \"getUptime\",\n    value: function getUptime() {\n      var seconds = Math.floor(performance.now() / 1000);\n      var hours = Math.floor(seconds / 3600);\n      var minutes = Math.floor(seconds % 3600 / 60);\n      var secs = seconds % 60;\n      if (hours > 0) {\n        return \"\".concat(hours, \"h \").concat(minutes, \"m\");\n      } else if (minutes > 0) {\n        return \"\".concat(minutes, \"m \").concat(secs, \"s\");\n      } else {\n        return \"\".concat(secs, \"s\");\n      }\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NeofetchCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7302\n");

/***/ }),

/***/ 2541:
/*!*****************************************************************!*\
  !*** ./resources/js/components/terminal/commands/PWDCommand.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n/**\n * PWDCommand - Print working directory\n */\nvar PWDCommand = /*#__PURE__*/function () {\n  function PWDCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, PWDCommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(PWDCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              terminal.writeln(\"\\x1B[33m\".concat(terminal.currentDirectory, \"\\x1B[0m\"));\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PWDCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjU0MS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRkEsSUFHTUEsVUFBVTtFQUFBLFNBQUFBLFdBQUE7SUFBQUMsaUZBQUEsT0FBQUQsVUFBQTtFQUFBO0VBQUEsT0FBQUUsOEVBQUEsQ0FBQUYsVUFBQTtJQUFBRyxHQUFBO0lBQUFDLEtBQUE7TUFBQSxJQUFBQyxRQUFBLEdBQUFDLG1GQUFBLGVBQUFDLHNFQUFBLENBQ1osU0FBQUUsUUFBY0MsSUFBSSxFQUFFQyxRQUFRO1FBQUEsT0FBQUosc0VBQUEsVUFBQU0sU0FBQUMsUUFBQTtVQUFBLGtCQUFBQSxRQUFBLENBQUFDLElBQUEsR0FBQUQsUUFBQSxDQUFBRSxJQUFBO1lBQUE7Y0FDeEJMLFFBQVEsQ0FBQ00sT0FBTyxZQUFBQyxNQUFBLENBQVlQLFFBQVEsQ0FBQ1EsZ0JBQWdCLFlBQVMsQ0FBQztZQUFDO1lBQUE7Y0FBQSxPQUFBTCxRQUFBLENBQUFNLElBQUE7VUFBQTtRQUFBLEdBQUFYLE9BQUE7TUFBQSxDQUNuRTtNQUFBLFNBQUFZLFFBQUFDLEVBQUEsRUFBQUMsR0FBQTtRQUFBLE9BQUFsQixRQUFBLENBQUFtQixLQUFBLE9BQUFDLFNBQUE7TUFBQTtNQUFBLE9BQUFKLE9BQUE7SUFBQTtFQUFBO0FBQUE7QUFHTCxpRUFBZXJCLFVBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy90ZXJtaW5hbC9jb21tYW5kcy9QV0RDb21tYW5kLmpzPzgyNDMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBQV0RDb21tYW5kIC0gUHJpbnQgd29ya2luZyBkaXJlY3RvcnlcbiAqL1xuY2xhc3MgUFdEQ29tbWFuZCB7XG4gICAgYXN5bmMgZXhlY3V0ZShhcmdzLCB0ZXJtaW5hbCkge1xuICAgICAgICB0ZXJtaW5hbC53cml0ZWxuKGBcXHgxYlszM20ke3Rlcm1pbmFsLmN1cnJlbnREaXJlY3Rvcnl9XFx4MWJbMG1gKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBXRENvbW1hbmQ7XG4iXSwibmFtZXMiOlsiUFdEQ29tbWFuZCIsIl9jbGFzc0NhbGxDaGVjayIsIl9jcmVhdGVDbGFzcyIsImtleSIsInZhbHVlIiwiX2V4ZWN1dGUiLCJfYXN5bmNUb0dlbmVyYXRvciIsIl9yZWdlbmVyYXRvclJ1bnRpbWUiLCJtYXJrIiwiX2NhbGxlZSIsImFyZ3MiLCJ0ZXJtaW5hbCIsIndyYXAiLCJfY2FsbGVlJCIsIl9jb250ZXh0IiwicHJldiIsIm5leHQiLCJ3cml0ZWxuIiwiY29uY2F0IiwiY3VycmVudERpcmVjdG9yeSIsInN0b3AiLCJleGVjdXRlIiwiX3giLCJfeDIiLCJhcHBseSIsImFyZ3VtZW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2541\n");

/***/ }),

/***/ 4985:
/*!*******************************************************************!*\
  !*** ./resources/js/components/terminal/commands/SoundCommand.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n/**\n * SoundCommand - Control terminal sound effects\n */\nvar SoundCommand = /*#__PURE__*/function () {\n  function SoundCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, SoundCommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(SoundCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        var status, command, newState, stateText, volume, i;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (terminal.soundService) {\n                _context.next = 3;\n                break;\n              }\n              terminal.writeError('Sound service not available');\n              return _context.abrupt(\"return\");\n            case 3:\n              if (!(args.length === 0)) {\n                _context.next = 23;\n                break;\n              }\n              terminal.writeln('');\n              terminal.writeln('\\x1b[36m‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\\x1b[0m');\n              terminal.writeln('\\x1b[36m‚îÇ         Sound Settings                  ‚îÇ\\x1b[0m');\n              terminal.writeln('\\x1b[36m‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\\x1b[0m');\n              terminal.writeln('');\n              status = terminal.soundService.enabled ? '\\x1b[32mEnabled\\x1b[0m' : '\\x1b[31mDisabled\\x1b[0m';\n              terminal.writeln(\"  Status: \".concat(status));\n              terminal.writeln(\"  Volume: \".concat(Math.round(terminal.soundService.volume * 100), \"%\"));\n              terminal.writeln('');\n              terminal.writeln('\\x1b[36mCommands:\\x1b[0m');\n              terminal.writeln('  \\x1b[33msound on\\x1b[0m       Enable sound effects');\n              terminal.writeln('  \\x1b[33msound off\\x1b[0m      Disable sound effects');\n              terminal.writeln('  \\x1b[33msound toggle\\x1b[0m   Toggle sound on/off');\n              terminal.writeln('  \\x1b[33msound volume <0-100>\\x1b[0m  Set volume');\n              terminal.writeln('  \\x1b[33msound test\\x1b[0m     Play test beeps');\n              terminal.writeln('  \\x1b[33msound boot\\x1b[0m     Play boot sound');\n              terminal.writeln('  \\x1b[33msound typing\\x1b[0m   Play typing sounds');\n              terminal.writeln('');\n              return _context.abrupt(\"return\");\n            case 23:\n              command = args[0].toLowerCase();\n              _context.t0 = command;\n              _context.next = _context.t0 === 'on' ? 27 : _context.t0 === 'enable' ? 27 : _context.t0 === 'off' ? 32 : _context.t0 === 'disable' ? 32 : _context.t0 === 'toggle' ? 36 : _context.t0 === 'volume' ? 41 : _context.t0 === 'test' ? 52 : _context.t0 === 'boot' ? 57 : _context.t0 === 'typing' ? 60 : 63;\n              break;\n            case 27:\n              terminal.soundService.enabled = true;\n              terminal.soundService.savePreference();\n              terminal.writeSuccess('‚úì Sound effects enabled');\n              terminal.soundService.playBeep(terminal.currentTheme);\n              return _context.abrupt(\"break\", 65);\n            case 32:\n              terminal.soundService.enabled = false;\n              terminal.soundService.savePreference();\n              terminal.writeSuccess('‚úì Sound effects disabled');\n              return _context.abrupt(\"break\", 65);\n            case 36:\n              newState = terminal.soundService.toggle();\n              stateText = newState ? 'enabled' : 'disabled';\n              terminal.writeSuccess(\"\\u2713 Sound effects \".concat(stateText));\n              if (newState) {\n                terminal.soundService.playBeep(terminal.currentTheme);\n              }\n              return _context.abrupt(\"break\", 65);\n            case 41:\n              if (!(args.length < 2)) {\n                _context.next = 44;\n                break;\n              }\n              terminal.writeError('Usage: sound volume <0-100>');\n              return _context.abrupt(\"return\");\n            case 44:\n              volume = parseInt(args[1]);\n              if (!(isNaN(volume) || volume < 0 || volume > 100)) {\n                _context.next = 48;\n                break;\n              }\n              terminal.writeError('Volume must be between 0 and 100');\n              return _context.abrupt(\"return\");\n            case 48:\n              terminal.soundService.setVolume(volume / 100);\n              terminal.writeSuccess(\"\\u2713 Volume set to \".concat(volume, \"%\"));\n              terminal.soundService.playBeep(terminal.currentTheme);\n              return _context.abrupt(\"break\", 65);\n            case 52:\n              terminal.writeInfo('Playing test sounds...');\n              setTimeout(function () {\n                return terminal.soundService.playBeep(terminal.currentTheme);\n              }, 100);\n              setTimeout(function () {\n                return terminal.soundService.playBeep(terminal.currentTheme);\n              }, 400);\n              setTimeout(function () {\n                return terminal.soundService.playBeep(terminal.currentTheme);\n              }, 700);\n              return _context.abrupt(\"break\", 65);\n            case 57:\n              terminal.writeInfo(\"Playing \".concat(terminal.currentTheme, \" boot sequence...\"));\n              terminal.soundService.playBootSound(terminal.currentTheme);\n              return _context.abrupt(\"break\", 65);\n            case 60:\n              terminal.writeInfo('Playing typing sounds...');\n              for (i = 0; i < 10; i++) {\n                setTimeout(function () {\n                  terminal.soundService.playKeypressSound(terminal.currentTheme);\n                }, i * 100);\n              }\n              return _context.abrupt(\"break\", 65);\n            case 63:\n              terminal.writeError(\"sound: unknown command '\".concat(command, \"'\"));\n              terminal.writeInfo('Type \\'sound\\' for help');\n            case 65:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SoundCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4985\n");

/***/ }),

/***/ 4551:
/*!*******************************************************************!*\
  !*** ./resources/js/components/terminal/commands/ThemeCommand.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ 3453);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _themes_TerminalThemes_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../themes/TerminalThemes.js */ 59);\n\n\n\n\n\n\n\n/**\n * ThemeCommand - Change terminal theme\n */\nvar ThemeCommand = /*#__PURE__*/function () {\n  function ThemeCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, ThemeCommand);\n    this.themes = _themes_TerminalThemes_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(ThemeCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee(args, terminal) {\n        var _this = this;\n        var themeName, theme;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(args.length === 0)) {\n                _context.next = 11;\n                break;\n              }\n              terminal.writeln('');\n              terminal.writeln('\\x1b[36m‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\\x1b[0m');\n              terminal.writeln('\\x1b[36m‚îÇ          Available Themes               ‚îÇ\\x1b[0m');\n              terminal.writeln('\\x1b[36m‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\\x1b[0m');\n              terminal.writeln('');\n              Object.entries(this.themes).forEach(function (_ref) {\n                var _ref2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref, 2),\n                  key = _ref2[0],\n                  theme = _ref2[1];\n                terminal.writeln(\"  \\x1B[33m\".concat(key.padEnd(15), \"\\x1B[0m \").concat(theme.name));\n                terminal.writeln(\"  \".concat(''.padEnd(15), \" \\x1B[90m\").concat(theme.description, \"\\x1B[0m\"));\n                terminal.writeln('');\n              });\n              terminal.writeln('\\x1b[36mUsage:\\x1b[0m theme <name>');\n              terminal.writeln('\\x1b[36mExample:\\x1b[0m theme alien');\n              terminal.writeln('');\n              return _context.abrupt(\"return\");\n            case 11:\n              themeName = args[0].toLowerCase();\n              if (this.themes[themeName]) {\n                _context.next = 16;\n                break;\n              }\n              terminal.writeError(\"theme: '\".concat(themeName, \"' not found\"));\n              terminal.writeInfo('Available themes: ' + Object.keys(this.themes).join(', '));\n              return _context.abrupt(\"return\");\n            case 16:\n              // Apply theme\n              theme = this.themes[themeName];\n              if (!(terminal.terminal && terminal.terminal.options)) {\n                _context.next = 36;\n                break;\n              }\n              terminal.terminal.options.theme = theme;\n\n              // Update current theme in terminal\n              if (terminal.currentTheme !== undefined) {\n                terminal.currentTheme = themeName;\n              }\n\n              // Save to localStorage\n              try {\n                localStorage.setItem('terminal_theme', themeName);\n              } catch (e) {\n                console.warn('Failed to save theme preference:', e);\n              }\n\n              // Play theme-specific beep sound\n              if (terminal.soundService) {\n                terminal.soundService.playBeep(themeName);\n              }\n              terminal.writeSuccess(\"\\u2713 Theme changed to '\".concat(theme.name, \"'\"));\n\n              // Special handling for alien theme - create new fullscreen terminal\n              if (!(themeName === 'alien')) {\n                _context.next = 32;\n                break;\n              }\n              if (!window.alienTerminalActive) {\n                _context.next = 28;\n                break;\n              }\n              terminal.writeError('Already in alien mode');\n              terminal.writeInfo('Type \"exit\" or \"theme default\" to exit alien mode');\n              return _context.abrupt(\"return\");\n            case 28:\n              terminal.writeInfo('Activating ABDULMELINK interface...');\n\n              // Create new alien terminal and close current one\n              setTimeout(function () {\n                _this.createAlienTerminal(terminal);\n              }, 100);\n              _context.next = 34;\n              break;\n            case 32:\n              // Check if we're exiting from alien mode\n              if (window.alienTerminalActive) {\n                this.exitAlienTerminal();\n              }\n              terminal.writeInfo('Type \\'clear\\' to see theme changes');\n            case 34:\n              _context.next = 37;\n              break;\n            case 36:\n              terminal.writeError('Failed to apply theme');\n            case 37:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n    /**\n     * Create new alien fullscreen terminal\n     */\n  }, {\n    key: \"createAlienTerminal\",\n    value: function () {\n      var _createAlienTerminal = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee2(originalTerminal) {\n        var blackOverlay, desktopContainer, dockContainer, allWindows, AlienBootScreenModule, AlienBootScreen, bootScreen, alienContainer, contentWrapper, terminalContainer, scanlines, vignette, crtEffect, Terminal, alienTerminal;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              // Create black overlay FIRST to prevent any desktop flash\n              blackOverlay = document.createElement('div');\n              blackOverlay.style.cssText = \"\\n            position: fixed;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n            background: #000000;\\n            z-index: 9999998;\\n        \";\n              document.body.appendChild(blackOverlay);\n\n              // Hide all desktop elements immediately\n              desktopContainer = document.getElementById('desktop');\n              if (desktopContainer) {\n                desktopContainer.style.display = 'none';\n              }\n              dockContainer = document.querySelector('.dock');\n              if (dockContainer) {\n                dockContainer.style.display = 'none';\n              }\n\n              // Hide all windows\n              allWindows = document.querySelectorAll('.LinkOS-window');\n              allWindows.forEach(function (win) {\n                win.style.display = 'none';\n              });\n\n              // Show boot screen\n              _context2.prev = 9;\n              _context2.next = 12;\n              return __webpack_require__.e(/*! import() */ \"resources_js_components_AlienBootScreen_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../AlienBootScreen.js */ 6738));\n            case 12:\n              AlienBootScreenModule = _context2.sent;\n              AlienBootScreen = AlienBootScreenModule[\"default\"];\n              bootScreen = new AlienBootScreen();\n              _context2.next = 17;\n              return bootScreen.show(originalTerminal.soundService);\n            case 17:\n              _context2.next = 22;\n              break;\n            case 19:\n              _context2.prev = 19;\n              _context2.t0 = _context2[\"catch\"](9);\n              console.warn('Failed to load boot screen:', _context2.t0);\n            case 22:\n              // Remove black overlay now that boot is complete\n              if (blackOverlay && blackOverlay.parentNode) {\n                blackOverlay.parentNode.removeChild(blackOverlay);\n              }\n\n              // Create fullscreen alien terminal container\n              alienContainer = document.createElement('div');\n              alienContainer.id = 'alien-terminal-container';\n              alienContainer.className = 'alien-fullscreen';\n              alienContainer.style.cssText = \"\\n            position: fixed;\\n            top: 0;\\n            left: 0;\\n            width: 100vw;\\n            height: 100vh;\\n            background: #1a1a1a;\\n            z-index: 999999;\\n        \";\n\n              // Create terminal content wrapper\n              contentWrapper = document.createElement('div');\n              contentWrapper.className = 'window-content';\n              contentWrapper.style.cssText = \"\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n            background: #000000;\\n            padding: 40px;\\n            box-sizing: border-box;\\n        \";\n\n              // Create terminal container\n              terminalContainer = document.createElement('div');\n              terminalContainer.className = 'terminal-container';\n              terminalContainer.style.cssText = \"\\n            width: 100%;\\n            height: 100%;\\n            background: #000000;\\n        \";\n              contentWrapper.appendChild(terminalContainer);\n              alienContainer.appendChild(contentWrapper);\n\n              // Add CRT effects\n              scanlines = document.createElement('div');\n              scanlines.className = 'scanlines';\n              alienContainer.appendChild(scanlines);\n              vignette = document.createElement('div');\n              vignette.className = 'vignette';\n              alienContainer.appendChild(vignette);\n              crtEffect = document.createElement('div');\n              crtEffect.className = 'crt-effect';\n              alienContainer.appendChild(crtEffect);\n              document.body.appendChild(alienContainer);\n\n              // Create new terminal instance with alien theme (skip boot sound since boot screen already played it)\n              _context2.next = 47;\n              return Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../Terminal.js */ 6796));\n            case 47:\n              Terminal = _context2.sent[\"default\"];\n              alienTerminal = new Terminal(terminalContainer, {\n                skipBootSound: true\n              }); // Wait for terminal to initialize\n              _context2.next = 51;\n              return new Promise(function (resolve) {\n                var checkInit = setInterval(function () {\n                  if (alienTerminal.isInitialized) {\n                    clearInterval(checkInit);\n                    resolve();\n                  }\n                }, 50);\n              });\n            case 51:\n              // Apply alien theme to the xterm instance\n              if (alienTerminal.terminal && alienTerminal.terminal.options) {\n                alienTerminal.terminal.options.theme = this.themes.alien;\n                alienTerminal.currentTheme = 'alien';\n                localStorage.setItem('terminal_theme', 'alien');\n              }\n\n              // Store reference\n              window.alienTerminalActive = true;\n              window.alienTerminalInstance = alienTerminal;\n              window.alienTerminalContainer = alienContainer;\n\n              // Start ambient static for atmospheric effect\n              if (alienTerminal.soundService) {\n                setTimeout(function () {\n                  alienTerminal.soundService.startAmbientStatic();\n                }, 500); // Start after boot sound finishes\n              }\n\n              // Show welcome message\n              alienTerminal.writeln('');\n              alienTerminal.writeSuccess('‚úì ABDULMELINK system online');\n              alienTerminal.writeInfo('Type \"exit\" or \"theme default\" to exit alien mode');\n              alienTerminal.writeln('');\n              alienTerminal.showPrompt();\n            case 61:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[9, 19]]);\n      }));\n      function createAlienTerminal(_x3) {\n        return _createAlienTerminal.apply(this, arguments);\n      }\n      return createAlienTerminal;\n    }()\n    /**\n     * Exit alien terminal and restore normal desktop\n     */\n  }, {\n    key: \"exitAlienTerminal\",\n    value: function exitAlienTerminal() {\n      // Stop ambient static\n      if (window.alienTerminalInstance && window.alienTerminalInstance.soundService) {\n        window.alienTerminalInstance.soundService.stopAmbientStatic();\n      }\n      if (window.alienTerminalContainer) {\n        window.alienTerminalContainer.remove();\n      }\n      window.alienTerminalActive = false;\n      window.alienTerminalInstance = null;\n      window.alienTerminalContainer = null;\n\n      // Restore desktop\n      var desktopContainer = document.getElementById('desktop');\n      if (desktopContainer) {\n        desktopContainer.style.display = '';\n      }\n      var dockContainer = document.querySelector('.dock');\n      if (dockContainer) {\n        dockContainer.style.display = '';\n      }\n\n      // Restore all windows\n      var allWindows = document.querySelectorAll('.LinkOS-window');\n      allWindows.forEach(function (win) {\n        win.style.display = '';\n      });\n    }\n\n    /**\n     * Hide all desktop elements (deprecated - kept for compatibility)\n     */\n  }, {\n    key: \"hideDesktopElements\",\n    value: function hideDesktopElements(terminalWindow) {\n      // Hide desktop container\n      var desktopContainer = document.getElementById('desktop');\n      if (desktopContainer) {\n        desktopContainer.style.display = 'none';\n        desktopContainer.setAttribute('data-hidden-by-alien', 'true');\n      }\n\n      // Hide dock\n      var dockContainer = document.querySelector('.dock');\n      if (dockContainer) {\n        dockContainer.style.display = 'none';\n        dockContainer.setAttribute('data-hidden-by-alien', 'true');\n      }\n\n      // Hide all other windows except the terminal\n      var allWindows = document.querySelectorAll('.LinkOS-window');\n      allWindows.forEach(function (win) {\n        if (win !== terminalWindow) {\n          win.style.display = 'none';\n          win.setAttribute('data-hidden-by-alien', 'true');\n        }\n      });\n    }\n\n    /**\n     * Make terminal fullscreen and headless\n     */\n  }, {\n    key: \"makeTerminalFullscreen\",\n    value: function makeTerminalFullscreen(terminal) {\n      // Find the terminal window\n      var terminalWindow = terminal.container.closest('.LinkOS-window');\n      if (terminalWindow) {\n        terminalWindow.classList.add('alien-fullscreen');\n        terminalWindow.style.cssText = \"\\n                position: fixed !important;\\n                top: 0 !important;\\n                left: 0 !important;\\n                width: 100vw !important;\\n                height: 100vh !important;\\n                max-width: 100vw !important;\\n                max-height: 100vh !important;\\n                border: none !important;\\n                border-radius: 0 !important;\\n                box-shadow: none !important;\\n                z-index: 999999 !important;\\n            \";\n\n        // Titlebar already hidden, but ensure it stays hidden\n        var titlebar = terminalWindow.querySelector('.window-titlebar');\n        if (titlebar) {\n          titlebar.style.display = 'none';\n        }\n\n        // Make terminal container fill window\n        var terminalContainer = terminalWindow.querySelector('.terminal-container');\n        if (terminalContainer) {\n          terminalContainer.style.cssText = \"\\n                    width: 100% !important;\\n                    height: 100% !important;\\n                \";\n        }\n\n        // Add CRT monitor effects (scanlines, vignette, pixel grid)\n        if (!terminalWindow.querySelector('.scanlines')) {\n          var scanlines = document.createElement('div');\n          scanlines.className = 'scanlines';\n          terminalWindow.appendChild(scanlines);\n        }\n        if (!terminalWindow.querySelector('.vignette')) {\n          var vignette = document.createElement('div');\n          vignette.className = 'vignette';\n          terminalWindow.appendChild(vignette);\n        }\n        if (!terminalWindow.querySelector('.crt-effect')) {\n          var crtEffect = document.createElement('div');\n          crtEffect.className = 'crt-effect';\n          terminalWindow.appendChild(crtEffect);\n        }\n\n        // Trigger resize\n        if (terminal.fitAddon) {\n          setTimeout(function () {\n            return terminal.fitAddon.fit();\n          }, 100);\n        }\n      }\n    }\n\n    /**\n     * Restore normal terminal window\n     */\n  }, {\n    key: \"restoreTerminalWindow\",\n    value: function restoreTerminalWindow(terminal) {\n      var terminalWindow = terminal.container.closest('.LinkOS-window');\n      if (terminalWindow && terminalWindow.classList.contains('alien-fullscreen')) {\n        // Remove alien fullscreen class (this handles most CSS resets)\n        terminalWindow.classList.remove('alien-fullscreen');\n\n        // Reset specific inline styles that were added for fullscreen\n        terminalWindow.style.position = '';\n        terminalWindow.style.top = '';\n        terminalWindow.style.left = '';\n        terminalWindow.style.width = '';\n        terminalWindow.style.height = '';\n        terminalWindow.style.maxWidth = '';\n        terminalWindow.style.maxHeight = '';\n        terminalWindow.style.border = '';\n        terminalWindow.style.borderRadius = '';\n        terminalWindow.style.boxShadow = '';\n        terminalWindow.style.zIndex = '';\n\n        // Show window titlebar\n        var titlebar = terminalWindow.querySelector('.window-titlebar');\n        if (titlebar) {\n          titlebar.style.display = '';\n        }\n\n        // Reset window-content padding that was added for bezel\n        var windowContent = terminalWindow.querySelector('.window-content');\n        if (windowContent) {\n          windowContent.style.position = '';\n          windowContent.style.top = '';\n          windowContent.style.left = '';\n          windowContent.style.right = '';\n          windowContent.style.bottom = '';\n          windowContent.style.width = '';\n          windowContent.style.height = '';\n          windowContent.style.padding = '';\n          windowContent.style.boxSizing = '';\n          windowContent.style.background = '';\n        }\n\n        // Reset terminal container\n        var terminalContainer = terminalWindow.querySelector('.terminal-container');\n        if (terminalContainer) {\n          terminalContainer.style.position = '';\n          terminalContainer.style.width = '';\n          terminalContainer.style.height = '';\n          terminalContainer.style.padding = '';\n          terminalContainer.style.margin = '';\n          terminalContainer.style.background = '';\n        }\n\n        // Restore ALL desktop elements\n        var desktopContainer = document.getElementById('desktop');\n        if (desktopContainer && desktopContainer.getAttribute('data-hidden-by-alien') === 'true') {\n          desktopContainer.style.display = '';\n          desktopContainer.removeAttribute('data-hidden-by-alien');\n        }\n        var dockContainer = document.querySelector('.dock');\n        if (dockContainer && dockContainer.getAttribute('data-hidden-by-alien') === 'true') {\n          dockContainer.style.display = '';\n          dockContainer.removeAttribute('data-hidden-by-alien');\n        }\n\n        // Restore all other windows\n        var allWindows = document.querySelectorAll('.LinkOS-window[data-hidden-by-alien=\"true\"]');\n        allWindows.forEach(function (win) {\n          win.style.display = '';\n          win.removeAttribute('data-hidden-by-alien');\n        });\n\n        // Remove CRT monitor effects\n        var scanlines = terminalWindow.querySelector('.scanlines');\n        if (scanlines) {\n          scanlines.remove();\n        }\n        var vignette = terminalWindow.querySelector('.vignette');\n        if (vignette) {\n          vignette.remove();\n        }\n        var crtEffect = terminalWindow.querySelector('.crt-effect');\n        if (crtEffect) {\n          crtEffect.remove();\n        }\n\n        // Trigger resize to fit terminal properly\n        if (terminal.fitAddon) {\n          setTimeout(function () {\n            return terminal.fitAddon.fit();\n          }, 100);\n        }\n      }\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ThemeCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4551\n");

/***/ }),

/***/ 4159:
/*!********************************************************************!*\
  !*** ./resources/js/components/terminal/commands/WhoAmICommand.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n/**\n * WhoAmICommand - Display user information\n */\nvar WhoAmICommand = /*#__PURE__*/function () {\n  function WhoAmICommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, WhoAmICommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(WhoAmICommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        var profile;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              profile = ['', '    \\x1b[36m‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\\x1b[0m', '    \\x1b[36m‚îÇ\\x1b[0m           \\x1b[32mABDULMELIK\\x1b[0m            \\x1b[36m‚îÇ\\x1b[0m', '    \\x1b[36m‚îÇ\\x1b[0m      \\x1b[33mFull Stack Developer\\x1b[0m       \\x1b[36m‚îÇ\\x1b[0m', '    \\x1b[36m‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\\x1b[0m', '', '  \\x1b[32müöÄ Skills:\\x1b[0m Laravel, Vue.js, React, Node.js', '  \\x1b[32müíº Experience:\\x1b[0m 5+ years web development', '  \\x1b[32müåê Portfolio:\\x1b[0m https://abdulme.link', '  \\x1b[32müìß Email:\\x1b[0m contact@abdulme.link', '  \\x1b[32müêô GitHub:\\x1b[0m https://github.com/abdulmalik', ''];\n              profile.forEach(function (line) {\n                return terminal.writeln(line);\n              });\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WhoAmICommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDE1OS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRkEsSUFHTUEsYUFBYTtFQUFBLFNBQUFBLGNBQUE7SUFBQUMsaUZBQUEsT0FBQUQsYUFBQTtFQUFBO0VBQUEsT0FBQUUsOEVBQUEsQ0FBQUYsYUFBQTtJQUFBRyxHQUFBO0lBQUFDLEtBQUE7TUFBQSxJQUFBQyxRQUFBLEdBQUFDLG1GQUFBLGVBQUFDLHNFQUFBLENBQ2YsU0FBQUUsUUFBY0MsSUFBSSxFQUFFQyxRQUFRO1FBQUEsSUFBQUMsT0FBQTtRQUFBLE9BQUFMLHNFQUFBLFVBQUFPLFNBQUFDLFFBQUE7VUFBQSxrQkFBQUEsUUFBQSxDQUFBQyxJQUFBLEdBQUFELFFBQUEsQ0FBQUUsSUFBQTtZQUFBO2NBQ2xCTCxPQUFPLEdBQUcsQ0FDWixFQUFFLEVBQ0Ysd0RBQXdELEVBQ3hELHNGQUFzRixFQUN0RixzRkFBc0YsRUFDdEYsd0RBQXdELEVBQ3hELEVBQUUsRUFDRiw2REFBNkQsRUFDN0QsMERBQTBELEVBQzFELHFEQUFxRCxFQUNyRCxpREFBaUQsRUFDakQsMkRBQTJELEVBQzNELEVBQUUsQ0FDTDtjQUVEQSxPQUFPLENBQUNNLE9BQU8sQ0FBQyxVQUFBQyxJQUFJO2dCQUFBLE9BQUlSLFFBQVEsQ0FBQ1MsT0FBTyxDQUFDRCxJQUFJLENBQUM7Y0FBQSxFQUFDO1lBQUM7WUFBQTtjQUFBLE9BQUFKLFFBQUEsQ0FBQU0sSUFBQTtVQUFBO1FBQUEsR0FBQVosT0FBQTtNQUFBLENBQ25EO01BQUEsU0FBQWEsUUFBQUMsRUFBQSxFQUFBQyxHQUFBO1FBQUEsT0FBQW5CLFFBQUEsQ0FBQW9CLEtBQUEsT0FBQUMsU0FBQTtNQUFBO01BQUEsT0FBQUosT0FBQTtJQUFBO0VBQUE7QUFBQTtBQUdMLGlFQUFldEIsYUFBYSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy9jb21wb25lbnRzL3Rlcm1pbmFsL2NvbW1hbmRzL1dob0FtSUNvbW1hbmQuanM/NmQ1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFdob0FtSUNvbW1hbmQgLSBEaXNwbGF5IHVzZXIgaW5mb3JtYXRpb25cbiAqL1xuY2xhc3MgV2hvQW1JQ29tbWFuZCB7XG4gICAgYXN5bmMgZXhlY3V0ZShhcmdzLCB0ZXJtaW5hbCkge1xuICAgICAgICBjb25zdCBwcm9maWxlID0gW1xuICAgICAgICAgICAgJycsXG4gICAgICAgICAgICAnICAgIFxceDFiWzM2beKVreKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKVrlxceDFiWzBtJyxcbiAgICAgICAgICAgICcgICAgXFx4MWJbMzZt4pSCXFx4MWJbMG0gICAgICAgICAgIFxceDFiWzMybUFCRFVMTUVMSUtcXHgxYlswbSAgICAgICAgICAgIFxceDFiWzM2beKUglxceDFiWzBtJyxcbiAgICAgICAgICAgICcgICAgXFx4MWJbMzZt4pSCXFx4MWJbMG0gICAgICBcXHgxYlszM21GdWxsIFN0YWNrIERldmVsb3BlclxceDFiWzBtICAgICAgIFxceDFiWzM2beKUglxceDFiWzBtJyxcbiAgICAgICAgICAgICcgICAgXFx4MWJbMzZt4pWw4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pWvXFx4MWJbMG0nLFxuICAgICAgICAgICAgJycsXG4gICAgICAgICAgICAnICBcXHgxYlszMm3wn5qAIFNraWxsczpcXHgxYlswbSBMYXJhdmVsLCBWdWUuanMsIFJlYWN0LCBOb2RlLmpzJyxcbiAgICAgICAgICAgICcgIFxceDFiWzMybfCfkrwgRXhwZXJpZW5jZTpcXHgxYlswbSA1KyB5ZWFycyB3ZWIgZGV2ZWxvcG1lbnQnLFxuICAgICAgICAgICAgJyAgXFx4MWJbMzJt8J+MkCBQb3J0Zm9saW86XFx4MWJbMG0gaHR0cHM6Ly9hYmR1bG1lLmxpbmsnLFxuICAgICAgICAgICAgJyAgXFx4MWJbMzJt8J+TpyBFbWFpbDpcXHgxYlswbSBjb250YWN0QGFiZHVsbWUubGluaycsXG4gICAgICAgICAgICAnICBcXHgxYlszMm3wn5CZIEdpdEh1YjpcXHgxYlswbSBodHRwczovL2dpdGh1Yi5jb20vYWJkdWxtYWxpaycsXG4gICAgICAgICAgICAnJ1xuICAgICAgICBdO1xuICAgICAgICBcbiAgICAgICAgcHJvZmlsZS5mb3JFYWNoKGxpbmUgPT4gdGVybWluYWwud3JpdGVsbihsaW5lKSk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBXaG9BbUlDb21tYW5kO1xuIl0sIm5hbWVzIjpbIldob0FtSUNvbW1hbmQiLCJfY2xhc3NDYWxsQ2hlY2siLCJfY3JlYXRlQ2xhc3MiLCJrZXkiLCJ2YWx1ZSIsIl9leGVjdXRlIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJfcmVnZW5lcmF0b3JSdW50aW1lIiwibWFyayIsIl9jYWxsZWUiLCJhcmdzIiwidGVybWluYWwiLCJwcm9maWxlIiwid3JhcCIsIl9jYWxsZWUkIiwiX2NvbnRleHQiLCJwcmV2IiwibmV4dCIsImZvckVhY2giLCJsaW5lIiwid3JpdGVsbiIsInN0b3AiLCJleGVjdXRlIiwiX3giLCJfeDIiLCJhcHBseSIsImFyZ3VtZW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4159\n");

/***/ }),

/***/ 6636:
/*!************************************************************!*\
  !*** ./resources/js/components/terminal/games/Game2048.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ 9394);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n/**\n * 2048 Game - Number puzzle game for the terminal\n * WASD or Arrow Keys to move tiles, Q to quit\n * Combine tiles with the same number to reach 2048!\n * @class\n */\nvar Game2048 = /*#__PURE__*/function () {\n  /**\n   * Initialize 2048 Game\n   * @constructor\n   */\n  function Game2048() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, Game2048);\n    this.gameState = {\n      board: [],\n      score: 0,\n      gameRunning: false,\n      paused: false,\n      size: 4\n    };\n    this.terminal = null;\n    this.colors = {\n      2: '\\x1b[47m\\x1b[30m',\n      // White bg, black text\n      4: '\\x1b[46m\\x1b[30m',\n      // Cyan bg, black text  \n      8: '\\x1b[43m\\x1b[30m',\n      // Yellow bg, black text\n      16: '\\x1b[42m\\x1b[30m',\n      // Green bg, black text\n      32: '\\x1b[45m\\x1b[30m',\n      // Magenta bg, black text\n      64: '\\x1b[41m\\x1b[37m',\n      // Red bg, white text\n      128: '\\x1b[44m\\x1b[37m',\n      // Blue bg, white text\n      256: '\\x1b[40m\\x1b[33m',\n      // Black bg, yellow text\n      512: '\\x1b[40m\\x1b[32m',\n      // Black bg, green text\n      1024: '\\x1b[40m\\x1b[36m',\n      // Black bg, cyan text\n      2048: '\\x1b[40m\\x1b[31m' // Black bg, red text\n    };\n  }\n\n  /**\n   * Execute game from terminal command\n   * @param {Array} args - Command arguments\n   * @param {Terminal} terminal - Terminal instance\n   * @returns {Promise<void>}\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Game2048, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee(args, terminal) {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                this.terminal = terminal;\n                this.startGame();\n              } catch (error) {\n                console.error('Game2048: Failed to start:', error);\n                terminal.writeln('\\x1b[31mError: Failed to start 2048 game\\x1b[0m');\n              }\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }, {\n    key: \"startGame\",\n    value: function startGame() {\n      this.terminal.clear();\n      this.gameState.gameRunning = true;\n      this.gameState.score = 0;\n      this.initBoard();\n      this.addRandomTile();\n      this.addRandomTile();\n      this.terminal.writeln('\\x1b[36müéØ 2048 GAME\\x1b[0m');\n      this.terminal.writeln('\\x1b[33mUse WASD or Arrow Keys to move tiles. Q to quit.\\x1b[0m');\n      this.terminal.writeln('\\x1b[33mCombine tiles with the same number to reach 2048!\\x1b[0m\\n');\n      this.setupInputHandler();\n      this.renderGame();\n    }\n  }, {\n    key: \"initBoard\",\n    value: function initBoard() {\n      var _this = this;\n      this.gameState.board = Array(this.gameState.size).fill().map(function () {\n        return Array(_this.gameState.size).fill(0);\n      });\n    }\n  }, {\n    key: \"addRandomTile\",\n    value: function addRandomTile() {\n      var emptyCells = [];\n      for (var row = 0; row < this.gameState.size; row++) {\n        for (var col = 0; col < this.gameState.size; col++) {\n          if (this.gameState.board[row][col] === 0) {\n            emptyCells.push({\n              row: row,\n              col: col\n            });\n          }\n        }\n      }\n      if (emptyCells.length > 0) {\n        var randomCell = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n        var value = Math.random() < 0.9 ? 2 : 4;\n        this.gameState.board[randomCell.row][randomCell.col] = value;\n      }\n    }\n  }, {\n    key: \"setupInputHandler\",\n    value: function setupInputHandler() {\n      var _this2 = this;\n      this.keyDisposable = this.terminal.terminal.onKey(function (event) {\n        if (!_this2.gameState.gameRunning) return;\n        var key = event.key.toLowerCase();\n\n        // Prevent the key from being echoed to terminal\n        event.domEvent.preventDefault();\n        event.domEvent.stopPropagation();\n        var moved = false;\n        switch (key) {\n          case 'q':\n            _this2.endGame();\n            return;\n          case 'w':\n          case 'arrowup':\n            moved = _this2.move('up');\n            break;\n          case 's':\n          case 'arrowdown':\n            moved = _this2.move('down');\n            break;\n          case 'a':\n          case 'arrowleft':\n            moved = _this2.move('left');\n            break;\n          case 'd':\n          case 'arrowright':\n            moved = _this2.move('right');\n            break;\n        }\n        if (moved) {\n          _this2.addRandomTile();\n          _this2.renderGame();\n          if (_this2.checkWin()) {\n            _this2.winGame();\n          } else if (_this2.checkGameOver()) {\n            _this2.endGame();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"move\",\n    value: function move(direction) {\n      var newBoard = this.gameState.board.map(function (row) {\n        return (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(row);\n      });\n      var moved = false;\n      var scoreIncrease = 0;\n      if (direction === 'left' || direction === 'right') {\n        for (var row = 0; row < this.gameState.size; row++) {\n          var line = direction === 'left' ? newBoard[row] : newBoard[row].slice().reverse();\n          var _this$mergeLine = this.mergeLine(line),\n            newLine = _this$mergeLine.newLine,\n            score = _this$mergeLine.score;\n          scoreIncrease += score;\n          var finalLine = direction === 'left' ? newLine : newLine.reverse();\n          if (!this.arraysEqual(newBoard[row], finalLine)) {\n            moved = true;\n            newBoard[row] = finalLine;\n          }\n        }\n      } else {\n        for (var col = 0; col < this.gameState.size; col++) {\n          var _line = [];\n          for (var _row = 0; _row < this.gameState.size; _row++) {\n            _line.push(newBoard[direction === 'up' ? _row : this.gameState.size - 1 - _row][col]);\n          }\n          var _this$mergeLine2 = this.mergeLine(_line),\n            _newLine = _this$mergeLine2.newLine,\n            _score = _this$mergeLine2.score;\n          scoreIncrease += _score;\n          for (var _row2 = 0; _row2 < this.gameState.size; _row2++) {\n            var newValue = _newLine[_row2];\n            var boardRow = direction === 'up' ? _row2 : this.gameState.size - 1 - _row2;\n            if (newBoard[boardRow][col] !== newValue) {\n              moved = true;\n              newBoard[boardRow][col] = newValue;\n            }\n          }\n        }\n      }\n      if (moved) {\n        this.gameState.board = newBoard;\n        this.gameState.score += scoreIncrease;\n      }\n      return moved;\n    }\n  }, {\n    key: \"mergeLine\",\n    value: function mergeLine(line) {\n      // Remove zeros\n      var filtered = line.filter(function (val) {\n        return val !== 0;\n      });\n      var score = 0;\n\n      // Merge adjacent equal values\n      for (var i = 0; i < filtered.length - 1; i++) {\n        if (filtered[i] === filtered[i + 1]) {\n          filtered[i] *= 2;\n          score += filtered[i];\n          filtered.splice(i + 1, 1);\n        }\n      }\n\n      // Add zeros to fill the line\n      while (filtered.length < this.gameState.size) {\n        filtered.push(0);\n      }\n      return {\n        newLine: filtered,\n        score: score\n      };\n    }\n  }, {\n    key: \"arraysEqual\",\n    value: function arraysEqual(a, b) {\n      return a.length === b.length && a.every(function (val, i) {\n        return val === b[i];\n      });\n    }\n  }, {\n    key: \"checkWin\",\n    value: function checkWin() {\n      for (var row = 0; row < this.gameState.size; row++) {\n        for (var col = 0; col < this.gameState.size; col++) {\n          if (this.gameState.board[row][col] === 2048) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }, {\n    key: \"checkGameOver\",\n    value: function checkGameOver() {\n      // Check for empty cells\n      for (var row = 0; row < this.gameState.size; row++) {\n        for (var col = 0; col < this.gameState.size; col++) {\n          if (this.gameState.board[row][col] === 0) {\n            return false;\n          }\n        }\n      }\n\n      // Check for possible merges\n      for (var _row3 = 0; _row3 < this.gameState.size; _row3++) {\n        for (var _col = 0; _col < this.gameState.size; _col++) {\n          var current = this.gameState.board[_row3][_col];\n\n          // Check right neighbor\n          if (_col < this.gameState.size - 1 && this.gameState.board[_row3][_col + 1] === current) {\n            return false;\n          }\n\n          // Check bottom neighbor\n          if (_row3 < this.gameState.size - 1 && this.gameState.board[_row3 + 1][_col] === current) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"renderGame\",\n    value: function renderGame() {\n      // Clear screen and move cursor to home\n      this.terminal.terminal.write('\\x1b[2J\\x1b[H');\n      this.terminal.writeln('\\x1b[36müéØ 2048 GAME\\x1b[0m');\n      this.terminal.writeln('\\x1b[90mWASD/Arrow Keys: Move tiles | SPACE: Pause | Q/ESC: Quit\\x1b[0m');\n      this.terminal.writeln('\\x1b[90mCombine tiles with the same number to reach 2048!\\x1b[0m');\n      this.terminal.writeln('');\n      if (this.gameState.paused) {\n        this.terminal.writeln('\\x1b[43m\\x1b[30m ‚è∏Ô∏è  PAUSED - Press SPACE to continue \\x1b[0m');\n        this.terminal.writeln('');\n      }\n      this.terminal.writeln(\"Score: \\x1B[36m\".concat(this.gameState.score, \"\\x1B[0m\"));\n      this.terminal.writeln('');\n\n      // Draw board with more compact layout\n      this.terminal.writeln('‚îå' + '‚îÄ‚îÄ‚îÄ‚îÄ‚î¨'.repeat(this.gameState.size - 1) + '‚îÄ‚îÄ‚îÄ‚îÄ‚îê');\n      for (var row = 0; row < this.gameState.size; row++) {\n        var line = '‚îÇ';\n        for (var col = 0; col < this.gameState.size; col++) {\n          var value = this.gameState.board[row][col];\n          var cellContent = void 0;\n          if (value === 0) {\n            cellContent = '    ';\n          } else {\n            var color = this.colors[value] || '\\x1b[37m';\n            var text = value.toString().padStart(4);\n            cellContent = \"\".concat(color).concat(text, \"\\x1B[0m\");\n          }\n          line += cellContent;\n          if (col < this.gameState.size - 1) line += '‚îÇ';\n        }\n        line += '‚îÇ';\n        this.terminal.writeln(line);\n        if (row < this.gameState.size - 1) {\n          this.terminal.writeln('‚îú' + '‚îÄ‚îÄ‚îÄ‚îÄ‚îº'.repeat(this.gameState.size - 1) + '‚îÄ‚îÄ‚îÄ‚îÄ‚î§');\n        }\n      }\n      this.terminal.writeln('‚îî' + '‚îÄ‚îÄ‚îÄ‚îÄ‚î¥'.repeat(this.gameState.size - 1) + '‚îÄ‚îÄ‚îÄ‚îÄ‚îò');\n    }\n  }, {\n    key: \"winGame\",\n    value: function winGame() {\n      this.gameState.gameRunning = false;\n\n      // Dispose of the key handler\n      if (this.keyDisposable) {\n        this.keyDisposable.dispose();\n      }\n      this.saveHighScore();\n      this.terminal.writeln('\\n\\x1b[32müéâ CONGRATULATIONS! YOU REACHED 2048! üéâ\\x1b[0m');\n      this.terminal.writeln(\"Final Score: \\x1B[36m\".concat(this.gameState.score, \"\\x1B[0m\"));\n      this.terminal.writePrompt();\n    }\n  }, {\n    key: \"endGame\",\n    value: function endGame() {\n      this.gameState.gameRunning = false;\n\n      // Dispose of the key handler\n      if (this.keyDisposable) {\n        this.keyDisposable.dispose();\n      }\n      var highScore = this.saveHighScore();\n      this.terminal.writeln('\\n\\x1b[31mGame Over!\\x1b[0m');\n      this.terminal.writeln(\"Final Score: \\x1B[36m\".concat(this.gameState.score, \"\\x1B[0m\"));\n      this.terminal.writeln(\"High Score: \\x1B[33m\".concat(highScore, \"\\x1B[0m\"));\n      this.terminal.writePrompt();\n    }\n  }, {\n    key: \"saveHighScore\",\n    value: function saveHighScore() {\n      try {\n        var stored = localStorage.getItem('2048_high_score');\n        var currentHigh = stored ? parseInt(stored) : 0;\n        var newHigh = Math.max(currentHigh, this.gameState.score);\n        localStorage.setItem('2048_high_score', newHigh.toString());\n        return newHigh;\n      } catch (e) {\n        return this.gameState.score;\n      }\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Game2048);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LE9BQU8sQ0FBQyxDQUFDO01BQ2hDO01BRUEsSUFBTUcsU0FBUyxHQUFHLElBQUksQ0FBQ0YsYUFBYSxDQUFDLENBQUM7TUFFdEMsSUFBSSxDQUFDbEcsUUFBUSxDQUFDbUIsT0FBTyxDQUFDLDZCQUE2QixDQUFDO01BQ3BELElBQUksQ0FBQ25CLFFBQVEsQ0FBQ21CLE9BQU8seUJBQUF1RSxNQUFBLENBQXlCLElBQUksQ0FBQ2hHLFNBQVMsQ0FBQ0UsS0FBSyxZQUFTLENBQUM7TUFDNUUsSUFBSSxDQUFDSSxRQUFRLENBQUNtQixPQUFPLHdCQUFBdUUsTUFBQSxDQUF3QlUsU0FBUyxZQUFTLENBQUM7TUFDaEUsSUFBSSxDQUFDcEcsUUFBUSxDQUFDbUcsV0FBVyxDQUFDLENBQUM7SUFDL0I7RUFBQztJQUFBaEcsR0FBQTtJQUFBQyxLQUFBLEVBRUQsU0FBQThGLGNBQUEsRUFBZ0I7TUFDWixJQUFJO1FBQ0EsSUFBTUcsTUFBTSxHQUFHQyxZQUFZLENBQUNDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQztRQUN0RCxJQUFNQyxXQUFXLEdBQUdILE1BQU0sR0FBR0ksUUFBUSxDQUFDSixNQUFNLENBQUMsR0FBRyxDQUFDO1FBQ2pELElBQU1LLE9BQU8sR0FBR2pFLElBQUksQ0FBQ2tFLEdBQUcsQ0FBQ0gsV0FBVyxFQUFFLElBQUksQ0FBQzlHLFNBQVMsQ0FBQ0UsS0FBSyxDQUFDO1FBQzNEMEcsWUFBWSxDQUFDTSxPQUFPLENBQUMsaUJBQWlCLEVBQUVGLE9BQU8sQ0FBQ1gsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUMzRCxPQUFPVyxPQUFPO01BQ2xCLENBQUMsQ0FBQyxPQUFPRyxDQUFDLEVBQUU7UUFDUixPQUFPLElBQUksQ0FBQ25ILFNBQVMsQ0FBQ0UsS0FBSztNQUMvQjtJQUNKO0VBQUM7QUFBQTtBQUdMLGlFQUFlSixRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvdGVybWluYWwvZ2FtZXMvR2FtZTIwNDguanM/Y2Y2NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIDIwNDggR2FtZSAtIE51bWJlciBwdXp6bGUgZ2FtZSBmb3IgdGhlIHRlcm1pbmFsXG4gKiBXQVNEIG9yIEFycm93IEtleXMgdG8gbW92ZSB0aWxlcywgUSB0byBxdWl0XG4gKiBDb21iaW5lIHRpbGVzIHdpdGggdGhlIHNhbWUgbnVtYmVyIHRvIHJlYWNoIDIwNDghXG4gKiBAY2xhc3NcbiAqL1xuY2xhc3MgR2FtZTIwNDgge1xuICAgIC8qKlxuICAgICAqIEluaXRpYWxpemUgMjA0OCBHYW1lXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZ2FtZVN0YXRlID0ge1xuICAgICAgICAgICAgYm9hcmQ6IFtdLFxuICAgICAgICAgICAgc2NvcmU6IDAsXG4gICAgICAgICAgICBnYW1lUnVubmluZzogZmFsc2UsXG4gICAgICAgICAgICBwYXVzZWQ6IGZhbHNlLFxuICAgICAgICAgICAgc2l6ZTogNFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLnRlcm1pbmFsID0gbnVsbDtcbiAgICAgICAgdGhpcy5jb2xvcnMgPSB7XG4gICAgICAgICAgICAyOiAnXFx4MWJbNDdtXFx4MWJbMzBtJywgICAgIC8vIFdoaXRlIGJnLCBibGFjayB0ZXh0XG4gICAgICAgICAgICA0OiAnXFx4MWJbNDZtXFx4MWJbMzBtJywgICAgIC8vIEN5YW4gYmcsIGJsYWNrIHRleHQgIFxuICAgICAgICAgICAgODogJ1xceDFiWzQzbVxceDFiWzMwbScsICAgICAvLyBZZWxsb3cgYmcsIGJsYWNrIHRleHRcbiAgICAgICAgICAgIDE2OiAnXFx4MWJbNDJtXFx4MWJbMzBtJywgICAgLy8gR3JlZW4gYmcsIGJsYWNrIHRleHRcbiAgICAgICAgICAgIDMyOiAnXFx4MWJbNDVtXFx4MWJbMzBtJywgICAgLy8gTWFnZW50YSBiZywgYmxhY2sgdGV4dFxuICAgICAgICAgICAgNjQ6ICdcXHgxYls0MW1cXHgxYlszN20nLCAgICAvLyBSZWQgYmcsIHdoaXRlIHRleHRcbiAgICAgICAgICAgIDEyODogJ1xceDFiWzQ0bVxceDFiWzM3bScsICAgLy8gQmx1ZSBiZywgd2hpdGUgdGV4dFxuICAgICAgICAgICAgMjU2OiAnXFx4MWJbNDBtXFx4MWJbMzNtJywgICAvLyBCbGFjayBiZywgeWVsbG93IHRleHRcbiAgICAgICAgICAgIDUxMjogJ1xceDFiWzQwbVxceDFiWzMybScsICAgLy8gQmxhY2sgYmcsIGdyZWVuIHRleHRcbiAgICAgICAgICAgIDEwMjQ6ICdcXHgxYls0MG1cXHgxYlszNm0nLCAgLy8gQmxhY2sgYmcsIGN5YW4gdGV4dFxuICAgICAgICAgICAgMjA0ODogJ1xceDFiWzQwbVxceDFiWzMxbScgICAvLyBCbGFjayBiZywgcmVkIHRleHRcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBFeGVjdXRlIGdhbWUgZnJvbSB0ZXJtaW5hbCBjb21tYW5kXG4gICAgICogQHBhcmFtIHtBcnJheX0gYXJncyAtIENvbW1hbmQgYXJndW1lbnRzXG4gICAgICogQHBhcmFtIHtUZXJtaW5hbH0gdGVybWluYWwgLSBUZXJtaW5hbCBpbnN0YW5jZVxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPHZvaWQ+fVxuICAgICAqL1xuICAgIGFzeW5jIGV4ZWN1dGUoYXJncywgdGVybWluYWwpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHRoaXMudGVybWluYWwgPSB0ZXJtaW5hbDtcbiAgICAgICAgICAgIHRoaXMuc3RhcnRHYW1lKCk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdHYW1lMjA0ODogRmFpbGVkIHRvIHN0YXJ0OicsIGVycm9yKTtcbiAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlbG4oJ1xceDFiWzMxbUVycm9yOiBGYWlsZWQgdG8gc3RhcnQgMjA0OCBnYW1lXFx4MWJbMG0nKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHN0YXJ0R2FtZSgpIHtcbiAgICAgICAgdGhpcy50ZXJtaW5hbC5jbGVhcigpO1xuICAgICAgICB0aGlzLmdhbWVTdGF0ZS5nYW1lUnVubmluZyA9IHRydWU7XG4gICAgICAgIHRoaXMuZ2FtZVN0YXRlLnNjb3JlID0gMDtcbiAgICAgICAgdGhpcy5pbml0Qm9hcmQoKTtcbiAgICAgICAgdGhpcy5hZGRSYW5kb21UaWxlKCk7XG4gICAgICAgIHRoaXMuYWRkUmFuZG9tVGlsZSgpO1xuXG4gICAgICAgIHRoaXMudGVybWluYWwud3JpdGVsbignXFx4MWJbMzZt8J+OryAyMDQ4IEdBTUVcXHgxYlswbScpO1xuICAgICAgICB0aGlzLnRlcm1pbmFsLndyaXRlbG4oJ1xceDFiWzMzbVVzZSBXQVNEIG9yIEFycm93IEtleXMgdG8gbW92ZSB0aWxlcy4gUSB0byBxdWl0LlxceDFiWzBtJyk7XG4gICAgICAgIHRoaXMudGVybWluYWwud3JpdGVsbignXFx4MWJbMzNtQ29tYmluZSB0aWxlcyB3aXRoIHRoZSBzYW1lIG51bWJlciB0byByZWFjaCAyMDQ4IVxceDFiWzBtXFxuJyk7XG4gICAgICAgIFxuICAgICAgICB0aGlzLnNldHVwSW5wdXRIYW5kbGVyKCk7XG4gICAgICAgIHRoaXMucmVuZGVyR2FtZSgpO1xuICAgIH1cblxuICAgIGluaXRCb2FyZCgpIHtcbiAgICAgICAgdGhpcy5nYW1lU3RhdGUuYm9hcmQgPSBBcnJheSh0aGlzLmdhbWVTdGF0ZS5zaXplKS5maWxsKCkubWFwKCgpID0+IFxuICAgICAgICAgICAgQXJyYXkodGhpcy5nYW1lU3RhdGUuc2l6ZSkuZmlsbCgwKVxuICAgICAgICApO1xuICAgIH1cblxuICAgIGFkZFJhbmRvbVRpbGUoKSB7XG4gICAgICAgIGNvbnN0IGVtcHR5Q2VsbHMgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgcm93ID0gMDsgcm93IDwgdGhpcy5nYW1lU3RhdGUuc2l6ZTsgcm93KyspIHtcbiAgICAgICAgICAgIGZvciAobGV0IGNvbCA9IDA7IGNvbCA8IHRoaXMuZ2FtZVN0YXRlLnNpemU7IGNvbCsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZ2FtZVN0YXRlLmJvYXJkW3Jvd11bY29sXSA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBlbXB0eUNlbGxzLnB1c2goe3JvdywgY29sfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGVtcHR5Q2VsbHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgY29uc3QgcmFuZG9tQ2VsbCA9IGVtcHR5Q2VsbHNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogZW1wdHlDZWxscy5sZW5ndGgpXTtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gTWF0aC5yYW5kb20oKSA8IDAuOSA/IDIgOiA0O1xuICAgICAgICAgICAgdGhpcy5nYW1lU3RhdGUuYm9hcmRbcmFuZG9tQ2VsbC5yb3ddW3JhbmRvbUNlbGwuY29sXSA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2V0dXBJbnB1dEhhbmRsZXIoKSB7XG4gICAgICAgIHRoaXMua2V5RGlzcG9zYWJsZSA9IHRoaXMudGVybWluYWwudGVybWluYWwub25LZXkoKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuZ2FtZVN0YXRlLmdhbWVSdW5uaW5nKSByZXR1cm47XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbnN0IGtleSA9IGV2ZW50LmtleS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBQcmV2ZW50IHRoZSBrZXkgZnJvbSBiZWluZyBlY2hvZWQgdG8gdGVybWluYWxcbiAgICAgICAgICAgIGV2ZW50LmRvbUV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBldmVudC5kb21FdmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgbGV0IG1vdmVkID0gZmFsc2U7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHN3aXRjaChrZXkpIHtcbiAgICAgICAgICAgICAgICBjYXNlICdxJzpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbmRHYW1lKCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICBjYXNlICd3JzpcbiAgICAgICAgICAgICAgICBjYXNlICdhcnJvd3VwJzpcbiAgICAgICAgICAgICAgICAgICAgbW92ZWQgPSB0aGlzLm1vdmUoJ3VwJyk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ3MnOlxuICAgICAgICAgICAgICAgIGNhc2UgJ2Fycm93ZG93bic6XG4gICAgICAgICAgICAgICAgICAgIG1vdmVkID0gdGhpcy5tb3ZlKCdkb3duJyk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ2EnOlxuICAgICAgICAgICAgICAgIGNhc2UgJ2Fycm93bGVmdCc6XG4gICAgICAgICAgICAgICAgICAgIG1vdmVkID0gdGhpcy5tb3ZlKCdsZWZ0Jyk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ2QnOlxuICAgICAgICAgICAgICAgIGNhc2UgJ2Fycm93cmlnaHQnOlxuICAgICAgICAgICAgICAgICAgICBtb3ZlZCA9IHRoaXMubW92ZSgncmlnaHQnKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChtb3ZlZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuYWRkUmFuZG9tVGlsZSgpO1xuICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyR2FtZSgpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNoZWNrV2luKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy53aW5HYW1lKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLmNoZWNrR2FtZU92ZXIoKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmVuZEdhbWUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIG1vdmUoZGlyZWN0aW9uKSB7XG4gICAgICAgIGNvbnN0IG5ld0JvYXJkID0gdGhpcy5nYW1lU3RhdGUuYm9hcmQubWFwKHJvdyA9PiBbLi4ucm93XSk7XG4gICAgICAgIGxldCBtb3ZlZCA9IGZhbHNlO1xuICAgICAgICBsZXQgc2NvcmVJbmNyZWFzZSA9IDA7XG5cbiAgICAgICAgaWYgKGRpcmVjdGlvbiA9PT0gJ2xlZnQnIHx8IGRpcmVjdGlvbiA9PT0gJ3JpZ2h0Jykge1xuICAgICAgICAgICAgZm9yIChsZXQgcm93ID0gMDsgcm93IDwgdGhpcy5nYW1lU3RhdGUuc2l6ZTsgcm93KyspIHtcbiAgICAgICAgICAgICAgICBjb25zdCBsaW5lID0gZGlyZWN0aW9uID09PSAnbGVmdCcgPyBcbiAgICAgICAgICAgICAgICAgICAgbmV3Qm9hcmRbcm93XSA6IFxuICAgICAgICAgICAgICAgICAgICBuZXdCb2FyZFtyb3ddLnNsaWNlKCkucmV2ZXJzZSgpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGNvbnN0IHtuZXdMaW5lLCBzY29yZX0gPSB0aGlzLm1lcmdlTGluZShsaW5lKTtcbiAgICAgICAgICAgICAgICBzY29yZUluY3JlYXNlICs9IHNjb3JlO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGNvbnN0IGZpbmFsTGluZSA9IGRpcmVjdGlvbiA9PT0gJ2xlZnQnID8gbmV3TGluZSA6IG5ld0xpbmUucmV2ZXJzZSgpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5hcnJheXNFcXVhbChuZXdCb2FyZFtyb3ddLCBmaW5hbExpbmUpKSB7XG4gICAgICAgICAgICAgICAgICAgIG1vdmVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgbmV3Qm9hcmRbcm93XSA9IGZpbmFsTGluZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBmb3IgKGxldCBjb2wgPSAwOyBjb2wgPCB0aGlzLmdhbWVTdGF0ZS5zaXplOyBjb2wrKykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGxpbmUgPSBbXTtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCByb3cgPSAwOyByb3cgPCB0aGlzLmdhbWVTdGF0ZS5zaXplOyByb3crKykge1xuICAgICAgICAgICAgICAgICAgICBsaW5lLnB1c2gobmV3Qm9hcmRbZGlyZWN0aW9uID09PSAndXAnID8gcm93IDogdGhpcy5nYW1lU3RhdGUuc2l6ZSAtIDEgLSByb3ddW2NvbF0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBjb25zdCB7bmV3TGluZSwgc2NvcmV9ID0gdGhpcy5tZXJnZUxpbmUobGluZSk7XG4gICAgICAgICAgICAgICAgc2NvcmVJbmNyZWFzZSArPSBzY29yZTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBmb3IgKGxldCByb3cgPSAwOyByb3cgPCB0aGlzLmdhbWVTdGF0ZS5zaXplOyByb3crKykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IG5ld0xpbmVbcm93XTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYm9hcmRSb3cgPSBkaXJlY3Rpb24gPT09ICd1cCcgPyByb3cgOiB0aGlzLmdhbWVTdGF0ZS5zaXplIC0gMSAtIHJvdztcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIGlmIChuZXdCb2FyZFtib2FyZFJvd11bY29sXSAhPT0gbmV3VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vdmVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0JvYXJkW2JvYXJkUm93XVtjb2xdID0gbmV3VmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobW92ZWQpIHtcbiAgICAgICAgICAgIHRoaXMuZ2FtZVN0YXRlLmJvYXJkID0gbmV3Qm9hcmQ7XG4gICAgICAgICAgICB0aGlzLmdhbWVTdGF0ZS5zY29yZSArPSBzY29yZUluY3JlYXNlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG1vdmVkO1xuICAgIH1cblxuICAgIG1lcmdlTGluZShsaW5lKSB7XG4gICAgICAgIC8vIFJlbW92ZSB6ZXJvc1xuICAgICAgICBjb25zdCBmaWx0ZXJlZCA9IGxpbmUuZmlsdGVyKHZhbCA9PiB2YWwgIT09IDApO1xuICAgICAgICBsZXQgc2NvcmUgPSAwO1xuICAgICAgICBcbiAgICAgICAgLy8gTWVyZ2UgYWRqYWNlbnQgZXF1YWwgdmFsdWVzXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZmlsdGVyZWQubGVuZ3RoIC0gMTsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoZmlsdGVyZWRbaV0gPT09IGZpbHRlcmVkW2kgKyAxXSkge1xuICAgICAgICAgICAgICAgIGZpbHRlcmVkW2ldICo9IDI7XG4gICAgICAgICAgICAgICAgc2NvcmUgKz0gZmlsdGVyZWRbaV07XG4gICAgICAgICAgICAgICAgZmlsdGVyZWQuc3BsaWNlKGkgKyAxLCAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gQWRkIHplcm9zIHRvIGZpbGwgdGhlIGxpbmVcbiAgICAgICAgd2hpbGUgKGZpbHRlcmVkLmxlbmd0aCA8IHRoaXMuZ2FtZVN0YXRlLnNpemUpIHtcbiAgICAgICAgICAgIGZpbHRlcmVkLnB1c2goMCk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHJldHVybiB7bmV3TGluZTogZmlsdGVyZWQsIHNjb3JlfTtcbiAgICB9XG5cbiAgICBhcnJheXNFcXVhbChhLCBiKSB7XG4gICAgICAgIHJldHVybiBhLmxlbmd0aCA9PT0gYi5sZW5ndGggJiYgYS5ldmVyeSgodmFsLCBpKSA9PiB2YWwgPT09IGJbaV0pO1xuICAgIH1cblxuICAgIGNoZWNrV2luKCkge1xuICAgICAgICBmb3IgKGxldCByb3cgPSAwOyByb3cgPCB0aGlzLmdhbWVTdGF0ZS5zaXplOyByb3crKykge1xuICAgICAgICAgICAgZm9yIChsZXQgY29sID0gMDsgY29sIDwgdGhpcy5nYW1lU3RhdGUuc2l6ZTsgY29sKyspIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5nYW1lU3RhdGUuYm9hcmRbcm93XVtjb2xdID09PSAyMDQ4KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgY2hlY2tHYW1lT3ZlcigpIHtcbiAgICAgICAgLy8gQ2hlY2sgZm9yIGVtcHR5IGNlbGxzXG4gICAgICAgIGZvciAobGV0IHJvdyA9IDA7IHJvdyA8IHRoaXMuZ2FtZVN0YXRlLnNpemU7IHJvdysrKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBjb2wgPSAwOyBjb2wgPCB0aGlzLmdhbWVTdGF0ZS5zaXplOyBjb2wrKykge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmdhbWVTdGF0ZS5ib2FyZFtyb3ddW2NvbF0gPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIENoZWNrIGZvciBwb3NzaWJsZSBtZXJnZXNcbiAgICAgICAgZm9yIChsZXQgcm93ID0gMDsgcm93IDwgdGhpcy5nYW1lU3RhdGUuc2l6ZTsgcm93KyspIHtcbiAgICAgICAgICAgIGZvciAobGV0IGNvbCA9IDA7IGNvbCA8IHRoaXMuZ2FtZVN0YXRlLnNpemU7IGNvbCsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY3VycmVudCA9IHRoaXMuZ2FtZVN0YXRlLmJvYXJkW3Jvd11bY29sXTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBDaGVjayByaWdodCBuZWlnaGJvclxuICAgICAgICAgICAgICAgIGlmIChjb2wgPCB0aGlzLmdhbWVTdGF0ZS5zaXplIC0gMSAmJiB0aGlzLmdhbWVTdGF0ZS5ib2FyZFtyb3ddW2NvbCArIDFdID09PSBjdXJyZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gQ2hlY2sgYm90dG9tIG5laWdoYm9yXG4gICAgICAgICAgICAgICAgaWYgKHJvdyA8IHRoaXMuZ2FtZVN0YXRlLnNpemUgLSAxICYmIHRoaXMuZ2FtZVN0YXRlLmJvYXJkW3JvdyArIDFdW2NvbF0gPT09IGN1cnJlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHJlbmRlckdhbWUoKSB7XG4gICAgICAgIC8vIENsZWFyIHNjcmVlbiBhbmQgbW92ZSBjdXJzb3IgdG8gaG9tZVxuICAgICAgICB0aGlzLnRlcm1pbmFsLnRlcm1pbmFsLndyaXRlKCdcXHgxYlsySlxceDFiW0gnKTtcbiAgICAgICAgXG4gICAgICAgIHRoaXMudGVybWluYWwud3JpdGVsbignXFx4MWJbMzZt8J+OryAyMDQ4IEdBTUVcXHgxYlswbScpO1xuICAgICAgICB0aGlzLnRlcm1pbmFsLndyaXRlbG4oJ1xceDFiWzkwbVdBU0QvQXJyb3cgS2V5czogTW92ZSB0aWxlcyB8IFNQQUNFOiBQYXVzZSB8IFEvRVNDOiBRdWl0XFx4MWJbMG0nKTtcbiAgICAgICAgdGhpcy50ZXJtaW5hbC53cml0ZWxuKCdcXHgxYls5MG1Db21iaW5lIHRpbGVzIHdpdGggdGhlIHNhbWUgbnVtYmVyIHRvIHJlYWNoIDIwNDghXFx4MWJbMG0nKTtcbiAgICAgICAgdGhpcy50ZXJtaW5hbC53cml0ZWxuKCcnKTtcbiAgICAgICAgXG4gICAgICAgIGlmICh0aGlzLmdhbWVTdGF0ZS5wYXVzZWQpIHtcbiAgICAgICAgICAgIHRoaXMudGVybWluYWwud3JpdGVsbignXFx4MWJbNDNtXFx4MWJbMzBtIOKPuO+4jyAgUEFVU0VEIC0gUHJlc3MgU1BBQ0UgdG8gY29udGludWUgXFx4MWJbMG0nKTtcbiAgICAgICAgICAgIHRoaXMudGVybWluYWwud3JpdGVsbignJyk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHRoaXMudGVybWluYWwud3JpdGVsbihgU2NvcmU6IFxceDFiWzM2bSR7dGhpcy5nYW1lU3RhdGUuc2NvcmV9XFx4MWJbMG1gKTtcbiAgICAgICAgdGhpcy50ZXJtaW5hbC53cml0ZWxuKCcnKTtcblxuICAgICAgICAvLyBEcmF3IGJvYXJkIHdpdGggbW9yZSBjb21wYWN0IGxheW91dFxuICAgICAgICB0aGlzLnRlcm1pbmFsLndyaXRlbG4oJ+KUjCcgKyAn4pSA4pSA4pSA4pSA4pSsJy5yZXBlYXQodGhpcy5nYW1lU3RhdGUuc2l6ZSAtIDEpICsgJ+KUgOKUgOKUgOKUgOKUkCcpO1xuICAgICAgICBcbiAgICAgICAgZm9yIChsZXQgcm93ID0gMDsgcm93IDwgdGhpcy5nYW1lU3RhdGUuc2l6ZTsgcm93KyspIHtcbiAgICAgICAgICAgIGxldCBsaW5lID0gJ+KUgic7XG4gICAgICAgICAgICBmb3IgKGxldCBjb2wgPSAwOyBjb2wgPCB0aGlzLmdhbWVTdGF0ZS5zaXplOyBjb2wrKykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5nYW1lU3RhdGUuYm9hcmRbcm93XVtjb2xdO1xuICAgICAgICAgICAgICAgIGxldCBjZWxsQ29udGVudDtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBpZiAodmFsdWUgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgY2VsbENvbnRlbnQgPSAnICAgICc7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY29sb3IgPSB0aGlzLmNvbG9yc1t2YWx1ZV0gfHwgJ1xceDFiWzM3bSc7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHRleHQgPSB2YWx1ZS50b1N0cmluZygpLnBhZFN0YXJ0KDQpO1xuICAgICAgICAgICAgICAgICAgICBjZWxsQ29udGVudCA9IGAke2NvbG9yfSR7dGV4dH1cXHgxYlswbWA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGxpbmUgKz0gY2VsbENvbnRlbnQ7XG4gICAgICAgICAgICAgICAgaWYgKGNvbCA8IHRoaXMuZ2FtZVN0YXRlLnNpemUgLSAxKSBsaW5lICs9ICfilIInO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGluZSArPSAn4pSCJztcbiAgICAgICAgICAgIHRoaXMudGVybWluYWwud3JpdGVsbihsaW5lKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKHJvdyA8IHRoaXMuZ2FtZVN0YXRlLnNpemUgLSAxKSB7XG4gICAgICAgICAgICAgICAgdGhpcy50ZXJtaW5hbC53cml0ZWxuKCfilJwnICsgJ+KUgOKUgOKUgOKUgOKUvCcucmVwZWF0KHRoaXMuZ2FtZVN0YXRlLnNpemUgLSAxKSArICfilIDilIDilIDilIDilKQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgdGhpcy50ZXJtaW5hbC53cml0ZWxuKCfilJQnICsgJ+KUgOKUgOKUgOKUgOKUtCcucmVwZWF0KHRoaXMuZ2FtZVN0YXRlLnNpemUgLSAxKSArICfilIDilIDilIDilIDilJgnKTtcbiAgICB9XG5cbiAgICB3aW5HYW1lKCkge1xuICAgICAgICB0aGlzLmdhbWVTdGF0ZS5nYW1lUnVubmluZyA9IGZhbHNlO1xuICAgICAgICBcbiAgICAgICAgLy8gRGlzcG9zZSBvZiB0aGUga2V5IGhhbmRsZXJcbiAgICAgICAgaWYgKHRoaXMua2V5RGlzcG9zYWJsZSkge1xuICAgICAgICAgICAgdGhpcy5rZXlEaXNwb3NhYmxlLmRpc3Bvc2UoKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgdGhpcy5zYXZlSGlnaFNjb3JlKCk7XG4gICAgICAgIFxuICAgICAgICB0aGlzLnRlcm1pbmFsLndyaXRlbG4oJ1xcblxceDFiWzMybfCfjokgQ09OR1JBVFVMQVRJT05TISBZT1UgUkVBQ0hFRCAyMDQ4ISDwn46JXFx4MWJbMG0nKTtcbiAgICAgICAgdGhpcy50ZXJtaW5hbC53cml0ZWxuKGBGaW5hbCBTY29yZTogXFx4MWJbMzZtJHt0aGlzLmdhbWVTdGF0ZS5zY29yZX1cXHgxYlswbWApO1xuICAgICAgICB0aGlzLnRlcm1pbmFsLndyaXRlUHJvbXB0KCk7XG4gICAgfVxuXG4gICAgZW5kR2FtZSgpIHtcbiAgICAgICAgdGhpcy5nYW1lU3RhdGUuZ2FtZVJ1bm5pbmcgPSBmYWxzZTtcbiAgICAgICAgXG4gICAgICAgIC8vIERpc3Bvc2Ugb2YgdGhlIGtleSBoYW5kbGVyXG4gICAgICAgIGlmICh0aGlzLmtleURpc3Bvc2FibGUpIHtcbiAgICAgICAgICAgIHRoaXMua2V5RGlzcG9zYWJsZS5kaXNwb3NlKCk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGhpZ2hTY29yZSA9IHRoaXMuc2F2ZUhpZ2hTY29yZSgpO1xuICAgICAgICBcbiAgICAgICAgdGhpcy50ZXJtaW5hbC53cml0ZWxuKCdcXG5cXHgxYlszMW1HYW1lIE92ZXIhXFx4MWJbMG0nKTtcbiAgICAgICAgdGhpcy50ZXJtaW5hbC53cml0ZWxuKGBGaW5hbCBTY29yZTogXFx4MWJbMzZtJHt0aGlzLmdhbWVTdGF0ZS5zY29yZX1cXHgxYlswbWApO1xuICAgICAgICB0aGlzLnRlcm1pbmFsLndyaXRlbG4oYEhpZ2ggU2NvcmU6IFxceDFiWzMzbSR7aGlnaFNjb3JlfVxceDFiWzBtYCk7XG4gICAgICAgIHRoaXMudGVybWluYWwud3JpdGVQcm9tcHQoKTtcbiAgICB9XG5cbiAgICBzYXZlSGlnaFNjb3JlKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3Qgc3RvcmVkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJzIwNDhfaGlnaF9zY29yZScpO1xuICAgICAgICAgICAgY29uc3QgY3VycmVudEhpZ2ggPSBzdG9yZWQgPyBwYXJzZUludChzdG9yZWQpIDogMDtcbiAgICAgICAgICAgIGNvbnN0IG5ld0hpZ2ggPSBNYXRoLm1heChjdXJyZW50SGlnaCwgdGhpcy5nYW1lU3RhdGUuc2NvcmUpO1xuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJzIwNDhfaGlnaF9zY29yZScsIG5ld0hpZ2gudG9TdHJpbmcoKSk7XG4gICAgICAgICAgICByZXR1cm4gbmV3SGlnaDtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2FtZVN0YXRlLnNjb3JlO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBHYW1lMjA0ODsiXSwibmFtZXMiOlsiR2FtZTIwNDgiLCJfY2xhc3NDYWxsQ2hlY2siLCJnYW1lU3RhdGUiLCJib2FyZCIsInNjb3JlIiwiZ2FtZVJ1bm5pbmciLCJwYXVzZWQiLCJzaXplIiwidGVybWluYWwiLCJjb2xvcnMiLCJfY3JlYXRlQ2xhc3MiLCJrZXkiLCJ2YWx1ZSIsIl9leGVjdXRlIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJfcmVnZW5lcmF0b3JSdW50aW1lIiwibWFyayIsIl9jYWxsZWUiLCJhcmdzIiwid3JhcCIsIl9jYWxsZWUkIiwiX2NvbnRleHQiLCJwcmV2IiwibmV4dCIsInN0YXJ0R2FtZSIsImVycm9yIiwiY29uc29sZSIsIndyaXRlbG4iLCJzdG9wIiwiZXhlY3V0ZSIsIl94IiwiX3gyIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJjbGVhciIsImluaXRCb2FyZCIsImFkZFJhbmRvbVRpbGUiLCJzZXR1cElucHV0SGFuZGxlciIsInJlbmRlckdhbWUiLCJfdGhpcyIsIkFycmF5IiwiZmlsbCIsIm1hcCIsImVtcHR5Q2VsbHMiLCJyb3ciLCJjb2wiLCJwdXNoIiwibGVuZ3RoIiwicmFuZG9tQ2VsbCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsIl90aGlzMiIsImtleURpc3Bvc2FibGUiLCJvbktleSIsImV2ZW50IiwidG9Mb3dlckNhc2UiLCJkb21FdmVudCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwibW92ZWQiLCJlbmRHYW1lIiwibW92ZSIsImNoZWNrV2luIiwid2luR2FtZSIsImNoZWNrR2FtZU92ZXIiLCJkaXJlY3Rpb24iLCJuZXdCb2FyZCIsIl90b0NvbnN1bWFibGVBcnJheSIsInNjb3JlSW5jcmVhc2UiLCJsaW5lIiwic2xpY2UiLCJyZXZlcnNlIiwiX3RoaXMkbWVyZ2VMaW5lIiwibWVyZ2VMaW5lIiwibmV3TGluZSIsImZpbmFsTGluZSIsImFycmF5c0VxdWFsIiwiX2xpbmUiLCJfcm93IiwiX3RoaXMkbWVyZ2VMaW5lMiIsIl9uZXdMaW5lIiwiX3Njb3JlIiwiX3JvdzIiLCJuZXdWYWx1ZSIsImJvYXJkUm93IiwiZmlsdGVyZWQiLCJmaWx0ZXIiLCJ2YWwiLCJpIiwic3BsaWNlIiwiYSIsImIiLCJldmVyeSIsIl9yb3czIiwiX2NvbCIsImN1cnJlbnQiLCJ3cml0ZSIsImNvbmNhdCIsInJlcGVhdCIsImNlbGxDb250ZW50IiwiY29sb3IiLCJ0ZXh0IiwidG9TdHJpbmciLCJwYWRTdGFydCIsImRpc3Bvc2UiLCJzYXZlSGlnaFNjb3JlIiwid3JpdGVQcm9tcHQiLCJoaWdoU2NvcmUiLCJzdG9yZWQiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiY3VycmVudEhpZ2giLCJwYXJzZUludCIsIm5ld0hpZ2giLCJtYXgiLCJzZXRJdGVtIiwiZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6636\n");

/***/ }),

/***/ 4960:
/*!*************************************************************!*\
  !*** ./resources/js/components/terminal/games/SnakeGame.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 4467);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n\n/**\n * Snake Game - Classic snake game for the terminal\n * Arrow keys or WASD to move, Q to quit, SPACE to pause\n * @class\n */\nvar SnakeGame = /*#__PURE__*/function () {\n  /**\n   * Initialize Snake Game\n   * @constructor\n   */\n  function SnakeGame() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, SnakeGame);\n    this.gameState = {\n      board: [],\n      snake: [{\n        x: 10,\n        y: 10\n      }],\n      food: {\n        x: 15,\n        y: 10\n      },\n      direction: {\n        x: 1,\n        y: 0\n      },\n      score: 0,\n      gameRunning: false,\n      paused: false,\n      width: 30,\n      height: 20\n    };\n    this.gameInterval = null;\n    this.terminal = null;\n    this.keyDisposable = null;\n  }\n\n  /**\n   * Execute game from terminal command\n   * @param {Array} args - Command arguments\n   * @param {Terminal} terminal - Terminal instance\n   * @returns {Promise<void>}\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(SnakeGame, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee(args, terminal) {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                this.terminal = terminal;\n                this.startGame();\n              } catch (error) {\n                console.error('SnakeGame: Failed to start:', error);\n                terminal.writeln('\\x1b[31mError: Failed to start Snake game\\x1b[0m');\n              }\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }, {\n    key: \"startGame\",\n    value: function startGame() {\n      var _this = this;\n      // Completely clear terminal and disable input\n      this.terminal.terminal.write('\\x1b[2J\\x1b[H'); // Clear screen and home cursor\n      this.terminal.setGameRunning(true);\n      this.gameState.gameRunning = true;\n      this.gameState.paused = false;\n\n      // Initialize snake in the center of the board\n      var centerX = Math.floor(this.gameState.width / 2);\n      var centerY = Math.floor(this.gameState.height / 2);\n      this.gameState.snake = [{\n        x: centerX,\n        y: centerY\n      }];\n      this.gameState.food = this.generateFood();\n      this.gameState.score = 0;\n      this.gameState.direction = {\n        x: 1,\n        y: 0\n      }; // Start moving right\n\n      // Initial render to show game immediately\n      this.renderGame();\n\n      // Set up input handler\n      this.setupInputHandler();\n\n      // Start game loop\n      this.gameInterval = setInterval(function () {\n        if (_this.gameState.gameRunning && !_this.gameState.paused) {\n          _this.updateGame();\n          _this.renderGame();\n        }\n      }, 150);\n    }\n  }, {\n    key: \"setupInputHandler\",\n    value: function setupInputHandler() {\n      var _this2 = this;\n      this.keyDisposable = this.terminal.terminal.onKey(function (event) {\n        var key = event.key.toLowerCase();\n\n        // Prevent the key from being echoed to terminal\n        event.domEvent.preventDefault();\n        event.domEvent.stopPropagation();\n        if (key === 'q' || key === '\\x1b') {\n          // Q or ESC\n          _this2.endGame();\n          return;\n        }\n        if (key === ' ') {\n          // Spacebar for pause\n          _this2.gameState.paused = !_this2.gameState.paused;\n          _this2.renderGame();\n          return;\n        }\n\n        // Direction controls - only change if not moving in opposite direction\n        switch (key) {\n          case 'w':\n          case 'arrowup':\n            if (_this2.gameState.direction.y === 0) {\n              _this2.gameState.direction = {\n                x: 0,\n                y: -1\n              };\n            }\n            break;\n          case 's':\n          case 'arrowdown':\n            if (_this2.gameState.direction.y === 0) {\n              _this2.gameState.direction = {\n                x: 0,\n                y: 1\n              };\n            }\n            break;\n          case 'a':\n          case 'arrowleft':\n            if (_this2.gameState.direction.x === 0) {\n              _this2.gameState.direction = {\n                x: -1,\n                y: 0\n              };\n            }\n            break;\n          case 'd':\n          case 'arrowright':\n            if (_this2.gameState.direction.x === 0) {\n              _this2.gameState.direction = {\n                x: 1,\n                y: 0\n              };\n            }\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"updateGame\",\n    value: function updateGame() {\n      // Don't update if game is not running\n      if (!this.gameState.gameRunning) {\n        return;\n      }\n      var head = _objectSpread({}, this.gameState.snake[0]);\n      head.x += this.gameState.direction.x;\n      head.y += this.gameState.direction.y;\n\n      // Check wall collision\n      if (head.x < 0 || head.x >= this.gameState.width || head.y < 0 || head.y >= this.gameState.height) {\n        this.endGame();\n        return;\n      }\n\n      // Check self collision - check if new head position collides with body segments (excluding current head)\n      for (var i = 1; i < this.gameState.snake.length; i++) {\n        var segment = this.gameState.snake[i];\n        if (segment.x === head.x && segment.y === head.y) {\n          this.endGame();\n          return;\n        }\n      }\n\n      // Add new head\n      this.gameState.snake.unshift(head);\n\n      // Check food collision\n      if (head.x === this.gameState.food.x && head.y === this.gameState.food.y) {\n        this.gameState.score += 10;\n        this.gameState.food = this.generateFood();\n        // Don't remove tail when eating food (snake grows)\n      } else {\n        // Remove tail when not eating food (snake moves)\n        this.gameState.snake.pop();\n      }\n    }\n  }, {\n    key: \"generateFood\",\n    value: function generateFood() {\n      var food;\n      do {\n        food = {\n          x: Math.floor(Math.random() * this.gameState.width),\n          y: Math.floor(Math.random() * this.gameState.height)\n        };\n      } while (this.gameState.snake.some(function (segment) {\n        return segment.x === food.x && segment.y === food.y;\n      }));\n      return food;\n    }\n  }, {\n    key: \"renderGame\",\n    value: function renderGame() {\n      var _this3 = this;\n      // Clear screen and move cursor to home\n      this.terminal.terminal.write('\\x1b[2J\\x1b[H');\n      this.terminal.writeln('\\x1b[32müêç SNAKE GAME\\x1b[0m');\n      this.terminal.writeln('\\x1b[90mWASD/Arrow Keys: Move | SPACE: Pause | Q/ESC: Quit\\x1b[0m');\n      this.terminal.writeln(\"Score: \\x1B[36m\".concat(this.gameState.score, \"\\x1B[0m | Length: \\x1B[33m\").concat(this.gameState.snake.length, \"\\x1B[0m\"));\n      if (this.gameState.paused) {\n        this.terminal.writeln('\\x1b[43m\\x1b[30m ‚è∏Ô∏è  PAUSED - Press SPACE to continue \\x1b[0m');\n      }\n      this.terminal.writeln('');\n\n      // Draw game board with borders\n      this.terminal.writeln('‚îå' + '‚îÄ'.repeat(this.gameState.width) + '‚îê');\n      var _loop = function _loop(y) {\n        var line = '‚îÇ';\n        var _loop2 = function _loop2(x) {\n          if (_this3.gameState.snake.some(function (segment) {\n            return segment.x === x && segment.y === y;\n          })) {\n            if (x === _this3.gameState.snake[0].x && y === _this3.gameState.snake[0].y) {\n              line += '\\x1b[32m‚óè\\x1b[0m'; // Head (solid circle)\n            } else {\n              line += '\\x1b[32m‚óã\\x1b[0m'; // Body (hollow circle)\n            }\n          } else if (x === _this3.gameState.food.x && y === _this3.gameState.food.y) {\n            line += '\\x1b[31m‚ô¶\\x1b[0m'; // Food (diamond)\n          } else {\n            line += ' ';\n          }\n        };\n        for (var x = 0; x < _this3.gameState.width; x++) {\n          _loop2(x);\n        }\n        line += '‚îÇ';\n        _this3.terminal.writeln(line);\n      };\n      for (var y = 0; y < this.gameState.height; y++) {\n        _loop(y);\n      }\n      this.terminal.writeln('‚îî' + '‚îÄ'.repeat(this.gameState.width) + '‚îò');\n    }\n  }, {\n    key: \"endGame\",\n    value: function endGame() {\n      var _this4 = this;\n      // Immediately stop the game to prevent further updates\n      this.gameState.gameRunning = false;\n\n      // Clear the game interval\n      if (this.gameInterval) {\n        clearInterval(this.gameInterval);\n        this.gameInterval = null;\n      }\n\n      // Dispose of the key handler\n      if (this.keyDisposable) {\n        this.keyDisposable.dispose();\n        this.keyDisposable = null;\n      }\n\n      // Wait a moment to ensure game loop stops, then show game over\n      setTimeout(function () {\n        // Clear screen and show game over\n        _this4.terminal.terminal.write('\\x1b[2J\\x1b[H');\n\n        // Restore normal terminal input handling\n        _this4.terminal.setGameRunning(false);\n\n        // Save high score\n        var highScore = _this4.saveHighScore();\n\n        // Big, visible game over display\n        _this4.terminal.writeln('');\n        _this4.terminal.writeln('\\x1b[41m\\x1b[37m                                    \\x1b[0m');\n        _this4.terminal.writeln('\\x1b[41m\\x1b[37m         üêç GAME OVER! üêç          \\x1b[0m');\n        _this4.terminal.writeln('\\x1b[41m\\x1b[37m                                    \\x1b[0m');\n        _this4.terminal.writeln('');\n        _this4.terminal.writeln(\"\\x1B[36m\\uD83D\\uDCCA Final Score: \\x1B[33m\".concat(_this4.gameState.score, \"\\x1B[0m\"));\n        _this4.terminal.writeln(\"\\x1B[36m\\uD83C\\uDFC6 High Score: \\x1B[33m\".concat(highScore, \"\\x1B[0m\"));\n        _this4.terminal.writeln(\"\\x1B[36m\\uD83D\\uDCCF Snake Length: \\x1B[33m\".concat(_this4.gameState.snake.length, \"\\x1B[0m\"));\n        if (_this4.gameState.score === highScore && _this4.gameState.score > 0) {\n          _this4.terminal.writeln('');\n          _this4.terminal.writeln('\\x1b[32müéâ NEW HIGH SCORE! üéâ\\x1b[0m');\n        }\n        _this4.terminal.writeln('');\n        _this4.terminal.writeln('\\x1b[90mPress any key to return to terminal...\\x1b[0m');\n\n        // Set up a one-time key handler to return to terminal\n        var returnKeyHandler = _this4.terminal.terminal.onKey(function () {\n          returnKeyHandler.dispose();\n          _this4.terminal.writePrompt();\n        });\n      }, 100); // Small delay to ensure game loop has stopped\n    }\n  }, {\n    key: \"saveHighScore\",\n    value: function saveHighScore() {\n      var storageKey = 'snake_high_score';\n      var currentHigh = parseInt(localStorage.getItem(storageKey)) || 0;\n      var newHigh = Math.max(currentHigh, this.gameState.score);\n      localStorage.setItem(storageKey, newHigh.toString());\n      return newHigh;\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SnakeGame);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4960\n");

/***/ }),

/***/ 8587:
/*!**************************************************************!*\
  !*** ./resources/js/components/terminal/games/TetrisGame.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ 9394);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n/**\n * Tetris Game - Classic block puzzle game for the terminal\n * A/D to move, S for soft drop, W to rotate, Q to quit\n */\nvar TetrisGame = /*#__PURE__*/function () {\n  function TetrisGame() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, TetrisGame);\n    this.gameState = {\n      board: [],\n      currentPiece: null,\n      nextPiece: null,\n      score: 0,\n      level: 1,\n      lines: 0,\n      gameRunning: false,\n      width: 10,\n      height: 20,\n      pieceX: 0,\n      pieceY: 0\n    };\n    this.gameInterval = null;\n    this.terminal = null;\n    this.pieces = [\n    // I-piece (4x4 grid for consistency)\n    [[[0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0]],\n    // Horizontal\n    [[0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0]],\n    // Vertical\n    [[0, 0, 0, 0], [0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0]],\n    // Horizontal\n    [[0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0]] // Vertical\n    ],\n    // O-piece (2x2 - doesn't need rotation)\n    [[[1, 1], [1, 1]]],\n    // T-piece (3x3 grid)\n    [[[0, 1, 0], [1, 1, 1], [0, 0, 0]],\n    // Up\n    [[0, 1, 0], [0, 1, 1], [0, 1, 0]],\n    // Right\n    [[0, 0, 0], [1, 1, 1], [0, 1, 0]],\n    // Down\n    [[0, 1, 0], [1, 1, 0], [0, 1, 0]] // Left\n    ],\n    // S-piece (3x3 grid)\n    [[[0, 1, 1], [1, 1, 0], [0, 0, 0]],\n    // Horizontal\n    [[0, 1, 0], [0, 1, 1], [0, 0, 1]] // Vertical\n    ],\n    // Z-piece (3x3 grid)\n    [[[1, 1, 0], [0, 1, 1], [0, 0, 0]],\n    // Horizontal\n    [[0, 0, 1], [0, 1, 1], [0, 1, 0]] // Vertical\n    ],\n    // J-piece (3x3 grid)\n    [[[1, 0, 0], [1, 1, 1], [0, 0, 0]],\n    // Up\n    [[0, 1, 1], [0, 1, 0], [0, 1, 0]],\n    // Right\n    [[0, 0, 0], [1, 1, 1], [0, 0, 1]],\n    // Down\n    [[0, 1, 0], [0, 1, 0], [1, 1, 0]] // Left\n    ],\n    // L-piece (3x3 grid)\n    [[[0, 0, 1], [1, 1, 1], [0, 0, 0]],\n    // Up\n    [[0, 1, 0], [0, 1, 0], [0, 1, 1]],\n    // Right\n    [[0, 0, 0], [1, 1, 1], [1, 0, 0]],\n    // Down\n    [[1, 1, 0], [0, 1, 0], [0, 1, 0]] // Left\n    ]];\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(TetrisGame, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee(args, terminal) {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                this.terminal = terminal;\n                this.startGame();\n              } catch (error) {\n                console.error('TetrisGame: Failed to start:', error);\n                terminal.writeln('\\x1b[31mError: Failed to start Tetris game\\x1b[0m');\n              }\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }, {\n    key: \"startGame\",\n    value: function startGame() {\n      // Completely clear terminal and disable input\n      this.terminal.terminal.write('\\x1b[2J\\x1b[H'); // Clear screen and home cursor\n      this.terminal.setGameRunning(true);\n      this.gameState.gameRunning = true;\n      this.gameState.score = 0;\n      this.gameState.level = 1;\n      this.gameState.lines = 0;\n      this.initBoard();\n      this.spawnPiece();\n\n      // Initial render to show game immediately\n      this.renderGame();\n      this.setupInputHandler();\n      this.gameLoop();\n    }\n  }, {\n    key: \"initBoard\",\n    value: function initBoard() {\n      var _this = this;\n      this.gameState.board = Array(this.gameState.height).fill().map(function () {\n        return Array(_this.gameState.width).fill(0);\n      });\n    }\n  }, {\n    key: \"spawnPiece\",\n    value: function spawnPiece() {\n      var pieceIndex = Math.floor(Math.random() * this.pieces.length);\n      this.gameState.currentPiece = {\n        shape: this.pieces[pieceIndex][0],\n        type: pieceIndex,\n        rotation: 0\n      };\n\n      // Handle different piece sizes for proper centering\n      var pieceWidth;\n      if (pieceIndex === 0) {\n        // I-piece (4x4)\n        pieceWidth = 4;\n        this.gameState.pieceX = Math.floor((this.gameState.width - pieceWidth) / 2);\n        this.gameState.pieceY = -2; // Start higher for I-piece\n      } else if (pieceIndex === 1) {\n        // O-piece (2x2)\n        pieceWidth = 2;\n        this.gameState.pieceX = Math.floor((this.gameState.width - pieceWidth) / 2);\n        this.gameState.pieceY = 0;\n      } else {\n        // All other pieces (3x3)\n        pieceWidth = 3;\n        this.gameState.pieceX = Math.floor((this.gameState.width - pieceWidth) / 2);\n        this.gameState.pieceY = -1;\n      }\n\n      // Check for game over\n      if (this.checkCollision()) {\n        this.endGame();\n        return;\n      }\n\n      // Update the game loop speed based on level\n      this.updateGameSpeed();\n    }\n  }, {\n    key: \"setupInputHandler\",\n    value: function setupInputHandler() {\n      var _this2 = this;\n      this.keyDisposable = this.terminal.terminal.onKey(function (event) {\n        if (!_this2.gameState.gameRunning) return;\n        var key = event.key.toLowerCase();\n\n        // Prevent the key from being echoed to terminal\n        event.domEvent.preventDefault();\n        event.domEvent.stopPropagation();\n        var shouldRender = false;\n        switch (key) {\n          case 'q':\n          case '\\x1b':\n            // ESC\n            _this2.endGame();\n            return;\n          case 'a':\n          case 'arrowleft':\n            shouldRender = _this2.movePiece(-1, 0);\n            break;\n          case 'd':\n          case 'arrowright':\n            shouldRender = _this2.movePiece(1, 0);\n            break;\n          case 's':\n          case 'arrowdown':\n            shouldRender = _this2.movePiece(0, 1) || !_this2.gameState.gameRunning;\n            break;\n          case 'w':\n          case 'arrowup':\n            _this2.rotatePiece();\n            shouldRender = true;\n            break;\n        }\n\n        // Only render if something actually changed\n        if (shouldRender) {\n          _this2.renderGame();\n        }\n      });\n    }\n  }, {\n    key: \"movePiece\",\n    value: function movePiece(dx, dy) {\n      var oldX = this.gameState.pieceX;\n      var oldY = this.gameState.pieceY;\n      this.gameState.pieceX += dx;\n      this.gameState.pieceY += dy;\n      if (this.checkCollision()) {\n        // Revert movement\n        this.gameState.pieceX = oldX;\n        this.gameState.pieceY = oldY;\n\n        // If this was a downward movement that failed, place the piece\n        if (dy > 0) {\n          this.placePiece();\n          this.clearLines();\n          this.spawnPiece();\n          return false; // Indicate piece was placed\n        }\n        return false; // Movement failed\n      }\n      return true; // Movement successful\n    }\n  }, {\n    key: \"rotatePiece\",\n    value: function rotatePiece() {\n      var piece = this.gameState.currentPiece;\n      var rotations = this.pieces[piece.type];\n\n      // Skip rotation for O-piece (square) since it's the same in all rotations\n      if (piece.type === 1) return;\n      var newRotation = (piece.rotation + 1) % rotations.length;\n      var oldShape = piece.shape;\n      var oldRotation = piece.rotation;\n      var oldX = this.gameState.pieceX;\n\n      // Try the rotation\n      piece.shape = rotations[newRotation];\n      piece.rotation = newRotation;\n\n      // If collision, try wall kicks (simple adjustments)\n      if (this.checkCollision()) {\n        // Try moving left one space\n        this.gameState.pieceX = oldX - 1;\n        if (this.checkCollision()) {\n          // Try moving right one space from original position\n          this.gameState.pieceX = oldX + 1;\n          if (this.checkCollision()) {\n            // Try moving right two spaces from original position\n            this.gameState.pieceX = oldX + 2;\n            if (this.checkCollision()) {\n              // For I-piece, try moving left two spaces\n              if (piece.type === 0) {\n                this.gameState.pieceX = oldX - 2;\n                if (this.checkCollision()) {\n                  // Rotation failed completely, revert everything\n                  this.gameState.pieceX = oldX;\n                  piece.shape = oldShape;\n                  piece.rotation = oldRotation;\n                }\n              } else {\n                // Rotation failed, revert everything\n                this.gameState.pieceX = oldX;\n                piece.shape = oldShape;\n                piece.rotation = oldRotation;\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"checkCollision\",\n    value: function checkCollision() {\n      var piece = this.gameState.currentPiece.shape;\n      var px = this.gameState.pieceX;\n      var py = this.gameState.pieceY;\n      for (var y = 0; y < piece.length; y++) {\n        for (var x = 0; x < piece[y].length; x++) {\n          if (piece[y][x]) {\n            var newX = px + x;\n            var newY = py + y;\n            if (newX < 0 || newX >= this.gameState.width || newY >= this.gameState.height || newY >= 0 && this.gameState.board[newY][newX]) {\n              return true;\n            }\n          }\n        }\n      }\n      return false;\n    }\n  }, {\n    key: \"placePiece\",\n    value: function placePiece() {\n      var piece = this.gameState.currentPiece.shape;\n      var px = this.gameState.pieceX;\n      var py = this.gameState.pieceY;\n      for (var y = 0; y < piece.length; y++) {\n        for (var x = 0; x < piece[y].length; x++) {\n          if (piece[y][x] && py + y >= 0) {\n            this.gameState.board[py + y][px + x] = this.gameState.currentPiece.type + 1;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"clearLines\",\n    value: function clearLines() {\n      var linesCleared = 0;\n\n      // Check each row from bottom to top\n      for (var y = this.gameState.height - 1; y >= 0; y--) {\n        if (this.gameState.board[y].every(function (cell) {\n          return cell !== 0;\n        })) {\n          // Remove the completed line\n          this.gameState.board.splice(y, 1);\n          // Add a new empty line at the top\n          this.gameState.board.unshift(Array(this.gameState.width).fill(0));\n          linesCleared++;\n          y++; // Check the same row again since we removed one\n        }\n      }\n      if (linesCleared > 0) {\n        this.gameState.lines += linesCleared;\n\n        // Scoring system: more lines at once = more points\n        var baseScore = [0, 40, 100, 300, 1200][linesCleared] || 1200;\n        this.gameState.score += baseScore * this.gameState.level;\n\n        // Level up every 10 lines\n        var newLevel = Math.floor(this.gameState.lines / 10) + 1;\n        if (newLevel > this.gameState.level) {\n          this.gameState.level = newLevel;\n          this.updateGameSpeed(); // Increase speed for new level\n        }\n      }\n    }\n  }, {\n    key: \"updateGameSpeed\",\n    value: function updateGameSpeed() {\n      var _this3 = this;\n      if (this.gameInterval) {\n        clearInterval(this.gameInterval);\n      }\n\n      // Speed increases with level, minimum 50ms\n      var speed = Math.max(50, 800 - (this.gameState.level - 1) * 75);\n      this.gameInterval = setInterval(function () {\n        if (_this3.gameState.gameRunning) {\n          var moved = _this3.movePiece(0, 1);\n          // Only render if something changed\n          if (!moved || _this3.gameState.gameRunning) {\n            _this3.renderGame();\n          }\n        }\n      }, speed);\n    }\n  }, {\n    key: \"gameLoop\",\n    value: function gameLoop() {\n      this.updateGameSpeed();\n    }\n  }, {\n    key: \"renderGame\",\n    value: function renderGame() {\n      // Clear screen and move cursor to home\n      this.terminal.terminal.write('\\x1b[2J\\x1b[H');\n      this.terminal.writeln('\\x1b[35müß© TETRIS\\x1b[0m');\n      this.terminal.writeln('\\x1b[90mA/D: Move | S: Drop | W: Rotate | Q/ESC: Quit\\x1b[0m');\n      this.terminal.writeln(\"Score: \\x1B[36m\".concat(this.gameState.score, \"\\x1B[0m | Level: \\x1B[33m\").concat(this.gameState.level, \"\\x1B[0m | Lines: \\x1B[32m\").concat(this.gameState.lines, \"\\x1B[0m\"));\n      this.terminal.writeln('');\n\n      // Create display board\n      var display = this.gameState.board.map(function (row) {\n        return (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(row);\n      });\n\n      // Add current piece\n      if (this.gameState.currentPiece) {\n        var piece = this.gameState.currentPiece.shape;\n        var px = this.gameState.pieceX;\n        var py = this.gameState.pieceY;\n        for (var y = 0; y < piece.length; y++) {\n          for (var x = 0; x < piece[y].length; x++) {\n            if (piece[y][x] && py + y >= 0 && py + y < this.gameState.height && px + x >= 0 && px + x < this.gameState.width) {\n              display[py + y][px + x] = -1; // Current piece marker\n            }\n          }\n        }\n      }\n\n      // Render board\n      this.terminal.writeln('‚îå' + '‚îÄ'.repeat(this.gameState.width) + '‚îê');\n      for (var _y = 0; _y < this.gameState.height; _y++) {\n        var line = '‚îÇ';\n        for (var _x3 = 0; _x3 < this.gameState.width; _x3++) {\n          var cell = display[_y][_x3];\n          if (cell === -1) {\n            line += '\\x1b[43m \\x1b[0m'; // Current piece (yellow)\n          } else if (cell === 0) {\n            line += ' '; // Empty\n          } else {\n            var colors = ['\\x1b[41m \\x1b[0m',\n            // Red\n            '\\x1b[42m \\x1b[0m',\n            // Green  \n            '\\x1b[44m \\x1b[0m',\n            // Blue\n            '\\x1b[45m \\x1b[0m',\n            // Magenta\n            '\\x1b[46m \\x1b[0m',\n            // Cyan\n            '\\x1b[47m \\x1b[0m',\n            // White\n            '\\x1b[40m \\x1b[0m' // Black\n            ];\n            line += colors[(cell - 1) % colors.length];\n          }\n        }\n        line += '‚îÇ';\n        this.terminal.writeln(line);\n      }\n      this.terminal.writeln('‚îî' + '‚îÄ'.repeat(this.gameState.width) + '‚îò');\n    }\n  }, {\n    key: \"endGame\",\n    value: function endGame() {\n      var _this4 = this;\n      this.gameState.gameRunning = false;\n      if (this.gameInterval) {\n        clearInterval(this.gameInterval);\n        this.gameInterval = null;\n      }\n\n      // Dispose of the key handler\n      if (this.keyDisposable) {\n        this.keyDisposable.dispose();\n        this.keyDisposable = null;\n      }\n\n      // Clear screen and show game over\n      this.terminal.terminal.write('\\x1b[2J\\x1b[H');\n\n      // Restore normal terminal input handling\n      this.terminal.setGameRunning(false);\n      this.terminal.writeln('');\n      this.terminal.writeln('\\x1b[41m\\x1b[37m                                    \\x1b[0m');\n      this.terminal.writeln('\\x1b[41m\\x1b[37m        üß© GAME OVER! üß©         \\x1b[0m');\n      this.terminal.writeln('\\x1b[41m\\x1b[37m                                    \\x1b[0m');\n      this.terminal.writeln('');\n      this.terminal.writeln(\"\\x1B[36m\\uD83D\\uDCCA Final Score: \\x1B[33m\".concat(this.gameState.score, \"\\x1B[0m\"));\n      this.terminal.writeln(\"\\x1B[36m\\uD83C\\uDFC6 Level Reached: \\x1B[33m\".concat(this.gameState.level, \"\\x1B[0m\"));\n      this.terminal.writeln(\"\\x1B[36m\\uD83D\\uDCC8 Lines Cleared: \\x1B[33m\".concat(this.gameState.lines, \"\\x1B[0m\"));\n      this.terminal.writeln('');\n      this.terminal.writeln('\\x1b[90mPress any key to return to terminal...\\x1b[0m');\n\n      // Set up a one-time key handler to return to terminal\n      var returnKeyHandler = this.terminal.terminal.onKey(function (event) {\n        event.domEvent.preventDefault();\n        event.domEvent.stopPropagation();\n        returnKeyHandler.dispose();\n        _this4.terminal.writePrompt();\n      });\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TetrisGame);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8587\n");

/***/ }),

/***/ 6305:
/*!**************************************************************!*\
  !*** ./resources/js/components/terminal/games/TypingGame.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n/**\n * Typing Test Game - Measure typing speed and accuracy\n * Type the displayed text as quickly and accurately as possible\n */\nvar TypingGame = /*#__PURE__*/function () {\n  function TypingGame() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, TypingGame);\n    this.gameState = {\n      text: '',\n      currentIndex: 0,\n      startTime: null,\n      endTime: null,\n      errors: 0,\n      correctChars: 0,\n      totalChars: 0,\n      wpm: 0,\n      accuracy: 100,\n      gameRunning: false,\n      userInput: ''\n    };\n    this.terminal = null;\n    this.keyDisposable = null;\n    this.difficulty = 'medium'; // easy, medium, hard\n    this.testTexts = {\n      easy: [\"The cat sat on the mat.\", \"A quick brown fox jumps over a lazy dog.\", \"Hello world! This is an easy typing test.\", \"Simple words make typing practice fun and easy.\"],\n      medium: [\"The quick brown fox jumps over the lazy dog. This pangram contains every letter of the English alphabet at least once.\", \"In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole filled with worms and oozy smells.\", \"Programming is the art of telling another human what one wants the computer to do. It requires logical thinking and creativity.\", \"Artificial intelligence is intelligence demonstrated by machines, in contrast to the natural intelligence displayed by humans.\", \"The best way to predict the future is to invent it. Technology advances through innovation and persistent effort.\"],\n      hard: [\"Code is like humor. When you have to explain it, it's bad. Good code should be self-documenting and elegant.\", \"Debugging is twice as hard as writing the code in the first place. Therefore, if you write code as cleverly as possible, you are not smart enough to debug it.\", \"The complexity of software is an essential property, not an accidental one. Hence, descriptions of a software entity that abstract away its complexity often abstract away its essence.\", \"Any fool can write code that a computer can understand. Good programmers write code that humans can understand. - Martin Fowler\", \"First, solve the problem. Then, write the code. Don't try to do both at the same time, or you'll end up with neither working properly.\"]\n    };\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(TypingGame, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        var diff;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                this.terminal = terminal;\n\n                // Check for difficulty argument\n                if (args.length > 0) {\n                  diff = args[0].toLowerCase();\n                  if (['easy', 'medium', 'hard'].includes(diff)) {\n                    this.difficulty = diff;\n                  }\n                }\n                this.showDifficultySelection();\n              } catch (error) {\n                console.error('TypingGame: Failed to start:', error);\n                terminal.writeln('\\x1b[31mError: Failed to start typing game\\x1b[0m');\n              }\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }, {\n    key: \"showDifficultySelection\",\n    value: function showDifficultySelection() {\n      this.terminal.terminal.write('\\x1b[2J\\x1b[H');\n      this.terminal.writeln('\\x1b[34m‚å®Ô∏è  TYPING SPEED TEST\\x1b[0m');\n      this.terminal.writeln('\\x1b[90mSelect difficulty or start with current setting\\x1b[0m');\n      this.terminal.writeln('');\n      this.terminal.writeln(\"Current difficulty: \\x1B[33m\".concat(this.difficulty.toUpperCase(), \"\\x1B[0m\"));\n      this.terminal.writeln('');\n      this.terminal.writeln('\\x1b[36m1\\x1b[0m - Easy (short, simple words)');\n      this.terminal.writeln('\\x1b[33m2\\x1b[0m - Medium (standard sentences)');\n      this.terminal.writeln('\\x1b[31m3\\x1b[0m - Hard (complex programming text)');\n      this.terminal.writeln('');\n      this.terminal.writeln('\\x1b[32mENTER\\x1b[0m - Start test with current difficulty');\n      this.terminal.writeln('\\x1b[90mESC / Ctrl+C\\x1b[0m - Return to terminal');\n      this.setupDifficultyHandler();\n    }\n  }, {\n    key: \"setupDifficultyHandler\",\n    value: function setupDifficultyHandler() {\n      var _this = this;\n      // Dispose of any existing handler first to prevent accumulation\n      if (this.keyDisposable) {\n        this.keyDisposable.dispose();\n        this.keyDisposable = null;\n      }\n      this.keyDisposable = this.terminal.terminal.onKey(function (event) {\n        var key = event.key;\n        event.domEvent.preventDefault();\n        event.domEvent.stopPropagation();\n\n        // Handle ESC and Ctrl+C to quit\n        if (key === '\\x1b' || key === '\\x03') {\n          // ESC or Ctrl+C\n          if (_this.keyDisposable) {\n            _this.keyDisposable.dispose();\n            _this.keyDisposable = null;\n          }\n          _this.terminal.setGameRunning(false);\n          _this.terminal.writePrompt();\n          return;\n        }\n        if (key === '\\r' || key === '\\n') {\n          // ENTER\n          if (_this.keyDisposable) {\n            _this.keyDisposable.dispose();\n            _this.keyDisposable = null;\n          }\n          _this.startTest();\n          return;\n        }\n        if (key === '1') {\n          _this.difficulty = 'easy';\n          _this.showDifficultySelection();\n        } else if (key === '2') {\n          _this.difficulty = 'medium';\n          _this.showDifficultySelection();\n        } else if (key === '3') {\n          _this.difficulty = 'hard';\n          _this.showDifficultySelection();\n        }\n      });\n    }\n  }, {\n    key: \"startTest\",\n    value: function startTest() {\n      // Completely clear terminal and disable input\n      this.terminal.terminal.write('\\x1b[2J\\x1b[H'); // Clear screen and home cursor\n      this.terminal.setGameRunning(true);\n\n      // Select random text based on difficulty\n      var texts = this.testTexts[this.difficulty];\n      this.gameState.text = texts[Math.floor(Math.random() * texts.length)];\n\n      // Reset all game state\n      this.gameState.gameRunning = true;\n      this.gameState.currentIndex = 0;\n      this.gameState.userInput = '';\n      this.gameState.errors = 0;\n      this.gameState.correctChars = 0;\n      this.gameState.totalChars = 0;\n      this.gameState.wpm = 0;\n      this.gameState.accuracy = 100;\n      this.gameState.startTime = null;\n      this.gameState.endTime = null;\n      this.setupInputHandler();\n      this.renderTest();\n    }\n  }, {\n    key: \"setupInputHandler\",\n    value: function setupInputHandler() {\n      var _this2 = this;\n      // Dispose of any existing handler first\n      if (this.keyDisposable) {\n        this.keyDisposable.dispose();\n        this.keyDisposable = null;\n      }\n      this.keyDisposable = this.terminal.terminal.onKey(function (event) {\n        if (!_this2.gameState.gameRunning) return;\n        var key = event.key;\n\n        // Prevent the key from being echoed to terminal\n        event.domEvent.preventDefault();\n        event.domEvent.stopPropagation();\n\n        // Handle ESC and Ctrl+C to quit\n        if (key === '\\x1b' || key === '\\x03') {\n          // ESC or Ctrl+C\n          _this2.endTest();\n          return;\n        }\n        if (key === '\\x7f' || key === '\\b') {\n          // Backspace\n          if (_this2.gameState.userInput.length > 0) {\n            _this2.gameState.userInput = _this2.gameState.userInput.slice(0, -1);\n            if (_this2.gameState.currentIndex > 0) {\n              _this2.gameState.currentIndex--;\n            }\n            _this2.renderTest();\n          }\n          return;\n        }\n\n        // Regular character input\n        if (key.length === 1 && key.charCodeAt(0) >= 32) {\n          if (!_this2.gameState.startTime) {\n            _this2.gameState.startTime = Date.now();\n          }\n          _this2.gameState.userInput += key;\n          _this2.gameState.totalChars++;\n          if (key === _this2.gameState.text[_this2.gameState.currentIndex]) {\n            _this2.gameState.correctChars++;\n            _this2.gameState.currentIndex++;\n          } else {\n            _this2.gameState.errors++;\n            // Still advance to next character for continued typing\n            _this2.gameState.currentIndex++;\n          }\n          _this2.gameState.accuracy = Math.round(_this2.gameState.correctChars / _this2.gameState.totalChars * 100);\n\n          // Calculate WPM\n          if (_this2.gameState.startTime) {\n            var elapsed = (Date.now() - _this2.gameState.startTime) / 1000 / 60;\n            var wordsTyped = _this2.gameState.currentIndex / 5;\n            _this2.gameState.wpm = Math.round(wordsTyped / elapsed);\n          }\n          if (_this2.gameState.currentIndex >= _this2.gameState.text.length) {\n            _this2.gameState.endTime = Date.now();\n            _this2.endTest();\n            return;\n          }\n          _this2.renderTest();\n        }\n      });\n    }\n  }, {\n    key: \"renderTest\",\n    value: function renderTest() {\n      // Clear screen and move cursor to home\n      this.terminal.terminal.write('\\x1b[2J\\x1b[H');\n      this.terminal.writeln('\\x1b[34m‚å®Ô∏è  TYPING SPEED TEST\\x1b[0m \\x1b[90m(' + this.difficulty.toUpperCase() + ')\\x1b[0m');\n      this.terminal.writeln('\\x1b[90mType the text below as accurately and quickly as possible.\\x1b[0m');\n      this.terminal.writeln('\\x1b[90mPress ESC or Ctrl+C to quit.\\x1b[0m');\n      this.terminal.writeln('');\n\n      // Show stats\n      var wpm = this.gameState.wpm;\n      var accuracy = this.gameState.accuracy;\n      var progress = Math.round(this.gameState.currentIndex / this.gameState.text.length * 100);\n      this.terminal.writeln(\"WPM: \\x1B[36m\".concat(wpm, \"\\x1B[0m | Accuracy: \\x1B[32m\").concat(accuracy, \"%\\x1B[0m | Progress: \\x1B[36m\").concat(progress, \"%\\x1B[0m\"));\n      this.terminal.writeln(\"Errors: \\x1B[31m\".concat(this.gameState.errors, \"\\x1B[0m | Correct: \\x1B[32m\").concat(this.gameState.correctChars, \"\\x1B[0m\"));\n      this.terminal.writeln('');\n\n      // Show text with highlighting\n      var text = this.gameState.text;\n      var current = this.gameState.currentIndex;\n      var userInput = this.gameState.userInput;\n      this.terminal.writeln('üìù Text to type:');\n\n      // Build display with character-by-character comparison\n      var textDisplay = '';\n      for (var i = 0; i < text.length; i++) {\n        if (i < userInput.length) {\n          // Character has been typed\n          if (userInput[i] === text[i]) {\n            textDisplay += '\\x1b[32m' + text[i] + '\\x1b[0m'; // Correct (green)\n          } else {\n            textDisplay += '\\x1b[41m\\x1b[37m' + text[i] + '\\x1b[0m'; // Error (red background)\n          }\n        } else if (i === current) {\n          textDisplay += '\\x1b[43m\\x1b[30m' + text[i] + '\\x1b[0m'; // Current char (yellow highlight)\n        } else {\n          textDisplay += '\\x1b[90m' + text[i] + '\\x1b[0m'; // Not yet typed (gray)\n        }\n      }\n      this.terminal.writeln(textDisplay);\n      this.terminal.writeln('');\n\n      // Show user input with cursor\n      this.terminal.writeln('‚úçÔ∏è  Your input:');\n      this.terminal.writeln('\\x1b[36m' + this.gameState.userInput + '\\x1b[33m‚ñã\\x1b[0m'); // Cursor at end\n\n      // Show current WPM if typing has started\n      if (this.gameState.startTime && this.gameState.currentIndex > 0) {\n        var elapsed = (Date.now() - this.gameState.startTime) / 1000 / 60; // minutes\n        var wordsTyped = this.gameState.currentIndex / 5; // Standard: 5 characters = 1 word\n        var currentWpm = Math.round(wordsTyped / elapsed);\n        this.terminal.writeln('');\n        this.terminal.writeln(\"Current WPM: \\x1B[36m\".concat(currentWpm, \"\\x1B[0m\"));\n      }\n    }\n  }, {\n    key: \"endTest\",\n    value: function endTest() {\n      this.gameState.gameRunning = false;\n\n      // Dispose of the key handler\n      if (this.keyDisposable) {\n        this.keyDisposable.dispose();\n        this.keyDisposable = null;\n      }\n\n      // Clear screen and show results\n      this.terminal.terminal.write('\\x1b[2J\\x1b[H');\n\n      // Restore normal terminal input handling\n      this.terminal.setGameRunning(false);\n      if (this.gameState.startTime && this.gameState.endTime) {\n        var totalTime = (this.gameState.endTime - this.gameState.startTime) / 1000; // seconds\n        var totalChars = this.gameState.text.length;\n        var wordsTyped = totalChars / 5; // Standard: 5 characters = 1 word\n        var finalWPM = Math.round(wordsTyped / totalTime * 60);\n        var accuracy = Math.round((totalChars - this.gameState.errors) / totalChars * 100);\n        this.terminal.writeln('\\x1b[32m‚úì TYPING TEST COMPLETED!\\x1b[0m');\n        this.terminal.writeln('');\n        this.terminal.writeln(\"\\x1B[36mFinal Results:\\x1B[0m\");\n        this.terminal.writeln(\"  WPM: \\x1B[33m\".concat(finalWPM, \"\\x1B[0m\"));\n        this.terminal.writeln(\"  Accuracy: \\x1B[32m\".concat(accuracy, \"%\\x1B[0m\"));\n        this.terminal.writeln(\"  Errors: \\x1B[31m\".concat(this.gameState.errors, \"\\x1B[0m\"));\n        this.terminal.writeln(\"  Time: \\x1B[36m\".concat(totalTime.toFixed(1), \"s\\x1B[0m\"));\n        this.terminal.writeln(\"  Difficulty: \\x1B[35m\".concat(this.difficulty.toUpperCase(), \"\\x1B[0m\"));\n        this.terminal.writeln('');\n\n        // Save and show best score\n        this.saveBestScore(finalWPM, accuracy);\n      } else {\n        this.terminal.writeln('\\x1b[33mTest cancelled.\\x1b[0m');\n      }\n      this.terminal.writeln('');\n      this.terminal.writePrompt();\n    }\n  }, {\n    key: \"saveBestScore\",\n    value: function saveBestScore(wpm, accuracy) {\n      var _this3 = this;\n      try {\n        var key = \"typing_best_\".concat(this.difficulty);\n        var stored = localStorage.getItem(key);\n        var currentBest = stored ? JSON.parse(stored) : {\n          wpm: 0,\n          accuracy: 0\n        };\n        if (wpm > currentBest.wpm) {\n          var newBest = {\n            wpm: wpm,\n            accuracy: accuracy,\n            date: new Date().toLocaleDateString()\n          };\n          localStorage.setItem(key, JSON.stringify(newBest));\n          this.terminal.writeln(\"\\x1B[32m\\uD83C\\uDF8A New personal best WPM for \".concat(this.difficulty.toUpperCase(), \"!\\x1B[0m\"));\n        } else {\n          this.terminal.writeln(\"\\x1B[36mYour best \".concat(this.difficulty.toUpperCase(), \" WPM: \").concat(currentBest.wpm, \"\\x1B[0m\"));\n        }\n\n        // Show all best scores\n        this.terminal.writeln('');\n        this.terminal.writeln('\\x1b[90m--- Personal Bests ---\\x1b[0m');\n        ['easy', 'medium', 'hard'].forEach(function (diff) {\n          var bestKey = \"typing_best_\".concat(diff);\n          var best = localStorage.getItem(bestKey);\n          if (best) {\n            var data = JSON.parse(best);\n            _this3.terminal.writeln(\"\".concat(diff.toUpperCase(), \": \\x1B[33m\").concat(data.wpm, \" WPM\\x1B[0m (\").concat(data.accuracy, \"%)\"));\n          } else {\n            _this3.terminal.writeln(\"\".concat(diff.toUpperCase(), \": \\x1B[90mNo record\\x1B[0m\"));\n          }\n        });\n      } catch (e) {\n        // localStorage not available\n        this.terminal.writeln('\\x1b[90m(Score saving not available)\\x1b[0m');\n      }\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TypingGame);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6305\n");

/***/ }),

/***/ 59:
/*!*******************************************************************!*\
  !*** ./resources/js/components/terminal/themes/TerminalThemes.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TERMINAL_THEMES: () => (/* binding */ TERMINAL_THEMES),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Terminal Themes - Shared theme definitions\n * Used by ThemeCommand, Preferences, and Terminal components\n */\n\nvar TERMINAL_THEMES = {\n  'default': {\n    name: 'Default (LinkOS Terminal)',\n    description: 'Classic LinkOS Terminal.app colors',\n    background: '#000000',\n    foreground: '#e0e0e0',\n    cursor: '#00ff00',\n    cursorAccent: '#000000',\n    selection: 'rgba(255, 255, 255, 0.3)',\n    black: '#2e3436',\n    red: '#ff5555',\n    green: '#50fa7b',\n    yellow: '#f1fa8c',\n    blue: '#4d9ef7',\n    magenta: '#ff79c6',\n    cyan: '#8be9fd',\n    white: '#e0e0e0',\n    brightBlack: '#888888',\n    brightRed: '#ff8888',\n    brightGreen: '#88ffaa',\n    brightYellow: '#ffffaa',\n    brightBlue: '#88ccff',\n    brightMagenta: '#ffaaff',\n    brightCyan: '#aaffff',\n    brightWhite: '#ffffff'\n  },\n  'alien': {\n    name: 'ABDULMELINK*',\n    description: 'Weyland-Yutani MU/TH/UR 6000 System',\n    background: '#000000',\n    foreground: '#39ff14',\n    cursor: '#39ff14',\n    cursorAccent: '#000000',\n    selection: 'rgba(57, 255, 20, 0.2)',\n    black: '#000000',\n    red: '#ff3b30',\n    green: '#39ff14',\n    yellow: '#ffcc00',\n    blue: '#00a6ff',\n    magenta: '#ff2d55',\n    cyan: '#00ffcc',\n    white: '#8fbc8f',\n    brightBlack: '#1a4d1a',\n    brightRed: '#ff6961',\n    brightGreen: '#6bff4d',\n    brightYellow: '#ffeb3b',\n    brightBlue: '#4fc3f7',\n    brightMagenta: '#ff80ab',\n    brightCyan: '#64ffda',\n    brightWhite: '#adff2f',\n    sound: 'alien'\n  },\n  'matrix': {\n    name: 'The Matrix',\n    description: 'Digital rain cascading code',\n    background: '#000000',\n    foreground: '#00ff41',\n    cursor: '#00ff41',\n    cursorAccent: '#000000',\n    selection: 'rgba(0, 255, 65, 0.3)',\n    black: '#000000',\n    red: '#ff073a',\n    green: '#00ff41',\n    yellow: '#fff113',\n    blue: '#0066ff',\n    magenta: '#ff00ff',\n    cyan: '#00ffff',\n    white: '#ffffff',\n    brightBlack: '#555555',\n    brightRed: '#ff6c60',\n    brightGreen: '#a8ff60',\n    brightYellow: '#ffffb6',\n    brightBlue: '#96cbfe',\n    brightMagenta: '#ff73fd',\n    brightCyan: '#c6c5fe',\n    brightWhite: '#ffffff'\n  },\n  'cyberpunk': {\n    name: 'Cyberpunk 2077',\n    description: 'Night City netrunner interface',\n    background: '#0a0014',\n    foreground: '#ff006e',\n    cursor: '#ff006e',\n    cursorAccent: '#0a0014',\n    selection: 'rgba(255, 0, 110, 0.3)',\n    black: '#0a0014',\n    red: '#ff006e',\n    green: '#00ffaa',\n    yellow: '#ffaa00',\n    blue: '#00aaff',\n    magenta: '#ff00ff',\n    cyan: '#00ffff',\n    white: '#ffffff',\n    brightBlack: '#555555',\n    brightRed: '#ff4499',\n    brightGreen: '#44ffcc',\n    brightYellow: '#ffcc44',\n    brightBlue: '#44ccff',\n    brightMagenta: '#ff44ff',\n    brightCyan: '#44ffff',\n    brightWhite: '#ffffff'\n  },\n  'retro': {\n    name: 'Retro Amber',\n    description: 'Vintage CRT monitor glow',\n    background: '#1a0f00',\n    foreground: '#ffb000',\n    cursor: '#ffb000',\n    cursorAccent: '#1a0f00',\n    selection: 'rgba(255, 176, 0, 0.3)',\n    black: '#1a0f00',\n    red: '#ff8c00',\n    green: '#ffb000',\n    yellow: '#ffd700',\n    blue: '#ff9f40',\n    magenta: '#ff7f50',\n    cyan: '#ffcc80',\n    white: '#ffe4b5',\n    brightBlack: '#8b4513',\n    brightRed: '#ffa54f',\n    brightGreen: '#ffc966',\n    brightYellow: '#ffe87c',\n    brightBlue: '#ffb766',\n    brightMagenta: '#ff9966',\n    brightCyan: '#ffd9a3',\n    brightWhite: '#fffacd'\n  },\n  'apple-ii': {\n    name: 'Apple II',\n    description: 'Green phosphor screen nostalgia',\n    background: '#0f380f',\n    foreground: '#33ff33',\n    cursor: '#33ff33',\n    cursorAccent: '#0f380f',\n    selection: 'rgba(51, 255, 51, 0.25)',\n    black: '#0f380f',\n    red: '#66ff66',\n    green: '#33ff33',\n    yellow: '#99ff99',\n    blue: '#44ff44',\n    magenta: '#77ff77',\n    cyan: '#88ff88',\n    white: '#ccffcc',\n    brightBlack: '#226622',\n    brightRed: '#77ff77',\n    brightGreen: '#55ff55',\n    brightYellow: '#aaffaa',\n    brightBlue: '#66ff66',\n    brightMagenta: '#88ff88',\n    brightCyan: '#99ff99',\n    brightWhite: '#eeffee'\n  },\n  'tron': {\n    name: 'TRON Legacy',\n    description: 'The Grid digital frontier',\n    background: '#000408',\n    foreground: '#6fc3df',\n    cursor: '#6fc3df',\n    cursorAccent: '#000408',\n    selection: 'rgba(111, 195, 223, 0.3)',\n    black: '#000408',\n    red: '#ff410d',\n    green: '#00e8c6',\n    yellow: '#ffb300',\n    blue: '#6fc3df',\n    magenta: '#ae81ff',\n    cyan: '#00e8ff',\n    white: '#a4c5d9',\n    brightBlack: '#1c2833',\n    brightRed: '#ff6f4f',\n    brightGreen: '#33ffd9',\n    brightYellow: '#ffd633',\n    brightBlue: '#8fd9f0',\n    brightMagenta: '#c8a0ff',\n    brightCyan: '#66f0ff',\n    brightWhite: '#dceef7'\n  },\n  'hacker': {\n    name: 'Black Hat',\n    description: 'Underground IRC green on black',\n    background: '#000000',\n    foreground: '#00ff00',\n    cursor: '#00ff00',\n    cursorAccent: '#000000',\n    selection: 'rgba(0, 255, 0, 0.25)',\n    black: '#000000',\n    red: '#ff0000',\n    green: '#00ff00',\n    yellow: '#ffff00',\n    blue: '#0000ff',\n    magenta: '#ff00ff',\n    cyan: '#00ffff',\n    white: '#ffffff',\n    brightBlack: '#808080',\n    brightRed: '#ff8080',\n    brightGreen: '#80ff80',\n    brightYellow: '#ffff80',\n    brightBlue: '#8080ff',\n    brightMagenta: '#ff80ff',\n    brightCyan: '#80ffff',\n    brightWhite: '#ffffff'\n  },\n  'dracula': {\n    name: 'Dracula',\n    description: 'Dark theme with purple accents',\n    background: '#282a36',\n    foreground: '#f8f8f2',\n    cursor: '#f8f8f2',\n    selection: 'rgba(68, 71, 90, 0.5)',\n    black: '#21222c',\n    red: '#ff5555',\n    green: '#50fa7b',\n    yellow: '#f1fa8c',\n    blue: '#bd93f9',\n    magenta: '#ff79c6',\n    cyan: '#8be9fd',\n    white: '#f8f8f2',\n    brightBlack: '#6272a4',\n    brightRed: '#ff6e6e',\n    brightGreen: '#69ff94',\n    brightYellow: '#ffffa5',\n    brightBlue: '#d6acff',\n    brightMagenta: '#ff92df',\n    brightCyan: '#a4ffff',\n    brightWhite: '#ffffff'\n  },\n  'monokai': {\n    name: 'Monokai',\n    description: 'Sublime Text classic',\n    background: '#272822',\n    foreground: '#f8f8f2',\n    cursor: '#f8f8f0',\n    selection: 'rgba(73, 72, 62, 0.8)',\n    black: '#272822',\n    red: '#f92672',\n    green: '#a6e22e',\n    yellow: '#f4bf75',\n    blue: '#66d9ef',\n    magenta: '#ae81ff',\n    cyan: '#a1efe4',\n    white: '#f8f8f2',\n    brightBlack: '#75715e',\n    brightRed: '#f92672',\n    brightGreen: '#a6e22e',\n    brightYellow: '#f4bf75',\n    brightBlue: '#66d9ef',\n    brightMagenta: '#ae81ff',\n    brightCyan: '#a1efe4',\n    brightWhite: '#f9f8f5'\n  },\n  'nord': {\n    name: 'Nord',\n    description: 'Arctic, north-bluish color palette',\n    background: '#2e3440',\n    foreground: '#d8dee9',\n    cursor: '#d8dee9',\n    selection: 'rgba(67, 76, 94, 0.5)',\n    black: '#3b4252',\n    red: '#bf616a',\n    green: '#a3be8c',\n    yellow: '#ebcb8b',\n    blue: '#81a1c1',\n    magenta: '#b48ead',\n    cyan: '#88c0d0',\n    white: '#e5e9f0',\n    brightBlack: '#4c566a',\n    brightRed: '#bf616a',\n    brightGreen: '#a3be8c',\n    brightYellow: '#ebcb8b',\n    brightBlue: '#81a1c1',\n    brightMagenta: '#b48ead',\n    brightCyan: '#8fbcbb',\n    brightWhite: '#eceff4'\n  }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TERMINAL_THEMES);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///59\n");

/***/ }),

/***/ 4923:
/*!***********************************************!*\
  !*** ./resources/js/config/ColorConstants.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LinkOS_COLORS: () => (/* binding */ LinkOS_COLORS),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * ColorConstants.js - Centralized color definitions for LinkOS portfolio\n * All color values should reference these constants\n */\n\nvar LinkOS_COLORS = {\n  // System Accent Colors\n  SYSTEM_BLUE: '#007AFF',\n  SYSTEM_BLUE_ALT: '#007aff',\n  // Lowercase variant for compatibility\n\n  // Window Control Colors\n  WINDOW_CLOSE: '#ff5f57',\n  WINDOW_CLOSE_HOVER: '#ff4743',\n  WINDOW_MINIMIZE: '#ffbd2e',\n  WINDOW_MINIMIZE_HOVER: '#ffab00',\n  WINDOW_MAXIMIZE: '#28ca42',\n  WINDOW_MAXIMIZE_HOVER: '#1fb934',\n  // Text Colors\n  TEXT_PRIMARY: '#1d1d1f',\n  TEXT_SECONDARY: '#86868b',\n  TEXT_TERTIARY: '#6e6e73',\n  // Background Colors\n  BG_PRIMARY: '#ffffff',\n  BG_SECONDARY: '#f5f5f7',\n  BG_TERTIARY: '#fafafa',\n  // Dock Colors\n  DOCK_TEXT: '#333',\n  DOCK_SHADOW: 'rgba(0, 0, 0, 0.3)',\n  // Border Colors\n  BORDER_LIGHT: '#d2d2d7',\n  BORDER_DARK: '#1d1d1f',\n  // Transparent\n  TRANSPARENT: 'transparent'\n};\n\n// Terminal color themes are in /components/terminal/themes/TerminalThemes.js\n// DO NOT duplicate them here\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LinkOS_COLORS);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDkyMy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVPLElBQU1BLGFBQWEsR0FBRztFQUN6QjtFQUNBQyxXQUFXLEVBQUUsU0FBUztFQUN0QkMsZUFBZSxFQUFFLFNBQVM7RUFBRTs7RUFFNUI7RUFDQUMsWUFBWSxFQUFFLFNBQVM7RUFDdkJDLGtCQUFrQixFQUFFLFNBQVM7RUFDN0JDLGVBQWUsRUFBRSxTQUFTO0VBQzFCQyxxQkFBcUIsRUFBRSxTQUFTO0VBQ2hDQyxlQUFlLEVBQUUsU0FBUztFQUMxQkMscUJBQXFCLEVBQUUsU0FBUztFQUVoQztFQUNBQyxZQUFZLEVBQUUsU0FBUztFQUN2QkMsY0FBYyxFQUFFLFNBQVM7RUFDekJDLGFBQWEsRUFBRSxTQUFTO0VBRXhCO0VBQ0FDLFVBQVUsRUFBRSxTQUFTO0VBQ3JCQyxZQUFZLEVBQUUsU0FBUztFQUN2QkMsV0FBVyxFQUFFLFNBQVM7RUFFdEI7RUFDQUMsU0FBUyxFQUFFLE1BQU07RUFDakJDLFdBQVcsRUFBRSxvQkFBb0I7RUFFakM7RUFDQUMsWUFBWSxFQUFFLFNBQVM7RUFDdkJDLFdBQVcsRUFBRSxTQUFTO0VBRXRCO0VBQ0FDLFdBQVcsRUFBRTtBQUNqQixDQUFDOztBQUVEO0FBQ0E7O0FBRUEsaUVBQWVuQixhQUFhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL2NvbmZpZy9Db2xvckNvbnN0YW50cy5qcz82ZmU5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29sb3JDb25zdGFudHMuanMgLSBDZW50cmFsaXplZCBjb2xvciBkZWZpbml0aW9ucyBmb3IgTGlua09TIHBvcnRmb2xpb1xuICogQWxsIGNvbG9yIHZhbHVlcyBzaG91bGQgcmVmZXJlbmNlIHRoZXNlIGNvbnN0YW50c1xuICovXG5cbmV4cG9ydCBjb25zdCBMaW5rT1NfQ09MT1JTID0ge1xuICAgIC8vIFN5c3RlbSBBY2NlbnQgQ29sb3JzXG4gICAgU1lTVEVNX0JMVUU6ICcjMDA3QUZGJyxcbiAgICBTWVNURU1fQkxVRV9BTFQ6ICcjMDA3YWZmJywgLy8gTG93ZXJjYXNlIHZhcmlhbnQgZm9yIGNvbXBhdGliaWxpdHlcbiAgICBcbiAgICAvLyBXaW5kb3cgQ29udHJvbCBDb2xvcnNcbiAgICBXSU5ET1dfQ0xPU0U6ICcjZmY1ZjU3JyxcbiAgICBXSU5ET1dfQ0xPU0VfSE9WRVI6ICcjZmY0NzQzJyxcbiAgICBXSU5ET1dfTUlOSU1JWkU6ICcjZmZiZDJlJyxcbiAgICBXSU5ET1dfTUlOSU1JWkVfSE9WRVI6ICcjZmZhYjAwJyxcbiAgICBXSU5ET1dfTUFYSU1JWkU6ICcjMjhjYTQyJyxcbiAgICBXSU5ET1dfTUFYSU1JWkVfSE9WRVI6ICcjMWZiOTM0JyxcbiAgICBcbiAgICAvLyBUZXh0IENvbG9yc1xuICAgIFRFWFRfUFJJTUFSWTogJyMxZDFkMWYnLFxuICAgIFRFWFRfU0VDT05EQVJZOiAnIzg2ODY4YicsXG4gICAgVEVYVF9URVJUSUFSWTogJyM2ZTZlNzMnLFxuICAgIFxuICAgIC8vIEJhY2tncm91bmQgQ29sb3JzXG4gICAgQkdfUFJJTUFSWTogJyNmZmZmZmYnLFxuICAgIEJHX1NFQ09OREFSWTogJyNmNWY1ZjcnLFxuICAgIEJHX1RFUlRJQVJZOiAnI2ZhZmFmYScsXG4gICAgXG4gICAgLy8gRG9jayBDb2xvcnNcbiAgICBET0NLX1RFWFQ6ICcjMzMzJyxcbiAgICBET0NLX1NIQURPVzogJ3JnYmEoMCwgMCwgMCwgMC4zKScsXG4gICAgXG4gICAgLy8gQm9yZGVyIENvbG9yc1xuICAgIEJPUkRFUl9MSUdIVDogJyNkMmQyZDcnLFxuICAgIEJPUkRFUl9EQVJLOiAnIzFkMWQxZicsXG4gICAgXG4gICAgLy8gVHJhbnNwYXJlbnRcbiAgICBUUkFOU1BBUkVOVDogJ3RyYW5zcGFyZW50J1xufTtcblxuLy8gVGVybWluYWwgY29sb3IgdGhlbWVzIGFyZSBpbiAvY29tcG9uZW50cy90ZXJtaW5hbC90aGVtZXMvVGVybWluYWxUaGVtZXMuanNcbi8vIERPIE5PVCBkdXBsaWNhdGUgdGhlbSBoZXJlXG5cbmV4cG9ydCBkZWZhdWx0IExpbmtPU19DT0xPUlM7XG4iXSwibmFtZXMiOlsiTGlua09TX0NPTE9SUyIsIlNZU1RFTV9CTFVFIiwiU1lTVEVNX0JMVUVfQUxUIiwiV0lORE9XX0NMT1NFIiwiV0lORE9XX0NMT1NFX0hPVkVSIiwiV0lORE9XX01JTklNSVpFIiwiV0lORE9XX01JTklNSVpFX0hPVkVSIiwiV0lORE9XX01BWElNSVpFIiwiV0lORE9XX01BWElNSVpFX0hPVkVSIiwiVEVYVF9QUklNQVJZIiwiVEVYVF9TRUNPTkRBUlkiLCJURVhUX1RFUlRJQVJZIiwiQkdfUFJJTUFSWSIsIkJHX1NFQ09OREFSWSIsIkJHX1RFUlRJQVJZIiwiRE9DS19URVhUIiwiRE9DS19TSEFET1ciLCJCT1JERVJfTElHSFQiLCJCT1JERVJfREFSSyIsIlRSQU5TUEFSRU5UIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4923\n");

/***/ }),

/***/ 9005:
/*!*********************************************!*\
  !*** ./resources/js/config/FinderConfig.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FINDER_CONFIG: () => (/* binding */ FINDER_CONFIG),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * FinderConfig - Constants and defaults for Finder component\n */\n\nvar FINDER_CONFIG = {\n  // View modes\n  VIEW_MODES: {\n    GRID: 'grid',\n    LIST: 'list',\n    COLUMN: 'column'\n  },\n  // Sort options\n  SORT_OPTIONS: {\n    NAME: 'name',\n    DATE: 'date',\n    SIZE: 'size',\n    KIND: 'kind'\n  },\n  // Default settings\n  DEFAULTS: {\n    viewMode: 'grid',\n    sortBy: 'name',\n    sortOrder: 'asc',\n    showHiddenFiles: false,\n    sidebarWidth: 180,\n    gridIconSize: 64\n  },\n  // UI dimensions\n  DIMENSIONS: {\n    SIDEBAR_WIDTH: 180,\n    SIDEBAR_COLLAPSED: 40,\n    TOOLBAR_HEIGHT: 52,\n    GRID_ITEM_WIDTH: 80,\n    GRID_ITEM_HEIGHT: 100,\n    LIST_ROW_HEIGHT: 24,\n    COLUMN_WIDTH: 200\n  },\n  // File type icons (emoji)\n  FILE_ICONS: {\n    directory: 'üìÅ',\n    file: 'üìÑ',\n    txt: 'üìÑ',\n    md: 'üìù',\n    json: 'üìã',\n    js: 'üìú',\n    py: 'üêç',\n    php: 'üêò',\n    html: 'üåê',\n    css: 'üé®',\n    jpg: 'üñºÔ∏è',\n    png: 'üñºÔ∏è',\n    svg: 'üé®',\n    pdf: 'üìï',\n    zip: 'üì¶',\n    tar: 'üì¶'\n  },\n  // Default favorites (from centralized filesystem.json)\n  DEFAULT_FAVORITES: [{\n    name: 'Home',\n    path: '/home/abdulmelik',\n    icon: 'üè†'\n  }, {\n    name: 'Projects',\n    path: '/home/abdulmelik/projects',\n    icon: 'üíº'\n  }, {\n    name: 'Documents',\n    path: '/home/abdulmelik/documents',\n    icon: 'üìÑ'\n  }, {\n    name: 'Skills',\n    path: '/home/abdulmelik/skills',\n    icon: '‚ö°'\n  }],\n  // System locations\n  SYSTEM_LOCATIONS: [{\n    name: 'Root',\n    path: '/',\n    icon: 'üíæ'\n  }, {\n    name: 'Home Directory',\n    path: '/home',\n    icon: 'üè°'\n  }]\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FINDER_CONFIG);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTAwNS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTs7QUFFTyxJQUFNQSxhQUFhLEdBQUc7RUFDekI7RUFDQUMsVUFBVSxFQUFFO0lBQ1JDLElBQUksRUFBRSxNQUFNO0lBQ1pDLElBQUksRUFBRSxNQUFNO0lBQ1pDLE1BQU0sRUFBRTtFQUNaLENBQUM7RUFFRDtFQUNBQyxZQUFZLEVBQUU7SUFDVkMsSUFBSSxFQUFFLE1BQU07SUFDWkMsSUFBSSxFQUFFLE1BQU07SUFDWkMsSUFBSSxFQUFFLE1BQU07SUFDWkMsSUFBSSxFQUFFO0VBQ1YsQ0FBQztFQUVEO0VBQ0FDLFFBQVEsRUFBRTtJQUNOQyxRQUFRLEVBQUUsTUFBTTtJQUNoQkMsTUFBTSxFQUFFLE1BQU07SUFDZEMsU0FBUyxFQUFFLEtBQUs7SUFDaEJDLGVBQWUsRUFBRSxLQUFLO0lBQ3RCQyxZQUFZLEVBQUUsR0FBRztJQUNqQkMsWUFBWSxFQUFFO0VBQ2xCLENBQUM7RUFFRDtFQUNBQyxVQUFVLEVBQUU7SUFDUkMsYUFBYSxFQUFFLEdBQUc7SUFDbEJDLGlCQUFpQixFQUFFLEVBQUU7SUFDckJDLGNBQWMsRUFBRSxFQUFFO0lBQ2xCQyxlQUFlLEVBQUUsRUFBRTtJQUNuQkMsZ0JBQWdCLEVBQUUsR0FBRztJQUNyQkMsZUFBZSxFQUFFLEVBQUU7SUFDbkJDLFlBQVksRUFBRTtFQUNsQixDQUFDO0VBRUQ7RUFDQUMsVUFBVSxFQUFFO0lBQ1JDLFNBQVMsRUFBRSxJQUFJO0lBQ2ZDLElBQUksRUFBRSxJQUFJO0lBQ1ZDLEdBQUcsRUFBRSxJQUFJO0lBQ1RDLEVBQUUsRUFBRSxJQUFJO0lBQ1JDLElBQUksRUFBRSxJQUFJO0lBQ1ZDLEVBQUUsRUFBRSxJQUFJO0lBQ1JDLEVBQUUsRUFBRSxJQUFJO0lBQ1JDLEdBQUcsRUFBRSxJQUFJO0lBQ1RDLElBQUksRUFBRSxJQUFJO0lBQ1ZDLEdBQUcsRUFBRSxJQUFJO0lBQ1RDLEdBQUcsRUFBRSxLQUFLO0lBQ1ZDLEdBQUcsRUFBRSxLQUFLO0lBQ1ZDLEdBQUcsRUFBRSxJQUFJO0lBQ1RDLEdBQUcsRUFBRSxJQUFJO0lBQ1RDLEdBQUcsRUFBRSxJQUFJO0lBQ1RDLEdBQUcsRUFBRTtFQUNULENBQUM7RUFFRDtFQUNBQyxpQkFBaUIsRUFBRSxDQUNmO0lBQUVDLElBQUksRUFBRSxNQUFNO0lBQUVDLElBQUksRUFBRSxrQkFBa0I7SUFBRUMsSUFBSSxFQUFFO0VBQUssQ0FBQyxFQUN0RDtJQUFFRixJQUFJLEVBQUUsVUFBVTtJQUFFQyxJQUFJLEVBQUUsMkJBQTJCO0lBQUVDLElBQUksRUFBRTtFQUFLLENBQUMsRUFDbkU7SUFBRUYsSUFBSSxFQUFFLFdBQVc7SUFBRUMsSUFBSSxFQUFFLDRCQUE0QjtJQUFFQyxJQUFJLEVBQUU7RUFBSyxDQUFDLEVBQ3JFO0lBQUVGLElBQUksRUFBRSxRQUFRO0lBQUVDLElBQUksRUFBRSx5QkFBeUI7SUFBRUMsSUFBSSxFQUFFO0VBQUksQ0FBQyxDQUNqRTtFQUVEO0VBQ0FDLGdCQUFnQixFQUFFLENBQ2Q7SUFBRUgsSUFBSSxFQUFFLE1BQU07SUFBRUMsSUFBSSxFQUFFLEdBQUc7SUFBRUMsSUFBSSxFQUFFO0VBQUssQ0FBQyxFQUN2QztJQUFFRixJQUFJLEVBQUUsZ0JBQWdCO0lBQUVDLElBQUksRUFBRSxPQUFPO0lBQUVDLElBQUksRUFBRTtFQUFLLENBQUM7QUFFN0QsQ0FBQztBQUVELGlFQUFlN0MsYUFBYSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy9jb25maWcvRmluZGVyQ29uZmlnLmpzPzE4M2EiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBGaW5kZXJDb25maWcgLSBDb25zdGFudHMgYW5kIGRlZmF1bHRzIGZvciBGaW5kZXIgY29tcG9uZW50XG4gKi9cblxuZXhwb3J0IGNvbnN0IEZJTkRFUl9DT05GSUcgPSB7XG4gICAgLy8gVmlldyBtb2Rlc1xuICAgIFZJRVdfTU9ERVM6IHtcbiAgICAgICAgR1JJRDogJ2dyaWQnLFxuICAgICAgICBMSVNUOiAnbGlzdCcsXG4gICAgICAgIENPTFVNTjogJ2NvbHVtbidcbiAgICB9LFxuXG4gICAgLy8gU29ydCBvcHRpb25zXG4gICAgU09SVF9PUFRJT05TOiB7XG4gICAgICAgIE5BTUU6ICduYW1lJyxcbiAgICAgICAgREFURTogJ2RhdGUnLFxuICAgICAgICBTSVpFOiAnc2l6ZScsXG4gICAgICAgIEtJTkQ6ICdraW5kJ1xuICAgIH0sXG5cbiAgICAvLyBEZWZhdWx0IHNldHRpbmdzXG4gICAgREVGQVVMVFM6IHtcbiAgICAgICAgdmlld01vZGU6ICdncmlkJyxcbiAgICAgICAgc29ydEJ5OiAnbmFtZScsXG4gICAgICAgIHNvcnRPcmRlcjogJ2FzYycsXG4gICAgICAgIHNob3dIaWRkZW5GaWxlczogZmFsc2UsXG4gICAgICAgIHNpZGViYXJXaWR0aDogMTgwLFxuICAgICAgICBncmlkSWNvblNpemU6IDY0XG4gICAgfSxcblxuICAgIC8vIFVJIGRpbWVuc2lvbnNcbiAgICBESU1FTlNJT05TOiB7XG4gICAgICAgIFNJREVCQVJfV0lEVEg6IDE4MCxcbiAgICAgICAgU0lERUJBUl9DT0xMQVBTRUQ6IDQwLFxuICAgICAgICBUT09MQkFSX0hFSUdIVDogNTIsXG4gICAgICAgIEdSSURfSVRFTV9XSURUSDogODAsXG4gICAgICAgIEdSSURfSVRFTV9IRUlHSFQ6IDEwMCxcbiAgICAgICAgTElTVF9ST1dfSEVJR0hUOiAyNCxcbiAgICAgICAgQ09MVU1OX1dJRFRIOiAyMDBcbiAgICB9LFxuXG4gICAgLy8gRmlsZSB0eXBlIGljb25zIChlbW9qaSlcbiAgICBGSUxFX0lDT05TOiB7XG4gICAgICAgIGRpcmVjdG9yeTogJ/Cfk4EnLFxuICAgICAgICBmaWxlOiAn8J+ThCcsXG4gICAgICAgIHR4dDogJ/Cfk4QnLFxuICAgICAgICBtZDogJ/Cfk50nLFxuICAgICAgICBqc29uOiAn8J+TiycsXG4gICAgICAgIGpzOiAn8J+TnCcsXG4gICAgICAgIHB5OiAn8J+QjScsXG4gICAgICAgIHBocDogJ/CfkJgnLFxuICAgICAgICBodG1sOiAn8J+MkCcsXG4gICAgICAgIGNzczogJ/CfjqgnLFxuICAgICAgICBqcGc6ICfwn5a877iPJyxcbiAgICAgICAgcG5nOiAn8J+WvO+4jycsXG4gICAgICAgIHN2ZzogJ/CfjqgnLFxuICAgICAgICBwZGY6ICfwn5OVJyxcbiAgICAgICAgemlwOiAn8J+TpicsXG4gICAgICAgIHRhcjogJ/Cfk6YnXG4gICAgfSxcblxuICAgIC8vIERlZmF1bHQgZmF2b3JpdGVzIChmcm9tIGNlbnRyYWxpemVkIGZpbGVzeXN0ZW0uanNvbilcbiAgICBERUZBVUxUX0ZBVk9SSVRFUzogW1xuICAgICAgICB7IG5hbWU6ICdIb21lJywgcGF0aDogJy9ob21lL2FiZHVsbWVsaWsnLCBpY29uOiAn8J+PoCcgfSxcbiAgICAgICAgeyBuYW1lOiAnUHJvamVjdHMnLCBwYXRoOiAnL2hvbWUvYWJkdWxtZWxpay9wcm9qZWN0cycsIGljb246ICfwn5K8JyB9LFxuICAgICAgICB7IG5hbWU6ICdEb2N1bWVudHMnLCBwYXRoOiAnL2hvbWUvYWJkdWxtZWxpay9kb2N1bWVudHMnLCBpY29uOiAn8J+ThCcgfSxcbiAgICAgICAgeyBuYW1lOiAnU2tpbGxzJywgcGF0aDogJy9ob21lL2FiZHVsbWVsaWsvc2tpbGxzJywgaWNvbjogJ+KaoScgfVxuICAgIF0sXG5cbiAgICAvLyBTeXN0ZW0gbG9jYXRpb25zXG4gICAgU1lTVEVNX0xPQ0FUSU9OUzogW1xuICAgICAgICB7IG5hbWU6ICdSb290JywgcGF0aDogJy8nLCBpY29uOiAn8J+SvicgfSxcbiAgICAgICAgeyBuYW1lOiAnSG9tZSBEaXJlY3RvcnknLCBwYXRoOiAnL2hvbWUnLCBpY29uOiAn8J+PoScgfVxuICAgIF1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IEZJTkRFUl9DT05GSUc7XG4iXSwibmFtZXMiOlsiRklOREVSX0NPTkZJRyIsIlZJRVdfTU9ERVMiLCJHUklEIiwiTElTVCIsIkNPTFVNTiIsIlNPUlRfT1BUSU9OUyIsIk5BTUUiLCJEQVRFIiwiU0laRSIsIktJTkQiLCJERUZBVUxUUyIsInZpZXdNb2RlIiwic29ydEJ5Iiwic29ydE9yZGVyIiwic2hvd0hpZGRlbkZpbGVzIiwic2lkZWJhcldpZHRoIiwiZ3JpZEljb25TaXplIiwiRElNRU5TSU9OUyIsIlNJREVCQVJfV0lEVEgiLCJTSURFQkFSX0NPTExBUFNFRCIsIlRPT0xCQVJfSEVJR0hUIiwiR1JJRF9JVEVNX1dJRFRIIiwiR1JJRF9JVEVNX0hFSUdIVCIsIkxJU1RfUk9XX0hFSUdIVCIsIkNPTFVNTl9XSURUSCIsIkZJTEVfSUNPTlMiLCJkaXJlY3RvcnkiLCJmaWxlIiwidHh0IiwibWQiLCJqc29uIiwianMiLCJweSIsInBocCIsImh0bWwiLCJjc3MiLCJqcGciLCJwbmciLCJzdmciLCJwZGYiLCJ6aXAiLCJ0YXIiLCJERUZBVUxUX0ZBVk9SSVRFUyIsIm5hbWUiLCJwYXRoIiwiaWNvbiIsIlNZU1RFTV9MT0NBVElPTlMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///9005\n");

/***/ }),

/***/ 5979:
/*!****************************************************!*\
  !*** ./resources/js/services/FileSystemService.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ 3453);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 4467);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n\n/**\n * FileSystemService - Centralized filesystem management\n * Shared between Terminal and Finder components\n * Loads and manages virtual filesystem from filesystem.json\n */\nvar FileSystemService = /*#__PURE__*/function () {\n  function FileSystemService() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, FileSystemService);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(FileSystemService, null, [{\n    key: \"loadFileSystem\",\n    value: (\n    /**\n     * Load filesystem from JSON file\n     * @returns {Promise<Object>} Filesystem data\n     */\n    function () {\n      var _loadFileSystem = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().mark(function _callee() {\n        var _this$fileSystem$home;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!this.fileSystem) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\", this.fileSystem);\n            case 2:\n              if (!(this.loading && this.loadPromise)) {\n                _context.next = 4;\n                break;\n              }\n              return _context.abrupt(\"return\", this.loadPromise);\n            case 4:\n              // Start loading\n              this.loading = true;\n              this.loadPromise = this._fetchFileSystem();\n              _context.prev = 6;\n              _context.next = 9;\n              return this.loadPromise;\n            case 9:\n              this.fileSystem = _context.sent;\n              console.log('üìÅ FileSystemService: Loaded filesystem', {\n                rootKeys: Object.keys(this.fileSystem),\n                homeContents: Object.keys(((_this$fileSystem$home = this.fileSystem.home) === null || _this$fileSystem$home === void 0 ? void 0 : _this$fileSystem$home.contents) || {})\n              });\n              return _context.abrupt(\"return\", this.fileSystem);\n            case 12:\n              _context.prev = 12;\n              this.loading = false;\n              this.loadPromise = null;\n              return _context.finish(12);\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[6,, 12, 16]]);\n      }));\n      function loadFileSystem() {\n        return _loadFileSystem.apply(this, arguments);\n      }\n      return loadFileSystem;\n    }()\n    /**\n     * Fetch filesystem from server (centralized storage/data/filesystem.json)\n     * @private\n     */)\n  }, {\n    key: \"_fetchFileSystem\",\n    value: function () {\n      var _fetchFileSystem2 = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().mark(function _callee2() {\n        var response, json, data, _data$_metadata;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch('/api/filesystem');\n            case 3:\n              response = _context2.sent;\n              if (response.ok) {\n                _context2.next = 6;\n                break;\n              }\n              throw new Error(\"HTTP \".concat(response.status));\n            case 6:\n              _context2.next = 8;\n              return response.json();\n            case 8:\n              json = _context2.sent;\n              // Extract data from API response wrapper\n              data = json.success && json.data ? json.data : json; // Validate structure\n              if (!(data.home && data.home.contents)) {\n                _context2.next = 15;\n                break;\n              }\n              console.log('‚úÖ FileSystemService: Loaded from API', {\n                source: ((_data$_metadata = data._metadata) === null || _data$_metadata === void 0 ? void 0 : _data$_metadata.source) || 'unknown',\n                rootKeys: Object.keys(data).filter(function (k) {\n                  return k !== '_metadata';\n                })\n              });\n              return _context2.abrupt(\"return\", data);\n            case 15:\n              console.warn('FileSystemService: Invalid filesystem structure', data);\n              return _context2.abrupt(\"return\", this._getDefaultFileSystem());\n            case 17:\n              _context2.next = 23;\n              break;\n            case 19:\n              _context2.prev = 19;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('FileSystemService: Failed to load filesystem.json', _context2.t0);\n              return _context2.abrupt(\"return\", this._getDefaultFileSystem());\n            case 23:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 19]]);\n      }));\n      function _fetchFileSystem() {\n        return _fetchFileSystem2.apply(this, arguments);\n      }\n      return _fetchFileSystem;\n    }()\n    /**\n     * Get folder contents at path\n     * @param {string} path - Path like '/home/abdulmelik' or '~/projects'\n     * @returns {Object|null} Folder contents or null if not found\n     */\n  }, {\n    key: \"getFolderContents\",\n    value: function getFolderContents(path) {\n      if (!this.fileSystem) {\n        console.warn('FileSystemService: Filesystem not loaded');\n        return null;\n      }\n      var normalizedPath = this._normalizePath(path);\n      var node = this._navigateToNode(normalizedPath);\n      if (!node) {\n        console.warn(\"FileSystemService: Path not found: \".concat(path));\n        return null;\n      }\n      if (node.type !== 'directory') {\n        console.warn(\"FileSystemService: Not a directory: \".concat(path));\n        return null;\n      }\n      return node.contents || {};\n    }\n\n    /**\n     * Get info about a file or folder\n     * @param {string} path - Path to file/folder\n     * @returns {Object|null} Node info or null\n     */\n  }, {\n    key: \"getNodeInfo\",\n    value: function getNodeInfo(path) {\n      if (!this.fileSystem) return null;\n      var normalizedPath = this._normalizePath(path);\n      return this._navigateToNode(normalizedPath);\n    }\n\n    /**\n     * Check if path exists\n     * @param {string} path - Path to check\n     * @returns {boolean}\n     */\n  }, {\n    key: \"pathExists\",\n    value: function pathExists(path) {\n      return this.getNodeInfo(path) !== null;\n    }\n\n    /**\n     * Get parent directory path\n     * @param {string} path - Current path\n     * @returns {string} Parent path\n     */\n  }, {\n    key: \"getParentPath\",\n    value: function getParentPath(path) {\n      var normalizedPath = this._normalizePath(path);\n      var parts = normalizedPath.split('/').filter(function (p) {\n        return p;\n      });\n      if (parts.length <= 1) {\n        return '/';\n      }\n      parts.pop();\n      return '/' + parts.join('/');\n    }\n\n    /**\n     * Search files and folders\n     * @param {string} query - Search query\n     * @param {string} searchPath - Path to search in (optional)\n     * @returns {Array} Array of matching items\n     */\n  }, {\n    key: \"searchFiles\",\n    value: function searchFiles(query) {\n      var searchPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/home/abdulmelik';\n      if (!query || !this.fileSystem) return [];\n      var results = [];\n      var lowerQuery = query.toLowerCase();\n      var startNode = this.getNodeInfo(searchPath);\n      if (!startNode || !startNode.contents) return [];\n      this._searchRecursive(startNode.contents, searchPath, lowerQuery, results);\n      return results;\n    }\n\n    /**\n     * Recursive search helper\n     * @private\n     */\n  }, {\n    key: \"_searchRecursive\",\n    value: function _searchRecursive(contents, currentPath, query, results) {\n      for (var _i = 0, _Object$entries = Object.entries(contents); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_Object$entries[_i], 2),\n          name = _Object$entries$_i[0],\n          node = _Object$entries$_i[1];\n        if (name.toLowerCase().includes(query)) {\n          results.push({\n            name: name,\n            path: \"\".concat(currentPath, \"/\").concat(name),\n            type: node.type,\n            size: node.size,\n            modified: node.modified\n          });\n        }\n        if (node.type === 'directory' && node.contents) {\n          this._searchRecursive(node.contents, \"\".concat(currentPath, \"/\").concat(name), query, results);\n        }\n      }\n    }\n\n    /**\n     * Normalize path (resolve ~, .., .)\n     * @private\n     */\n  }, {\n    key: \"_normalizePath\",\n    value: function _normalizePath(path) {\n      // Handle ~ as home directory\n      if (path.startsWith('~')) {\n        path = '/home/abdulmelik' + path.slice(1);\n      }\n\n      // Handle relative paths\n      if (!path.startsWith('/')) {\n        path = '/home/abdulmelik/' + path;\n      }\n\n      // Remove trailing slash\n      if (path.length > 1 && path.endsWith('/')) {\n        path = path.slice(0, -1);\n      }\n      return path;\n    }\n\n    /**\n     * Navigate to node in filesystem tree\n     * @private\n     */\n  }, {\n    key: \"_navigateToNode\",\n    value: function _navigateToNode(path) {\n      var parts = path.split('/').filter(function (p) {\n        return p;\n      });\n\n      // Handle root path - return virtual root with proper structure\n      if (parts.length === 0) {\n        return {\n          type: 'directory',\n          modified: new Date().toLocaleDateString('en-US', {\n            month: 'short',\n            day: 'numeric',\n            hour: '2-digit',\n            minute: '2-digit'\n          }),\n          size: 4096,\n          contents: this.fileSystem\n        };\n      }\n      var current = this.fileSystem;\n      var _iterator = _createForOfIteratorHelper(parts),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var part = _step.value;\n          if (!current) {\n            return null;\n          }\n\n          // Navigate into contents if it's a directory\n          if (current.contents && current.contents[part]) {\n            current = current.contents[part];\n          } else if (current[part]) {\n            current = current[part];\n          } else {\n            return null;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return current;\n    }\n\n    /**\n     * Get default/fallback filesystem\n     * @private\n     */\n  }, {\n    key: \"_getDefaultFileSystem\",\n    value: function _getDefaultFileSystem() {\n      return {\n        home: {\n          type: 'directory',\n          modified: 'Oct 19 12:00',\n          size: 4096,\n          contents: {\n            abdulmelik: {\n              type: 'directory',\n              modified: 'Oct 19 12:00',\n              size: 4096,\n              contents: {\n                'README.md': {\n                  type: 'file',\n                  modified: 'Oct 19 12:00',\n                  size: 128,\n                  content: '# Welcome to Finder!\\n\\nThis is a LinkOS-style file browser.'\n                }\n              }\n            }\n          }\n        }\n      };\n    }\n\n    /**\n     * Clear cache (for testing)\n     */\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this.fileSystem = null;\n      this.loading = false;\n      this.loadPromise = null;\n      console.log('üìÅ FileSystemService: Cache cleared');\n    }\n  }]);\n}();\n(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(FileSystemService, \"instance\", null);\n(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(FileSystemService, \"fileSystem\", null);\n(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(FileSystemService, \"loading\", false);\n(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(FileSystemService, \"loadPromise\", null);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FileSystemService);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5979\n");

/***/ }),

/***/ 8823:
/*!***********************************************!*\
  !*** ./resources/js/services/SoundService.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n\n\n/**\n * SoundService - Handle terminal sound effects\n */\nvar SoundService = /*#__PURE__*/function () {\n  function SoundService() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, SoundService);\n    this.sounds = {};\n    this.enabled = this.loadPreference();\n    this.volume = 0.3;\n    this.audioContext = null;\n\n    // Ambient noise components\n    this.ambientNoiseSource = null;\n    this.ambientNoiseGain = null;\n    this.ambientLowHumOsc = null;\n    this.ambientLowHumGain = null;\n    this.ambientElectricOsc = null;\n    this.ambientElectricGain = null;\n    this.initializeSounds();\n    this.initializeAudioContext();\n  }\n\n  /**\n   * Initialize Web Audio API context\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(SoundService, [{\n    key: \"initializeAudioContext\",\n    value: function initializeAudioContext() {\n      try {\n        var AudioContext = window.AudioContext || window.webkitAudioContext;\n        if (AudioContext) {\n          this.audioContext = new AudioContext();\n        }\n      } catch (e) {\n        console.warn('Web Audio API not available:', e);\n      }\n    }\n\n    /**\n     * Generate a beep sound using Web Audio API\n     */\n  }, {\n    key: \"generateBeep\",\n    value: function generateBeep() {\n      var frequency = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 440;\n      var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.2;\n      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'sine';\n      if (!this.audioContext || !this.enabled) return;\n      try {\n        // Resume audio context if suspended (for autoplay policy)\n        if (this.audioContext.state === 'suspended') {\n          this.audioContext.resume();\n        }\n        var oscillator = this.audioContext.createOscillator();\n        var gainNode = this.audioContext.createGain();\n        oscillator.connect(gainNode);\n        gainNode.connect(this.audioContext.destination);\n        oscillator.frequency.value = frequency;\n        oscillator.type = type;\n\n        // Envelope for smooth sound\n        var now = this.audioContext.currentTime;\n        gainNode.gain.setValueAtTime(0, now);\n        gainNode.gain.linearRampToValueAtTime(this.volume, now + 0.01);\n        gainNode.gain.exponentialRampToValueAtTime(0.01, now + duration);\n        oscillator.start(now);\n        oscillator.stop(now + duration);\n      } catch (error) {\n        console.warn('Failed to generate beep:', error);\n      }\n    }\n\n    /**\n     * Generate Alien/Nostromo style beep (lower frequency, robotic)\n     */\n  }, {\n    key: \"generateAlienBeep\",\n    value: function generateAlienBeep() {\n      if (!this.audioContext || !this.enabled) return;\n      try {\n        if (this.audioContext.state === 'suspended') {\n          this.audioContext.resume();\n        }\n        var now = this.audioContext.currentTime;\n\n        // Create a distinctive two-tone beep\n        var oscillator1 = this.audioContext.createOscillator();\n        var oscillator2 = this.audioContext.createOscillator();\n        var gainNode = this.audioContext.createGain();\n        oscillator1.connect(gainNode);\n        oscillator2.connect(gainNode);\n        gainNode.connect(this.audioContext.destination);\n\n        // Low frequency harmonics for industrial feel\n        oscillator1.frequency.value = 180;\n        oscillator2.frequency.value = 240;\n        oscillator1.type = 'square';\n        oscillator2.type = 'sawtooth';\n\n        // Quick attack, medium decay\n        gainNode.gain.setValueAtTime(0, now);\n        gainNode.gain.linearRampToValueAtTime(this.volume * 0.8, now + 0.005);\n        gainNode.gain.exponentialRampToValueAtTime(0.01, now + 0.15);\n        oscillator1.start(now);\n        oscillator2.start(now);\n        oscillator1.stop(now + 0.15);\n        oscillator2.stop(now + 0.15);\n      } catch (error) {\n        console.warn('Failed to generate alien beep:', error);\n      }\n    }\n\n    /**\n     * Generate retro CRT style beep\n     */\n  }, {\n    key: \"generateRetroBeep\",\n    value: function generateRetroBeep() {\n      this.generateBeep(800, 0.15, 'square');\n    }\n\n    /**\n     * Generate Alien/Nostromo MOTHER computer boot sound\n     * Synthetic flat flute sequence: D5 then F5\n     */\n  }, {\n    key: \"generateAlienBootSound\",\n    value: function generateAlienBootSound() {\n      var _this = this;\n      if (!this.audioContext || !this.enabled) return;\n      try {\n        if (this.audioContext.state === 'suspended') {\n          this.audioContext.resume();\n        }\n        var now = this.audioContext.currentTime;\n\n        // === Background: Heavy industrial machinery hum with metal resonance ===\n        var hum = this.audioContext.createOscillator();\n        var humGain = this.audioContext.createGain();\n        var humFilter = this.audioContext.createBiquadFilter();\n        var humDistortion = this.audioContext.createWaveShaper();\n\n        // Sawtooth for more aggressive machinery sound\n        hum.type = 'sawtooth';\n        hum.frequency.value = 45; // Lower, more menacing\n\n        // Create distortion curve for metallic grind\n        var curve = new Float32Array(256);\n        for (var i = 0; i < 256; i++) {\n          var x = (i - 128) / 128;\n          // Harsh distortion for machinery grinding\n          curve[i] = Math.tanh(x * 3) * 0.8;\n        }\n        humDistortion.curve = curve;\n        humDistortion.oversample = '4x';\n\n        // Bandpass for metallic resonance\n        humFilter.type = 'bandpass';\n        humFilter.frequency.value = 180;\n        humFilter.Q.value = 8; // High Q for metallic ring\n\n        hum.connect(humDistortion);\n        humDistortion.connect(humFilter);\n        humFilter.connect(humGain);\n        humGain.connect(this.audioContext.destination);\n        humGain.gain.setValueAtTime(0, now);\n        humGain.gain.linearRampToValueAtTime(this.volume * 0.15, now + 0.15);\n        humGain.gain.setValueAtTime(this.volume * 0.15, now + 1.4);\n        humGain.gain.exponentialRampToValueAtTime(0.001, now + 1.6);\n        hum.start(now);\n        hum.stop(now + 1.6);\n\n        // === Add servo motor whine/wind-up ===\n        var servo = this.audioContext.createOscillator();\n        var servoGain = this.audioContext.createGain();\n        var servoFilter = this.audioContext.createBiquadFilter();\n        servo.type = 'sawtooth';\n        servo.frequency.setValueAtTime(800, now);\n        servo.frequency.exponentialRampToValueAtTime(2200, now + 0.08); // Fast wind-up\n        servo.frequency.setValueAtTime(2200, now + 0.08);\n        servo.frequency.exponentialRampToValueAtTime(100, now + 0.2); // Wind down\n\n        servoFilter.type = 'bandpass';\n        servoFilter.frequency.value = 1200;\n        servoFilter.Q.value = 5;\n        servo.connect(servoFilter);\n        servoFilter.connect(servoGain);\n        servoGain.connect(this.audioContext.destination);\n        servoGain.gain.setValueAtTime(0, now);\n        servoGain.gain.linearRampToValueAtTime(this.volume * 0.2, now + 0.03);\n        servoGain.gain.exponentialRampToValueAtTime(0.001, now + 0.23);\n        servo.start(now);\n        servo.stop(now + 0.25);\n\n        // === D5 - Ominous tone with distortion and metallic overtones ===\n        var d5Main = this.audioContext.createOscillator();\n        var d5Sub = this.audioContext.createOscillator(); // Sub-harmonic for weight\n        var d5Overtone = this.audioContext.createOscillator(); // Harsh overtone\n        var d5Gain = this.audioContext.createGain();\n        var d5SubGain = this.audioContext.createGain();\n        var d5OvertoneGain = this.audioContext.createGain();\n        var d5Filter = this.audioContext.createBiquadFilter();\n        var d5Distortion = this.audioContext.createWaveShaper();\n\n        // Main tone - square with distortion\n        d5Main.type = 'square';\n        d5Main.frequency.value = 587.33; // D5\n\n        // Sub-harmonic for ominous weight\n        d5Sub.type = 'triangle';\n        d5Sub.frequency.value = 587.33 / 2; // Octave down\n\n        // Harsh metallic overtone\n        d5Overtone.type = 'sawtooth';\n        d5Overtone.frequency.value = 587.33 * 1.5;\n\n        // Aggressive distortion curve\n        var d5Curve = new Float32Array(256);\n        for (var _i = 0; _i < 256; _i++) {\n          var _x = (_i - 128) / 128;\n          d5Curve[_i] = Math.tanh(_x * 4) * 0.9; // More aggressive\n        }\n        d5Distortion.curve = d5Curve;\n        d5Distortion.oversample = '4x';\n\n        // Lowpass with resonance for metallic character\n        d5Filter.type = 'lowpass';\n        d5Filter.frequency.setValueAtTime(3000, now + 0.05);\n        d5Filter.frequency.exponentialRampToValueAtTime(600, now + 0.18); // Sweep for √ßiuuw\n        d5Filter.frequency.setValueAtTime(600, now + 0.75);\n        d5Filter.Q.value = 6; // High resonance for metallic ring\n\n        // Connect main signal through distortion and filter\n        d5Main.connect(d5Distortion);\n        d5Distortion.connect(d5Filter);\n        d5Filter.connect(d5Gain);\n\n        // Connect sub and overtone\n        d5Sub.connect(d5SubGain);\n        d5SubGain.connect(d5Gain);\n        d5Overtone.connect(d5OvertoneGain);\n        d5OvertoneGain.connect(d5Gain);\n        d5Gain.connect(this.audioContext.destination);\n\n        // Main envelope - more aggressive attack\n        d5Gain.gain.setValueAtTime(0, now + 0.05);\n        d5Gain.gain.linearRampToValueAtTime(this.volume * 0.45, now + 0.07);\n        d5Gain.gain.setValueAtTime(this.volume * 0.45, now + 0.73);\n        d5Gain.gain.linearRampToValueAtTime(0, now + 0.78);\n\n        // Sub harmonic envelope\n        d5SubGain.gain.setValueAtTime(this.volume * 0.15, now + 0.05);\n        d5SubGain.gain.setValueAtTime(this.volume * 0.15, now + 0.73);\n        d5SubGain.gain.linearRampToValueAtTime(0, now + 0.78);\n\n        // Overtone envelope - fades in for scariness\n        d5OvertoneGain.gain.setValueAtTime(0, now + 0.05);\n        d5OvertoneGain.gain.linearRampToValueAtTime(this.volume * 0.12, now + 0.25);\n        d5OvertoneGain.gain.setValueAtTime(this.volume * 0.12, now + 0.73);\n        d5OvertoneGain.gain.linearRampToValueAtTime(0, now + 0.78);\n        d5Main.start(now + 0.05);\n        d5Main.stop(now + 0.78);\n        d5Sub.start(now + 0.05);\n        d5Sub.stop(now + 0.78);\n        d5Overtone.start(now + 0.05);\n        d5Overtone.stop(now + 0.78);\n\n        // === F5 - Short mechanical pulse with impact ===\n        // Starts at 0.75s (half of original 1.5s timing)\n        setTimeout(function () {\n          var f5Main = _this.audioContext.createOscillator();\n          var f5Sub = _this.audioContext.createOscillator();\n          var f5Impact = _this.audioContext.createOscillator(); // Metallic click\n          var f5Gain = _this.audioContext.createGain();\n          var f5SubGain = _this.audioContext.createGain();\n          var f5ImpactGain = _this.audioContext.createGain();\n          var f5Filter = _this.audioContext.createBiquadFilter();\n          var f5Distortion = _this.audioContext.createWaveShaper();\n          f5Main.type = 'square';\n          f5Main.frequency.value = 698.46; // F5\n\n          // Sub for weight\n          f5Sub.type = 'triangle';\n          f5Sub.frequency.value = 698.46 / 2;\n\n          // Metallic impact click\n          f5Impact.type = 'square';\n          f5Impact.frequency.value = 4000;\n\n          // Harsh distortion\n          var f5Curve = new Float32Array(256);\n          for (var _i2 = 0; _i2 < 256; _i2++) {\n            var _x2 = (_i2 - 128) / 128;\n            f5Curve[_i2] = Math.tanh(_x2 * 5) * 0.95;\n          }\n          f5Distortion.curve = f5Curve;\n          f5Distortion.oversample = '4x';\n          f5Filter.type = 'lowpass';\n          f5Filter.frequency.value = 1800;\n          f5Filter.Q.value = 5;\n          f5Main.connect(f5Distortion);\n          f5Distortion.connect(f5Filter);\n          f5Filter.connect(f5Gain);\n          f5Sub.connect(f5SubGain);\n          f5SubGain.connect(f5Gain);\n          f5Impact.connect(f5ImpactGain);\n          f5ImpactGain.connect(f5Gain);\n          f5Gain.connect(_this.audioContext.destination);\n          var t = _this.audioContext.currentTime;\n\n          // Aggressive punch\n          f5Gain.gain.setValueAtTime(0, t);\n          f5Gain.gain.linearRampToValueAtTime(_this.volume * 0.5, t + 0.01);\n          f5Gain.gain.setValueAtTime(_this.volume * 0.5, t + 0.23);\n          f5Gain.gain.linearRampToValueAtTime(0, t + 0.26);\n\n          // Sub envelope\n          f5SubGain.gain.setValueAtTime(_this.volume * 0.18, t);\n          f5SubGain.gain.setValueAtTime(_this.volume * 0.18, t + 0.23);\n          f5SubGain.gain.linearRampToValueAtTime(0, t + 0.26);\n\n          // Impact click - very short\n          f5ImpactGain.gain.setValueAtTime(_this.volume * 0.25, t);\n          f5ImpactGain.gain.exponentialRampToValueAtTime(0.001, t + 0.015);\n          f5Main.start(t);\n          f5Main.stop(t + 0.27);\n          f5Sub.start(t);\n          f5Sub.stop(t + 0.27);\n          f5Impact.start(t);\n          f5Impact.stop(t + 0.015);\n        }, 750); // Half of original 1500ms\n      } catch (error) {\n        console.warn('Failed to generate alien boot sound:', error);\n      }\n    }\n\n    /**\n     * Generate retro CRT boot sound (warmup hum)\n     */\n  }, {\n    key: \"generateRetroBootSound\",\n    value: function generateRetroBootSound() {\n      if (!this.audioContext || !this.enabled) return;\n      try {\n        if (this.audioContext.state === 'suspended') {\n          this.audioContext.resume();\n        }\n        var now = this.audioContext.currentTime;\n\n        // CRT warmup with frequency sweep\n        var oscillator = this.audioContext.createOscillator();\n        var gainNode = this.audioContext.createGain();\n        oscillator.connect(gainNode);\n        gainNode.connect(this.audioContext.destination);\n        oscillator.type = 'triangle';\n        oscillator.frequency.setValueAtTime(15000, now);\n        oscillator.frequency.exponentialRampToValueAtTime(100, now + 1.5);\n        gainNode.gain.setValueAtTime(0, now);\n        gainNode.gain.linearRampToValueAtTime(this.volume * 0.2, now + 0.3);\n        gainNode.gain.setValueAtTime(this.volume * 0.2, now + 1.2);\n        gainNode.gain.exponentialRampToValueAtTime(0.01, now + 1.8);\n        oscillator.start(now);\n        oscillator.stop(now + 1.8);\n      } catch (error) {\n        console.warn('Failed to generate retro boot sound:', error);\n      }\n    }\n\n    /**\n     * Generate standard terminal boot chime\n     */\n  }, {\n    key: \"generateDefaultBootSound\",\n    value: function generateDefaultBootSound() {\n      var _this2 = this;\n      if (!this.audioContext || !this.enabled) return;\n      try {\n        if (this.audioContext.state === 'suspended') {\n          this.audioContext.resume();\n        }\n        var now = this.audioContext.currentTime;\n\n        // Pleasant startup chord\n        [440, 554.37, 659.25].forEach(function (freq, index) {\n          var osc = _this2.audioContext.createOscillator();\n          var gain = _this2.audioContext.createGain();\n          osc.connect(gain);\n          gain.connect(_this2.audioContext.destination);\n          osc.type = 'sine';\n          osc.frequency.value = freq;\n          var delay = index * 0.05;\n          gain.gain.setValueAtTime(0, now + delay);\n          gain.gain.linearRampToValueAtTime(_this2.volume * 0.3, now + delay + 0.02);\n          gain.gain.exponentialRampToValueAtTime(0.01, now + delay + 0.4);\n          osc.start(now + delay);\n          osc.stop(now + delay + 0.4);\n        });\n      } catch (error) {\n        console.warn('Failed to generate default boot sound:', error);\n      }\n    }\n\n    /**\n     * Generate typing sound for Alien theme (mechanical keyboard with solenoid)\n     * Simulates heavy mechanical switches with metallic resonance\n     */\n  }, {\n    key: \"generateAlienKeypress\",\n    value: function generateAlienKeypress() {\n      if (!this.audioContext || !this.enabled) return;\n      try {\n        if (this.audioContext.state === 'suspended') {\n          this.audioContext.resume();\n        }\n        var now = this.audioContext.currentTime;\n\n        // === Key Down Phase ===\n        // Initial impact - sharp metallic click\n        var impactOsc = this.audioContext.createOscillator();\n        var impactGain = this.audioContext.createGain();\n        var impactFilter = this.audioContext.createBiquadFilter();\n        impactOsc.type = 'square';\n        impactOsc.frequency.value = 2200 + Math.random() * 300; // Slight variation per key\n\n        impactFilter.type = 'bandpass';\n        impactFilter.frequency.value = 2400;\n        impactFilter.Q.value = 3;\n        impactOsc.connect(impactFilter);\n        impactFilter.connect(impactGain);\n        impactGain.connect(this.audioContext.destination);\n\n        // Very sharp attack for mechanical feel\n        impactGain.gain.setValueAtTime(this.volume * 0.25, now);\n        impactGain.gain.exponentialRampToValueAtTime(0.001, now + 0.015);\n        impactOsc.start(now);\n        impactOsc.stop(now + 0.015);\n\n        // === Switch Contact - Lower frequency component ===\n        var switchOsc = this.audioContext.createOscillator();\n        var switchGain = this.audioContext.createGain();\n        switchOsc.type = 'sawtooth';\n        switchOsc.frequency.value = 180 + Math.random() * 40;\n        switchOsc.connect(switchGain);\n        switchGain.connect(this.audioContext.destination);\n        switchGain.gain.setValueAtTime(0, now);\n        switchGain.gain.linearRampToValueAtTime(this.volume * 0.15, now + 0.003);\n        switchGain.gain.exponentialRampToValueAtTime(0.001, now + 0.025);\n        switchOsc.start(now);\n        switchOsc.stop(now + 0.025);\n\n        // === Spring Resonance - Metallic ring ===\n        var springOsc = this.audioContext.createOscillator();\n        var springGain = this.audioContext.createGain();\n        var springFilter = this.audioContext.createBiquadFilter();\n        springOsc.type = 'sine';\n        springOsc.frequency.value = 4800 + Math.random() * 400; // High metallic frequency\n\n        springFilter.type = 'bandpass';\n        springFilter.frequency.value = 5000;\n        springFilter.Q.value = 8; // Very narrow resonance\n\n        springOsc.connect(springFilter);\n        springFilter.connect(springGain);\n        springGain.connect(this.audioContext.destination);\n        springGain.gain.setValueAtTime(0, now + 0.005);\n        springGain.gain.linearRampToValueAtTime(this.volume * 0.08, now + 0.008);\n        springGain.gain.exponentialRampToValueAtTime(0.001, now + 0.04);\n        springOsc.start(now + 0.005);\n        springOsc.stop(now + 0.04);\n      } catch (error) {\n        console.warn('Failed to generate alien keypress:', error);\n      }\n    }\n\n    /**\n     * Start continuous Eb5 tone for alien cat command (line typing)\n     * Returns oscillator and gain nodes so they can be stopped when line is complete\n     */\n  }, {\n    key: \"startAlienCatLineTone\",\n    value: function startAlienCatLineTone() {\n      if (!this.audioContext || !this.enabled) return null;\n      try {\n        if (this.audioContext.state === 'suspended') {\n          this.audioContext.resume();\n        }\n        var now = this.audioContext.currentTime;\n        var osc = this.audioContext.createOscillator();\n        var gain = this.audioContext.createGain();\n        var filter = this.audioContext.createBiquadFilter();\n        osc.type = 'sine';\n        osc.frequency.value = 622.25; // Eb5\n\n        filter.type = 'bandpass';\n        filter.frequency.value = 622.25;\n        filter.Q.value = 12;\n        osc.connect(filter);\n        filter.connect(gain);\n        gain.connect(this.audioContext.destination);\n\n        // Fade in quickly\n        gain.gain.setValueAtTime(0, now);\n        gain.gain.linearRampToValueAtTime(this.volume * 0.15, now + 0.05);\n        osc.start(now);\n        return {\n          osc: osc,\n          gain: gain\n        };\n      } catch (error) {\n        console.warn('Failed to start alien cat line tone:', error);\n        return null;\n      }\n    }\n\n    /**\n     * Stop the continuous Eb5 tone with fade out\n     */\n  }, {\n    key: \"stopAlienCatLineTone\",\n    value: function stopAlienCatLineTone(nodes) {\n      if (!nodes || !this.audioContext) return;\n      try {\n        var now = this.audioContext.currentTime;\n\n        // Fade out quickly\n        nodes.gain.gain.cancelScheduledValues(now);\n        nodes.gain.gain.setValueAtTime(nodes.gain.gain.value, now);\n        nodes.gain.gain.linearRampToValueAtTime(0, now + 0.05);\n        nodes.osc.stop(now + 0.05);\n      } catch (error) {\n        console.warn('Failed to stop alien cat line tone:', error);\n      }\n    }\n\n    /**\n     * Play A4 tone for alien cat command\n     */\n  }, {\n    key: \"playAlienCatA4\",\n    value: function playAlienCatA4() {\n      var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.2;\n      if (!this.audioContext || !this.enabled) return;\n      try {\n        if (this.audioContext.state === 'suspended') {\n          this.audioContext.resume();\n        }\n        var now = this.audioContext.currentTime;\n        var osc = this.audioContext.createOscillator();\n        var gain = this.audioContext.createGain();\n        var filter = this.audioContext.createBiquadFilter();\n        osc.type = 'sine';\n        osc.frequency.value = 440.00; // A4\n\n        filter.type = 'bandpass';\n        filter.frequency.value = 440.00;\n        filter.Q.value = 12;\n        osc.connect(filter);\n        filter.connect(gain);\n        gain.connect(this.audioContext.destination);\n\n        // Quick beep\n        gain.gain.setValueAtTime(0, now);\n        gain.gain.linearRampToValueAtTime(this.volume * 0.2, now + 0.02);\n        gain.gain.setValueAtTime(this.volume * 0.2, now + duration - 0.02);\n        gain.gain.linearRampToValueAtTime(0, now + duration);\n        osc.start(now);\n        osc.stop(now + duration);\n      } catch (error) {\n        console.warn('Failed to play alien cat A4:', error);\n      }\n    }\n\n    /**\n     * Play Db5 tone for alien cat command\n     */\n  }, {\n    key: \"playAlienCatDb5\",\n    value: function playAlienCatDb5() {\n      var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.1;\n      if (!this.audioContext || !this.enabled) return;\n      try {\n        if (this.audioContext.state === 'suspended') {\n          this.audioContext.resume();\n        }\n        var now = this.audioContext.currentTime;\n        var osc = this.audioContext.createOscillator();\n        var gain = this.audioContext.createGain();\n        var filter = this.audioContext.createBiquadFilter();\n        osc.type = 'sine';\n        osc.frequency.value = 554.37; // Db5\n\n        filter.type = 'bandpass';\n        filter.frequency.value = 554.37;\n        filter.Q.value = 12;\n        osc.connect(filter);\n        filter.connect(gain);\n        gain.connect(this.audioContext.destination);\n\n        // Quick beep\n        gain.gain.setValueAtTime(0, now);\n        gain.gain.linearRampToValueAtTime(this.volume * 0.2, now + 0.02);\n        gain.gain.setValueAtTime(this.volume * 0.2, now + duration - 0.02);\n        gain.gain.linearRampToValueAtTime(0, now + duration);\n        osc.start(now);\n        osc.stop(now + duration);\n      } catch (error) {\n        console.warn('Failed to play alien cat Db5:', error);\n      }\n    }\n\n    /**\n     * Play F5 beep for alien cat command (line break)\n     */\n  }, {\n    key: \"playAlienCatLineBreak\",\n    value: function playAlienCatLineBreak() {\n      var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.1;\n      if (!this.audioContext || !this.enabled) return;\n      try {\n        if (this.audioContext.state === 'suspended') {\n          this.audioContext.resume();\n        }\n        var now = this.audioContext.currentTime;\n        var osc = this.audioContext.createOscillator();\n        var gain = this.audioContext.createGain();\n        var filter = this.audioContext.createBiquadFilter();\n        osc.type = 'sine';\n        osc.frequency.value = 698.46; // F5\n\n        filter.type = 'bandpass';\n        filter.frequency.value = 698.46;\n        filter.Q.value = 12;\n        osc.connect(filter);\n        filter.connect(gain);\n        gain.connect(this.audioContext.destination);\n\n        // Quick beep\n        gain.gain.setValueAtTime(0, now);\n        gain.gain.linearRampToValueAtTime(this.volume * 0.2, now + 0.02);\n        gain.gain.setValueAtTime(this.volume * 0.2, now + duration - 0.02);\n        gain.gain.linearRampToValueAtTime(0, now + duration);\n        osc.start(now);\n        osc.stop(now + duration);\n      } catch (error) {\n        console.warn('Failed to play alien cat line break:', error);\n      }\n    }\n\n    /**\n     * Generate typing sound for retro theme (mechanical typewriter)\n     */\n  }, {\n    key: \"generateRetroKeypress\",\n    value: function generateRetroKeypress() {\n      if (!this.audioContext || !this.enabled) return;\n      try {\n        if (this.audioContext.state === 'suspended') {\n          this.audioContext.resume();\n        }\n        var now = this.audioContext.currentTime;\n\n        // Typewriter-style click\n        var osc = this.audioContext.createOscillator();\n        var gain = this.audioContext.createGain();\n        osc.connect(gain);\n        gain.connect(this.audioContext.destination);\n        osc.type = 'square';\n        osc.frequency.value = 2000 + Math.random() * 500; // Slight variation\n\n        gain.gain.setValueAtTime(this.volume * 0.1, now);\n        gain.gain.exponentialRampToValueAtTime(0.01, now + 0.015);\n        osc.start(now);\n        osc.stop(now + 0.015);\n      } catch (error) {\n        console.warn('Failed to generate retro keypress:', error);\n      }\n    }\n\n    /**\n     * Generate typing sound for default theme (soft click)\n     */\n  }, {\n    key: \"generateDefaultKeypress\",\n    value: function generateDefaultKeypress() {\n      if (!this.audioContext || !this.enabled) return;\n      try {\n        if (this.audioContext.state === 'suspended') {\n          this.audioContext.resume();\n        }\n        var now = this.audioContext.currentTime;\n\n        // Soft keyboard click\n        var osc = this.audioContext.createOscillator();\n        var gain = this.audioContext.createGain();\n        osc.connect(gain);\n        gain.connect(this.audioContext.destination);\n        osc.type = 'sine';\n        osc.frequency.value = 800;\n        gain.gain.setValueAtTime(this.volume * 0.08, now);\n        gain.gain.exponentialRampToValueAtTime(0.01, now + 0.01);\n        osc.start(now);\n        osc.stop(now + 0.01);\n      } catch (error) {\n        console.warn('Failed to generate default keypress:', error);\n      }\n    }\n\n    /**\n     * Generate Tab key sound (different from regular keypress)\n     * Alien theme: Heavier mechanical shift\n     */\n  }, {\n    key: \"generateTabSound\",\n    value: function generateTabSound() {\n      var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n      if (!this.audioContext || !this.enabled) return;\n      try {\n        if (this.audioContext.state === 'suspended') {\n          this.audioContext.resume();\n        }\n        var now = this.audioContext.currentTime;\n        if (theme === 'alien') {\n          // Alien: Heavier mechanical TAB with carriage-like sound\n          // Initial heavy impact\n          var impact = this.audioContext.createOscillator();\n          var impactGain = this.audioContext.createGain();\n          var impactFilter = this.audioContext.createBiquadFilter();\n          impact.type = 'sawtooth';\n          impact.frequency.value = 150;\n          impactFilter.type = 'lowpass';\n          impactFilter.frequency.value = 600;\n          impactFilter.Q.value = 2;\n          impact.connect(impactFilter);\n          impactFilter.connect(impactGain);\n          impactGain.connect(this.audioContext.destination);\n          impactGain.gain.setValueAtTime(this.volume * 0.35, now);\n          impactGain.gain.exponentialRampToValueAtTime(0.001, now + 0.08);\n          impact.start(now);\n          impact.stop(now + 0.08);\n\n          // Mechanical slide/shift sound\n          var slide = this.audioContext.createOscillator();\n          var slideGain = this.audioContext.createGain();\n          var slideFilter = this.audioContext.createBiquadFilter();\n          slide.type = 'square';\n          slideFilter.type = 'bandpass';\n          slideFilter.frequency.value = 1200;\n          slideFilter.Q.value = 4;\n          slide.connect(slideFilter);\n          slideFilter.connect(slideGain);\n          slideGain.connect(this.audioContext.destination);\n          slide.frequency.setValueAtTime(800, now + 0.01);\n          slide.frequency.exponentialRampToValueAtTime(1400, now + 0.06);\n          slideGain.gain.setValueAtTime(0, now + 0.01);\n          slideGain.gain.linearRampToValueAtTime(this.volume * 0.2, now + 0.02);\n          slideGain.gain.exponentialRampToValueAtTime(0.001, now + 0.08);\n          slide.start(now + 0.01);\n          slide.stop(now + 0.08);\n        } else {\n          // Default: Higher pitched tab sound\n          var osc = this.audioContext.createOscillator();\n          var gain = this.audioContext.createGain();\n          osc.connect(gain);\n          gain.connect(this.audioContext.destination);\n          osc.type = 'triangle';\n          osc.frequency.value = 1200;\n          gain.gain.setValueAtTime(this.volume * 0.15, now);\n          gain.gain.exponentialRampToValueAtTime(0.01, now + 0.04);\n          osc.start(now);\n          osc.stop(now + 0.04);\n        }\n      } catch (error) {\n        console.warn('Failed to generate tab sound:', error);\n      }\n    }\n\n    /**\n     * Generate Enter key sound\n     * Alien theme: Authoritative command confirmation\n     */\n  }, {\n    key: \"generateEnterSound\",\n    value: function generateEnterSound() {\n      var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n      if (!this.audioContext || !this.enabled) return;\n      try {\n        if (this.audioContext.state === 'suspended') {\n          this.audioContext.resume();\n        }\n        var now = this.audioContext.currentTime;\n        if (theme === 'alien') {\n          // Alien: Authoritative two-tone confirmation\n          // Low frequency component - command received\n          var lowOsc = this.audioContext.createOscillator();\n          var lowGain = this.audioContext.createGain();\n          lowOsc.type = 'square';\n          lowOsc.frequency.value = 220;\n          lowOsc.connect(lowGain);\n          lowGain.connect(this.audioContext.destination);\n          lowGain.gain.setValueAtTime(this.volume * 0.3, now);\n          lowGain.gain.exponentialRampToValueAtTime(0.001, now + 0.12);\n          lowOsc.start(now);\n          lowOsc.stop(now + 0.12);\n\n          // High frequency component - command confirmed\n          var highOsc = this.audioContext.createOscillator();\n          var highGain = this.audioContext.createGain();\n          highOsc.type = 'sine';\n          highOsc.frequency.value = 660;\n          highOsc.connect(highGain);\n          highGain.connect(this.audioContext.destination);\n          highGain.gain.setValueAtTime(0, now + 0.04);\n          highGain.gain.linearRampToValueAtTime(this.volume * 0.25, now + 0.045);\n          highGain.gain.exponentialRampToValueAtTime(0.001, now + 0.12);\n          highOsc.start(now + 0.04);\n          highOsc.stop(now + 0.12);\n        } else {\n          // Default: Satisfying confirmation\n          var osc = this.audioContext.createOscillator();\n          var gain = this.audioContext.createGain();\n          osc.connect(gain);\n          gain.connect(this.audioContext.destination);\n          osc.type = 'sine';\n          osc.frequency.value = 660;\n          gain.gain.setValueAtTime(this.volume * 0.2, now);\n          gain.gain.exponentialRampToValueAtTime(0.01, now + 0.08);\n          osc.start(now);\n          osc.stop(now + 0.08);\n        }\n      } catch (error) {\n        console.warn('Failed to generate enter sound:', error);\n      }\n    }\n\n    /**\n     * Generate command success sound\n     */\n  }, {\n    key: \"generateSuccessSound\",\n    value: function generateSuccessSound() {\n      var _this3 = this;\n      var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n      if (!this.audioContext || !this.enabled) return;\n      try {\n        if (this.audioContext.state === 'suspended') {\n          this.audioContext.resume();\n        }\n        var now = this.audioContext.currentTime;\n\n        // Pleasant ascending tone\n        [440, 554, 659].forEach(function (freq, index) {\n          setTimeout(function () {\n            var osc = _this3.audioContext.createOscillator();\n            var gain = _this3.audioContext.createGain();\n            osc.connect(gain);\n            gain.connect(_this3.audioContext.destination);\n            osc.type = 'sine';\n            osc.frequency.value = freq;\n            var t = _this3.audioContext.currentTime;\n            gain.gain.setValueAtTime(_this3.volume * 0.15, t);\n            gain.gain.exponentialRampToValueAtTime(0.01, t + 0.15);\n            osc.start(t);\n            osc.stop(t + 0.15);\n          }, index * 80);\n        });\n      } catch (error) {\n        console.warn('Failed to generate success sound:', error);\n      }\n    }\n\n    /**\n     * Initialize sound library\n     */\n  }, {\n    key: \"initializeSounds\",\n    value: function initializeSounds() {\n      this.sounds = {\n        // Alien/Nostromo sounds\n        alienBoot: {\n          url: '/sounds/alien-boot.mp3',\n          description: 'MU/TH/UR system startup'\n        },\n        alienKeypress: {\n          url: '/sounds/alien-keypress.mp3',\n          description: 'Mechanical keyboard click'\n        },\n        alienBeep: {\n          url: '/sounds/alien-beep.mp3',\n          description: 'System beep'\n        },\n        alienError: {\n          url: '/sounds/alien-error.mp3',\n          description: 'Error tone'\n        },\n        // Default terminal sounds\n        terminalBoot: {\n          url: '/sounds/terminal-boot.mp3',\n          description: 'Terminal startup'\n        },\n        keypress: {\n          url: '/sounds/keypress.mp3',\n          description: 'Keyboard click'\n        },\n        beep: {\n          url: '/sounds/beep.mp3',\n          description: 'Bell sound'\n        },\n        // Retro sounds\n        retroBoot: {\n          url: '/sounds/retro-boot.mp3',\n          description: 'CRT warmup'\n        },\n        retroKeypress: {\n          url: '/sounds/retro-keypress.mp3',\n          description: 'Mechanical switch'\n        }\n      };\n    }\n\n    /**\n     * Play a sound effect\n     */\n  }, {\n    key: \"play\",\n    value: function play(soundName) {\n      var _this4 = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (!this.enabled) return;\n      var sound = this.sounds[soundName];\n      if (!sound) {\n        console.warn(\"Sound not found: \".concat(soundName));\n        return;\n      }\n\n      // Try to load audio file, fallback to generated sound\n      try {\n        var audio = new Audio(sound.url);\n        audio.volume = options.volume || this.volume;\n        audio.play()[\"catch\"](function (err) {\n          // File not found or autoplay blocked - use generated sound\n          console.debug('Audio file not available, using generated sound');\n          _this4.playFallbackSound(soundName);\n        });\n      } catch (error) {\n        console.warn('Failed to play sound, using fallback:', error);\n        this.playFallbackSound(soundName);\n      }\n    }\n\n    /**\n     * Play fallback generated sound when audio files are unavailable\n     */\n  }, {\n    key: \"playFallbackSound\",\n    value: function playFallbackSound(soundName) {\n      if (soundName.includes('alien')) {\n        this.generateAlienBeep();\n      } else if (soundName.includes('retro')) {\n        this.generateRetroBeep();\n      } else {\n        this.generateBeep(440, 0.2, 'sine');\n      }\n    }\n\n    /**\n     * Play boot sound based on theme\n     */\n  }, {\n    key: \"playBootSound\",\n    value: function playBootSound() {\n      var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n      if (!this.enabled) return;\n      switch (theme) {\n        case 'alien':\n          this.generateAlienBootSound();\n          break;\n        case 'retro':\n        case 'apple-ii':\n          this.generateRetroBootSound();\n          break;\n        case 'tron':\n        case 'cyberpunk':\n          this.generateDefaultBootSound();\n          break;\n        default:\n          this.generateDefaultBootSound();\n      }\n    }\n\n    /**\n     * Play keypress sound based on theme\n     */\n  }, {\n    key: \"playKeypressSound\",\n    value: function playKeypressSound() {\n      var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n      if (!this.enabled) return;\n      switch (theme) {\n        case 'alien':\n          this.generateAlienKeypress();\n          break;\n        case 'retro':\n        case 'apple-ii':\n          this.generateRetroKeypress();\n          break;\n        case 'hacker':\n        case 'matrix':\n          // Rapid, digital sound for hacker themes\n          this.generateBeep(1500, 0.008, 'square');\n          break;\n        default:\n          this.generateDefaultKeypress();\n      }\n    }\n\n    /**\n     * Play system beep\n     */\n  }, {\n    key: \"playBeep\",\n    value: function playBeep() {\n      var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n      if (theme === 'alien') {\n        this.generateAlienBeep();\n      } else if (theme === 'retro' || theme === 'apple-ii') {\n        this.generateRetroBeep();\n      } else {\n        this.generateBeep(440, 0.2, 'sine');\n      }\n    }\n\n    /**\n     * Play error sound\n     */\n  }, {\n    key: \"playError\",\n    value: function playError() {\n      var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n      if (theme === 'alien') {\n        this.generateBeep(120, 0.3, 'square'); // Low warning tone\n      } else {\n        this.generateBeep(200, 0.25, 'sawtooth');\n      }\n    }\n\n    /**\n     * Start continuous ambient static for alien theme\n     * Multi-layered atmospheric soundscape with tape hiss, electrical hum, and interference\n     */\n  }, {\n    key: \"startAmbientStatic\",\n    value: function startAmbientStatic() {\n      var _this5 = this;\n      if (!this.audioContext || !this.enabled || this.ambientNoiseSource) return;\n      try {\n        if (this.audioContext.state === 'suspended') {\n          this.audioContext.resume();\n        }\n\n        // === LAYER 1: High-Frequency Tape Hiss ===\n        var bufferSize = this.audioContext.sampleRate * 3; // 3-second buffer for variation\n        var noiseBuffer = this.audioContext.createBuffer(2, bufferSize, this.audioContext.sampleRate);\n\n        // Generate stereo pink noise with slight channel differences\n        for (var channel = 0; channel < 2; channel++) {\n          var noiseData = noiseBuffer.getChannelData(channel);\n          var b0 = 0,\n            b1 = 0,\n            b2 = 0,\n            b3 = 0,\n            b4 = 0,\n            b5 = 0,\n            b6 = 0;\n          for (var i = 0; i < bufferSize; i++) {\n            var white = Math.random() * 2 - 1;\n            // Pink noise filter cascade\n            b0 = 0.99886 * b0 + white * 0.0555179;\n            b1 = 0.99332 * b1 + white * 0.0750759;\n            b2 = 0.96900 * b2 + white * 0.1538520;\n            b3 = 0.86650 * b3 + white * 0.3104856;\n            b4 = 0.55000 * b4 + white * 0.5329522;\n            b5 = -0.7616 * b5 - white * 0.0168980;\n\n            // Add occasional crackles for tape imperfections\n            var crackle = Math.random() > 0.998 ? Math.random() * 0.3 : 0;\n            noiseData[i] = (b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362) * 0.11 + crackle;\n            b6 = white * 0.115926;\n          }\n        }\n\n        // Create buffer source for tape hiss\n        this.ambientNoiseSource = this.audioContext.createBufferSource();\n        this.ambientNoiseSource.buffer = noiseBuffer;\n        this.ambientNoiseSource.loop = true;\n        this.ambientNoiseSource.playbackRate.value = 0.98 + Math.random() * 0.04; // Slight speed variation\n\n        // High-pass filter for tape hiss character (2-6kHz range)\n        var noiseFilter = this.audioContext.createBiquadFilter();\n        noiseFilter.type = 'highpass';\n        noiseFilter.frequency.value = 2800;\n        noiseFilter.Q.value = 0.7;\n\n        // Gain for tape hiss\n        this.ambientNoiseGain = this.audioContext.createGain();\n        this.ambientNoiseGain.gain.value = this.volume * 0.06; // Slightly more audible\n\n        // Connect tape hiss chain\n        this.ambientNoiseSource.connect(noiseFilter);\n        noiseFilter.connect(this.ambientNoiseGain);\n        this.ambientNoiseGain.connect(this.audioContext.destination);\n\n        // === LAYER 2: Deep Electrical Hum (50Hz + harmonics) ===\n        this.ambientLowHumOsc = this.audioContext.createOscillator();\n        this.ambientLowHumGain = this.audioContext.createGain();\n        this.ambientLowHumOsc.type = 'sawtooth';\n        this.ambientLowHumOsc.frequency.value = 50; // Mains hum\n\n        // Very subtle low-frequency rumble\n        this.ambientLowHumGain.gain.value = this.volume * 0.03;\n\n        // Add slight frequency modulation for realism\n        var humLFO = this.audioContext.createOscillator();\n        var humLFOGain = this.audioContext.createGain();\n        humLFO.type = 'sine';\n        humLFO.frequency.value = 0.15; // Slow oscillation\n        humLFOGain.gain.value = 0.3; // Subtle frequency variation\n\n        humLFO.connect(humLFOGain);\n        humLFOGain.connect(this.ambientLowHumOsc.frequency);\n        this.ambientLowHumOsc.connect(this.ambientLowHumGain);\n        this.ambientLowHumGain.connect(this.audioContext.destination);\n\n        // === LAYER 3: Mid-Range Electrical Interference ===\n        this.ambientElectricOsc = this.audioContext.createOscillator();\n        this.ambientElectricGain = this.audioContext.createGain();\n\n        // Create warbling interference tone\n        this.ambientElectricOsc.type = 'triangle';\n        this.ambientElectricOsc.frequency.value = 120; // Harmonic of 60Hz (US power)\n\n        // Modulate for interference effect\n        var electricLFO = this.audioContext.createOscillator();\n        var electricLFOGain = this.audioContext.createGain();\n        electricLFO.type = 'sine';\n        electricLFO.frequency.value = 0.07; // Very slow warble\n        electricLFOGain.gain.value = 8; // Noticeable frequency variation\n\n        electricLFO.connect(electricLFOGain);\n        electricLFOGain.connect(this.ambientElectricOsc.frequency);\n\n        // Bandpass filter for that \"old fluorescent light\" sound\n        var electricFilter = this.audioContext.createBiquadFilter();\n        electricFilter.type = 'bandpass';\n        electricFilter.frequency.value = 180;\n        electricFilter.Q.value = 3;\n        this.ambientElectricGain.gain.value = this.volume * 0.025;\n        this.ambientElectricOsc.connect(electricFilter);\n        electricFilter.connect(this.ambientElectricGain);\n        this.ambientElectricGain.connect(this.audioContext.destination);\n\n        // === LAYER 4: Random Clicks and Pops ===\n        // Simulate relay switches and tape artifacts\n        var scheduleRandomClick = function scheduleRandomClick() {\n          if (!_this5.ambientNoiseSource) return; // Stop if ambient stopped\n\n          var delay = 3000 + Math.random() * 7000; // Random 3-10 seconds\n          setTimeout(function () {\n            if (_this5.audioContext && _this5.enabled && _this5.ambientNoiseSource) {\n              // Generate quick pop/click\n              var clickOsc = _this5.audioContext.createOscillator();\n              var clickGain = _this5.audioContext.createGain();\n              var clickFilter = _this5.audioContext.createBiquadFilter();\n              clickFilter.type = 'bandpass';\n              clickFilter.frequency.value = 600 + Math.random() * 800;\n              clickFilter.Q.value = 8;\n              clickOsc.type = 'square';\n              clickOsc.frequency.value = 100;\n              var now = _this5.audioContext.currentTime;\n              clickGain.gain.setValueAtTime(_this5.volume * (0.08 + Math.random() * 0.1), now);\n              clickGain.gain.exponentialRampToValueAtTime(0.001, now + 0.02);\n              clickOsc.connect(clickFilter);\n              clickFilter.connect(clickGain);\n              clickGain.connect(_this5.audioContext.destination);\n              clickOsc.start(now);\n              clickOsc.stop(now + 0.02);\n            }\n            scheduleRandomClick(); // Schedule next click\n          }, delay);\n        };\n\n        // Start all oscillators and schedule clicks\n        this.ambientNoiseSource.start(0);\n        this.ambientLowHumOsc.start(0);\n        humLFO.start(0);\n        this.ambientElectricOsc.start(0);\n        electricLFO.start(0);\n        scheduleRandomClick();\n      } catch (error) {\n        console.warn('Failed to start ambient static:', error);\n      }\n    }\n\n    /**\n     * Stop ambient static and all layers\n     */\n  }, {\n    key: \"stopAmbientStatic\",\n    value: function stopAmbientStatic() {\n      try {\n        // Stop tape hiss\n        if (this.ambientNoiseSource) {\n          this.ambientNoiseSource.stop();\n          this.ambientNoiseSource.disconnect();\n          this.ambientNoiseSource = null;\n        }\n        if (this.ambientNoiseGain) {\n          this.ambientNoiseGain.disconnect();\n          this.ambientNoiseGain = null;\n        }\n\n        // Stop low hum\n        if (this.ambientLowHumOsc) {\n          this.ambientLowHumOsc.stop();\n          this.ambientLowHumOsc.disconnect();\n          this.ambientLowHumOsc = null;\n        }\n        if (this.ambientLowHumGain) {\n          this.ambientLowHumGain.disconnect();\n          this.ambientLowHumGain = null;\n        }\n\n        // Stop electrical interference\n        if (this.ambientElectricOsc) {\n          this.ambientElectricOsc.stop();\n          this.ambientElectricOsc.disconnect();\n          this.ambientElectricOsc = null;\n        }\n        if (this.ambientElectricGain) {\n          this.ambientElectricGain.disconnect();\n          this.ambientElectricGain = null;\n        }\n      } catch (error) {\n        console.warn('Failed to stop ambient static:', error);\n      }\n    }\n\n    /**\n     * Enable/disable sound effects\n     */\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.enabled = !this.enabled;\n      this.savePreference();\n\n      // Stop ambient static if sounds are disabled\n      if (!this.enabled) {\n        this.stopAmbientStatic();\n      }\n      return this.enabled;\n    }\n\n    /**\n     * Set volume (0.0 to 1.0)\n     */\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(level) {\n      this.volume = Math.max(0, Math.min(1, level));\n      this.savePreference();\n    }\n\n    /**\n     * Load sound preference from localStorage\n     */\n  }, {\n    key: \"loadPreference\",\n    value: function loadPreference() {\n      try {\n        var saved = localStorage.getItem('terminal_sound_enabled');\n        return saved !== null ? saved === 'true' : true; // Default enabled\n      } catch (e) {\n        return true;\n      }\n    }\n\n    /**\n     * Save sound preference to localStorage\n     */\n  }, {\n    key: \"savePreference\",\n    value: function savePreference() {\n      try {\n        localStorage.setItem('terminal_sound_enabled', this.enabled.toString());\n        localStorage.setItem('terminal_sound_volume', this.volume.toString());\n      } catch (e) {\n        console.warn('Failed to save sound preferences:', e);\n      }\n    }\n\n    /**\n     * Check if sounds are available\n     */\n  }, {\n    key: \"isAvailable\",\n    value: function isAvailable() {\n      return typeof Audio !== 'undefined';\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SoundService);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU8sQ0FBQzRNLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDdkVILFlBQVksQ0FBQ0UsT0FBTyxDQUFDLHVCQUF1QixFQUFFLElBQUksQ0FBQ3pNLE1BQU0sQ0FBQzBNLFFBQVEsQ0FBQyxDQUFDLENBQUM7TUFDekUsQ0FBQyxDQUFDLE9BQU8xTCxDQUFDLEVBQUU7UUFDUkMsT0FBTyxDQUFDQyxJQUFJLENBQUMsbUNBQW1DLEVBQUVGLENBQUMsQ0FBQztNQUN4RDtJQUNKOztJQUVBO0FBQ0o7QUFDQTtFQUZJO0lBQUFMLEdBQUE7SUFBQUMsS0FBQSxFQUdBLFNBQUErTCxZQUFBLEVBQWM7TUFDVixPQUFPLE9BQU90RCxLQUFLLEtBQUssV0FBVztJQUN2QztFQUFDO0FBQUE7QUFHTCxpRUFBZTFKLFlBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvc2VydmljZXMvU291bmRTZXJ2aWNlLmpzPzQ2NmMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTb3VuZFNlcnZpY2UgLSBIYW5kbGUgdGVybWluYWwgc291bmQgZWZmZWN0c1xuICovXG5jbGFzcyBTb3VuZFNlcnZpY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnNvdW5kcyA9IHt9O1xuICAgICAgICB0aGlzLmVuYWJsZWQgPSB0aGlzLmxvYWRQcmVmZXJlbmNlKCk7XG4gICAgICAgIHRoaXMudm9sdW1lID0gMC4zO1xuICAgICAgICB0aGlzLmF1ZGlvQ29udGV4dCA9IG51bGw7XG4gICAgICAgIFxuICAgICAgICAvLyBBbWJpZW50IG5vaXNlIGNvbXBvbmVudHNcbiAgICAgICAgdGhpcy5hbWJpZW50Tm9pc2VTb3VyY2UgPSBudWxsO1xuICAgICAgICB0aGlzLmFtYmllbnROb2lzZUdhaW4gPSBudWxsO1xuICAgICAgICB0aGlzLmFtYmllbnRMb3dIdW1Pc2MgPSBudWxsO1xuICAgICAgICB0aGlzLmFtYmllbnRMb3dIdW1HYWluID0gbnVsbDtcbiAgICAgICAgdGhpcy5hbWJpZW50RWxlY3RyaWNPc2MgPSBudWxsO1xuICAgICAgICB0aGlzLmFtYmllbnRFbGVjdHJpY0dhaW4gPSBudWxsO1xuICAgICAgICBcbiAgICAgICAgdGhpcy5pbml0aWFsaXplU291bmRzKCk7XG4gICAgICAgIHRoaXMuaW5pdGlhbGl6ZUF1ZGlvQ29udGV4dCgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEluaXRpYWxpemUgV2ViIEF1ZGlvIEFQSSBjb250ZXh0XG4gICAgICovXG4gICAgaW5pdGlhbGl6ZUF1ZGlvQ29udGV4dCgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IEF1ZGlvQ29udGV4dCA9IHdpbmRvdy5BdWRpb0NvbnRleHQgfHwgd2luZG93LndlYmtpdEF1ZGlvQ29udGV4dDtcbiAgICAgICAgICAgIGlmIChBdWRpb0NvbnRleHQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvQ29udGV4dCA9IG5ldyBBdWRpb0NvbnRleHQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdXZWIgQXVkaW8gQVBJIG5vdCBhdmFpbGFibGU6JywgZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZSBhIGJlZXAgc291bmQgdXNpbmcgV2ViIEF1ZGlvIEFQSVxuICAgICAqL1xuICAgIGdlbmVyYXRlQmVlcChmcmVxdWVuY3kgPSA0NDAsIGR1cmF0aW9uID0gMC4yLCB0eXBlID0gJ3NpbmUnKSB7XG4gICAgICAgIGlmICghdGhpcy5hdWRpb0NvbnRleHQgfHwgIXRoaXMuZW5hYmxlZCkgcmV0dXJuO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBSZXN1bWUgYXVkaW8gY29udGV4dCBpZiBzdXNwZW5kZWQgKGZvciBhdXRvcGxheSBwb2xpY3kpXG4gICAgICAgICAgICBpZiAodGhpcy5hdWRpb0NvbnRleHQuc3RhdGUgPT09ICdzdXNwZW5kZWQnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hdWRpb0NvbnRleHQucmVzdW1lKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IG9zY2lsbGF0b3IgPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVPc2NpbGxhdG9yKCk7XG4gICAgICAgICAgICBjb25zdCBnYWluTm9kZSA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZUdhaW4oKTtcblxuICAgICAgICAgICAgb3NjaWxsYXRvci5jb25uZWN0KGdhaW5Ob2RlKTtcbiAgICAgICAgICAgIGdhaW5Ob2RlLmNvbm5lY3QodGhpcy5hdWRpb0NvbnRleHQuZGVzdGluYXRpb24pO1xuXG4gICAgICAgICAgICBvc2NpbGxhdG9yLmZyZXF1ZW5jeS52YWx1ZSA9IGZyZXF1ZW5jeTtcbiAgICAgICAgICAgIG9zY2lsbGF0b3IudHlwZSA9IHR5cGU7XG5cbiAgICAgICAgICAgIC8vIEVudmVsb3BlIGZvciBzbW9vdGggc291bmRcbiAgICAgICAgICAgIGNvbnN0IG5vdyA9IHRoaXMuYXVkaW9Db250ZXh0LmN1cnJlbnRUaW1lO1xuICAgICAgICAgICAgZ2Fpbk5vZGUuZ2Fpbi5zZXRWYWx1ZUF0VGltZSgwLCBub3cpO1xuICAgICAgICAgICAgZ2Fpbk5vZGUuZ2Fpbi5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZSh0aGlzLnZvbHVtZSwgbm93ICsgMC4wMSk7XG4gICAgICAgICAgICBnYWluTm9kZS5nYWluLmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUoMC4wMSwgbm93ICsgZHVyYXRpb24pO1xuXG4gICAgICAgICAgICBvc2NpbGxhdG9yLnN0YXJ0KG5vdyk7XG4gICAgICAgICAgICBvc2NpbGxhdG9yLnN0b3Aobm93ICsgZHVyYXRpb24pO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdGYWlsZWQgdG8gZ2VuZXJhdGUgYmVlcDonLCBlcnJvcik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZSBBbGllbi9Ob3N0cm9tbyBzdHlsZSBiZWVwIChsb3dlciBmcmVxdWVuY3ksIHJvYm90aWMpXG4gICAgICovXG4gICAgZ2VuZXJhdGVBbGllbkJlZXAoKSB7XG4gICAgICAgIGlmICghdGhpcy5hdWRpb0NvbnRleHQgfHwgIXRoaXMuZW5hYmxlZCkgcmV0dXJuO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAodGhpcy5hdWRpb0NvbnRleHQuc3RhdGUgPT09ICdzdXNwZW5kZWQnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hdWRpb0NvbnRleHQucmVzdW1lKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IG5vdyA9IHRoaXMuYXVkaW9Db250ZXh0LmN1cnJlbnRUaW1lO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBDcmVhdGUgYSBkaXN0aW5jdGl2ZSB0d28tdG9uZSBiZWVwXG4gICAgICAgICAgICBjb25zdCBvc2NpbGxhdG9yMSA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZU9zY2lsbGF0b3IoKTtcbiAgICAgICAgICAgIGNvbnN0IG9zY2lsbGF0b3IyID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlT3NjaWxsYXRvcigpO1xuICAgICAgICAgICAgY29uc3QgZ2Fpbk5vZGUgPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVHYWluKCk7XG5cbiAgICAgICAgICAgIG9zY2lsbGF0b3IxLmNvbm5lY3QoZ2Fpbk5vZGUpO1xuICAgICAgICAgICAgb3NjaWxsYXRvcjIuY29ubmVjdChnYWluTm9kZSk7XG4gICAgICAgICAgICBnYWluTm9kZS5jb25uZWN0KHRoaXMuYXVkaW9Db250ZXh0LmRlc3RpbmF0aW9uKTtcblxuICAgICAgICAgICAgLy8gTG93IGZyZXF1ZW5jeSBoYXJtb25pY3MgZm9yIGluZHVzdHJpYWwgZmVlbFxuICAgICAgICAgICAgb3NjaWxsYXRvcjEuZnJlcXVlbmN5LnZhbHVlID0gMTgwO1xuICAgICAgICAgICAgb3NjaWxsYXRvcjIuZnJlcXVlbmN5LnZhbHVlID0gMjQwO1xuICAgICAgICAgICAgb3NjaWxsYXRvcjEudHlwZSA9ICdzcXVhcmUnO1xuICAgICAgICAgICAgb3NjaWxsYXRvcjIudHlwZSA9ICdzYXd0b290aCc7XG5cbiAgICAgICAgICAgIC8vIFF1aWNrIGF0dGFjaywgbWVkaXVtIGRlY2F5XG4gICAgICAgICAgICBnYWluTm9kZS5nYWluLnNldFZhbHVlQXRUaW1lKDAsIG5vdyk7XG4gICAgICAgICAgICBnYWluTm9kZS5nYWluLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHRoaXMudm9sdW1lICogMC44LCBub3cgKyAwLjAwNSk7XG4gICAgICAgICAgICBnYWluTm9kZS5nYWluLmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUoMC4wMSwgbm93ICsgMC4xNSk7XG5cbiAgICAgICAgICAgIG9zY2lsbGF0b3IxLnN0YXJ0KG5vdyk7XG4gICAgICAgICAgICBvc2NpbGxhdG9yMi5zdGFydChub3cpO1xuICAgICAgICAgICAgb3NjaWxsYXRvcjEuc3RvcChub3cgKyAwLjE1KTtcbiAgICAgICAgICAgIG9zY2lsbGF0b3IyLnN0b3Aobm93ICsgMC4xNSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0ZhaWxlZCB0byBnZW5lcmF0ZSBhbGllbiBiZWVwOicsIGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlIHJldHJvIENSVCBzdHlsZSBiZWVwXG4gICAgICovXG4gICAgZ2VuZXJhdGVSZXRyb0JlZXAoKSB7XG4gICAgICAgIHRoaXMuZ2VuZXJhdGVCZWVwKDgwMCwgMC4xNSwgJ3NxdWFyZScpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlIEFsaWVuL05vc3Ryb21vIE1PVEhFUiBjb21wdXRlciBib290IHNvdW5kXG4gICAgICogU3ludGhldGljIGZsYXQgZmx1dGUgc2VxdWVuY2U6IEQ1IHRoZW4gRjVcbiAgICAgKi9cbiAgICBnZW5lcmF0ZUFsaWVuQm9vdFNvdW5kKCkge1xuICAgICAgICBpZiAoIXRoaXMuYXVkaW9Db250ZXh0IHx8ICF0aGlzLmVuYWJsZWQpIHJldHVybjtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKHRoaXMuYXVkaW9Db250ZXh0LnN0YXRlID09PSAnc3VzcGVuZGVkJykge1xuICAgICAgICAgICAgICAgIHRoaXMuYXVkaW9Db250ZXh0LnJlc3VtZSgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCBub3cgPSB0aGlzLmF1ZGlvQ29udGV4dC5jdXJyZW50VGltZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gPT09IEJhY2tncm91bmQ6IEhlYXZ5IGluZHVzdHJpYWwgbWFjaGluZXJ5IGh1bSB3aXRoIG1ldGFsIHJlc29uYW5jZSA9PT1cbiAgICAgICAgICAgIGNvbnN0IGh1bSA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZU9zY2lsbGF0b3IoKTtcbiAgICAgICAgICAgIGNvbnN0IGh1bUdhaW4gPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVHYWluKCk7XG4gICAgICAgICAgICBjb25zdCBodW1GaWx0ZXIgPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVCaXF1YWRGaWx0ZXIoKTtcbiAgICAgICAgICAgIGNvbnN0IGh1bURpc3RvcnRpb24gPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVXYXZlU2hhcGVyKCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIFNhd3Rvb3RoIGZvciBtb3JlIGFnZ3Jlc3NpdmUgbWFjaGluZXJ5IHNvdW5kXG4gICAgICAgICAgICBodW0udHlwZSA9ICdzYXd0b290aCc7XG4gICAgICAgICAgICBodW0uZnJlcXVlbmN5LnZhbHVlID0gNDU7IC8vIExvd2VyLCBtb3JlIG1lbmFjaW5nXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIENyZWF0ZSBkaXN0b3J0aW9uIGN1cnZlIGZvciBtZXRhbGxpYyBncmluZFxuICAgICAgICAgICAgY29uc3QgY3VydmUgPSBuZXcgRmxvYXQzMkFycmF5KDI1Nik7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDI1NjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeCA9IChpIC0gMTI4KSAvIDEyODtcbiAgICAgICAgICAgICAgICAvLyBIYXJzaCBkaXN0b3J0aW9uIGZvciBtYWNoaW5lcnkgZ3JpbmRpbmdcbiAgICAgICAgICAgICAgICBjdXJ2ZVtpXSA9IE1hdGgudGFuaCh4ICogMykgKiAwLjg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBodW1EaXN0b3J0aW9uLmN1cnZlID0gY3VydmU7XG4gICAgICAgICAgICBodW1EaXN0b3J0aW9uLm92ZXJzYW1wbGUgPSAnNHgnO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBCYW5kcGFzcyBmb3IgbWV0YWxsaWMgcmVzb25hbmNlXG4gICAgICAgICAgICBodW1GaWx0ZXIudHlwZSA9ICdiYW5kcGFzcyc7XG4gICAgICAgICAgICBodW1GaWx0ZXIuZnJlcXVlbmN5LnZhbHVlID0gMTgwO1xuICAgICAgICAgICAgaHVtRmlsdGVyLlEudmFsdWUgPSA4OyAvLyBIaWdoIFEgZm9yIG1ldGFsbGljIHJpbmdcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaHVtLmNvbm5lY3QoaHVtRGlzdG9ydGlvbik7XG4gICAgICAgICAgICBodW1EaXN0b3J0aW9uLmNvbm5lY3QoaHVtRmlsdGVyKTtcbiAgICAgICAgICAgIGh1bUZpbHRlci5jb25uZWN0KGh1bUdhaW4pO1xuICAgICAgICAgICAgaHVtR2Fpbi5jb25uZWN0KHRoaXMuYXVkaW9Db250ZXh0LmRlc3RpbmF0aW9uKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaHVtR2Fpbi5nYWluLnNldFZhbHVlQXRUaW1lKDAsIG5vdyk7XG4gICAgICAgICAgICBodW1HYWluLmdhaW4ubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodGhpcy52b2x1bWUgKiAwLjE1LCBub3cgKyAwLjE1KTtcbiAgICAgICAgICAgIGh1bUdhaW4uZ2Fpbi5zZXRWYWx1ZUF0VGltZSh0aGlzLnZvbHVtZSAqIDAuMTUsIG5vdyArIDEuNCk7XG4gICAgICAgICAgICBodW1HYWluLmdhaW4uZXhwb25lbnRpYWxSYW1wVG9WYWx1ZUF0VGltZSgwLjAwMSwgbm93ICsgMS42KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaHVtLnN0YXJ0KG5vdyk7XG4gICAgICAgICAgICBodW0uc3RvcChub3cgKyAxLjYpO1xuXG4gICAgICAgICAgICAvLyA9PT0gQWRkIHNlcnZvIG1vdG9yIHdoaW5lL3dpbmQtdXAgPT09XG4gICAgICAgICAgICBjb25zdCBzZXJ2byA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZU9zY2lsbGF0b3IoKTtcbiAgICAgICAgICAgIGNvbnN0IHNlcnZvR2FpbiA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZUdhaW4oKTtcbiAgICAgICAgICAgIGNvbnN0IHNlcnZvRmlsdGVyID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlQmlxdWFkRmlsdGVyKCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHNlcnZvLnR5cGUgPSAnc2F3dG9vdGgnO1xuICAgICAgICAgICAgc2Vydm8uZnJlcXVlbmN5LnNldFZhbHVlQXRUaW1lKDgwMCwgbm93KTtcbiAgICAgICAgICAgIHNlcnZvLmZyZXF1ZW5jeS5leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lKDIyMDAsIG5vdyArIDAuMDgpOyAvLyBGYXN0IHdpbmQtdXBcbiAgICAgICAgICAgIHNlcnZvLmZyZXF1ZW5jeS5zZXRWYWx1ZUF0VGltZSgyMjAwLCBub3cgKyAwLjA4KTtcbiAgICAgICAgICAgIHNlcnZvLmZyZXF1ZW5jeS5leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lKDEwMCwgbm93ICsgMC4yKTsgLy8gV2luZCBkb3duXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHNlcnZvRmlsdGVyLnR5cGUgPSAnYmFuZHBhc3MnO1xuICAgICAgICAgICAgc2Vydm9GaWx0ZXIuZnJlcXVlbmN5LnZhbHVlID0gMTIwMDtcbiAgICAgICAgICAgIHNlcnZvRmlsdGVyLlEudmFsdWUgPSA1O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBzZXJ2by5jb25uZWN0KHNlcnZvRmlsdGVyKTtcbiAgICAgICAgICAgIHNlcnZvRmlsdGVyLmNvbm5lY3Qoc2Vydm9HYWluKTtcbiAgICAgICAgICAgIHNlcnZvR2Fpbi5jb25uZWN0KHRoaXMuYXVkaW9Db250ZXh0LmRlc3RpbmF0aW9uKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgc2Vydm9HYWluLmdhaW4uc2V0VmFsdWVBdFRpbWUoMCwgbm93KTtcbiAgICAgICAgICAgIHNlcnZvR2Fpbi5nYWluLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHRoaXMudm9sdW1lICogMC4yLCBub3cgKyAwLjAzKTtcbiAgICAgICAgICAgIHNlcnZvR2Fpbi5nYWluLmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUoMC4wMDEsIG5vdyArIDAuMjMpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBzZXJ2by5zdGFydChub3cpO1xuICAgICAgICAgICAgc2Vydm8uc3RvcChub3cgKyAwLjI1KTtcblxuICAgICAgICAgICAgLy8gPT09IEQ1IC0gT21pbm91cyB0b25lIHdpdGggZGlzdG9ydGlvbiBhbmQgbWV0YWxsaWMgb3ZlcnRvbmVzID09PVxuICAgICAgICAgICAgY29uc3QgZDVNYWluID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlT3NjaWxsYXRvcigpO1xuICAgICAgICAgICAgY29uc3QgZDVTdWIgPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVPc2NpbGxhdG9yKCk7IC8vIFN1Yi1oYXJtb25pYyBmb3Igd2VpZ2h0XG4gICAgICAgICAgICBjb25zdCBkNU92ZXJ0b25lID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlT3NjaWxsYXRvcigpOyAvLyBIYXJzaCBvdmVydG9uZVxuICAgICAgICAgICAgY29uc3QgZDVHYWluID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlR2FpbigpO1xuICAgICAgICAgICAgY29uc3QgZDVTdWJHYWluID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlR2FpbigpO1xuICAgICAgICAgICAgY29uc3QgZDVPdmVydG9uZUdhaW4gPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVHYWluKCk7XG4gICAgICAgICAgICBjb25zdCBkNUZpbHRlciA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZUJpcXVhZEZpbHRlcigpO1xuICAgICAgICAgICAgY29uc3QgZDVEaXN0b3J0aW9uID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlV2F2ZVNoYXBlcigpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBNYWluIHRvbmUgLSBzcXVhcmUgd2l0aCBkaXN0b3J0aW9uXG4gICAgICAgICAgICBkNU1haW4udHlwZSA9ICdzcXVhcmUnO1xuICAgICAgICAgICAgZDVNYWluLmZyZXF1ZW5jeS52YWx1ZSA9IDU4Ny4zMzsgLy8gRDVcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gU3ViLWhhcm1vbmljIGZvciBvbWlub3VzIHdlaWdodFxuICAgICAgICAgICAgZDVTdWIudHlwZSA9ICd0cmlhbmdsZSc7XG4gICAgICAgICAgICBkNVN1Yi5mcmVxdWVuY3kudmFsdWUgPSA1ODcuMzMgLyAyOyAvLyBPY3RhdmUgZG93blxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBIYXJzaCBtZXRhbGxpYyBvdmVydG9uZVxuICAgICAgICAgICAgZDVPdmVydG9uZS50eXBlID0gJ3Nhd3Rvb3RoJztcbiAgICAgICAgICAgIGQ1T3ZlcnRvbmUuZnJlcXVlbmN5LnZhbHVlID0gNTg3LjMzICogMS41O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBBZ2dyZXNzaXZlIGRpc3RvcnRpb24gY3VydmVcbiAgICAgICAgICAgIGNvbnN0IGQ1Q3VydmUgPSBuZXcgRmxvYXQzMkFycmF5KDI1Nik7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDI1NjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeCA9IChpIC0gMTI4KSAvIDEyODtcbiAgICAgICAgICAgICAgICBkNUN1cnZlW2ldID0gTWF0aC50YW5oKHggKiA0KSAqIDAuOTsgLy8gTW9yZSBhZ2dyZXNzaXZlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkNURpc3RvcnRpb24uY3VydmUgPSBkNUN1cnZlO1xuICAgICAgICAgICAgZDVEaXN0b3J0aW9uLm92ZXJzYW1wbGUgPSAnNHgnO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBMb3dwYXNzIHdpdGggcmVzb25hbmNlIGZvciBtZXRhbGxpYyBjaGFyYWN0ZXJcbiAgICAgICAgICAgIGQ1RmlsdGVyLnR5cGUgPSAnbG93cGFzcyc7XG4gICAgICAgICAgICBkNUZpbHRlci5mcmVxdWVuY3kuc2V0VmFsdWVBdFRpbWUoMzAwMCwgbm93ICsgMC4wNSk7XG4gICAgICAgICAgICBkNUZpbHRlci5mcmVxdWVuY3kuZXhwb25lbnRpYWxSYW1wVG9WYWx1ZUF0VGltZSg2MDAsIG5vdyArIDAuMTgpOyAvLyBTd2VlcCBmb3Igw6dpdXV3XG4gICAgICAgICAgICBkNUZpbHRlci5mcmVxdWVuY3kuc2V0VmFsdWVBdFRpbWUoNjAwLCBub3cgKyAwLjc1KTtcbiAgICAgICAgICAgIGQ1RmlsdGVyLlEudmFsdWUgPSA2OyAvLyBIaWdoIHJlc29uYW5jZSBmb3IgbWV0YWxsaWMgcmluZ1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBDb25uZWN0IG1haW4gc2lnbmFsIHRocm91Z2ggZGlzdG9ydGlvbiBhbmQgZmlsdGVyXG4gICAgICAgICAgICBkNU1haW4uY29ubmVjdChkNURpc3RvcnRpb24pO1xuICAgICAgICAgICAgZDVEaXN0b3J0aW9uLmNvbm5lY3QoZDVGaWx0ZXIpO1xuICAgICAgICAgICAgZDVGaWx0ZXIuY29ubmVjdChkNUdhaW4pO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBDb25uZWN0IHN1YiBhbmQgb3ZlcnRvbmVcbiAgICAgICAgICAgIGQ1U3ViLmNvbm5lY3QoZDVTdWJHYWluKTtcbiAgICAgICAgICAgIGQ1U3ViR2Fpbi5jb25uZWN0KGQ1R2Fpbik7XG4gICAgICAgICAgICBkNU92ZXJ0b25lLmNvbm5lY3QoZDVPdmVydG9uZUdhaW4pO1xuICAgICAgICAgICAgZDVPdmVydG9uZUdhaW4uY29ubmVjdChkNUdhaW4pO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBkNUdhaW4uY29ubmVjdCh0aGlzLmF1ZGlvQ29udGV4dC5kZXN0aW5hdGlvbik7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIE1haW4gZW52ZWxvcGUgLSBtb3JlIGFnZ3Jlc3NpdmUgYXR0YWNrXG4gICAgICAgICAgICBkNUdhaW4uZ2Fpbi5zZXRWYWx1ZUF0VGltZSgwLCBub3cgKyAwLjA1KTtcbiAgICAgICAgICAgIGQ1R2Fpbi5nYWluLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHRoaXMudm9sdW1lICogMC40NSwgbm93ICsgMC4wNyk7XG4gICAgICAgICAgICBkNUdhaW4uZ2Fpbi5zZXRWYWx1ZUF0VGltZSh0aGlzLnZvbHVtZSAqIDAuNDUsIG5vdyArIDAuNzMpO1xuICAgICAgICAgICAgZDVHYWluLmdhaW4ubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUoMCwgbm93ICsgMC43OCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIFN1YiBoYXJtb25pYyBlbnZlbG9wZVxuICAgICAgICAgICAgZDVTdWJHYWluLmdhaW4uc2V0VmFsdWVBdFRpbWUodGhpcy52b2x1bWUgKiAwLjE1LCBub3cgKyAwLjA1KTtcbiAgICAgICAgICAgIGQ1U3ViR2Fpbi5nYWluLnNldFZhbHVlQXRUaW1lKHRoaXMudm9sdW1lICogMC4xNSwgbm93ICsgMC43Myk7XG4gICAgICAgICAgICBkNVN1YkdhaW4uZ2Fpbi5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZSgwLCBub3cgKyAwLjc4KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gT3ZlcnRvbmUgZW52ZWxvcGUgLSBmYWRlcyBpbiBmb3Igc2NhcmluZXNzXG4gICAgICAgICAgICBkNU92ZXJ0b25lR2Fpbi5nYWluLnNldFZhbHVlQXRUaW1lKDAsIG5vdyArIDAuMDUpO1xuICAgICAgICAgICAgZDVPdmVydG9uZUdhaW4uZ2Fpbi5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZSh0aGlzLnZvbHVtZSAqIDAuMTIsIG5vdyArIDAuMjUpO1xuICAgICAgICAgICAgZDVPdmVydG9uZUdhaW4uZ2Fpbi5zZXRWYWx1ZUF0VGltZSh0aGlzLnZvbHVtZSAqIDAuMTIsIG5vdyArIDAuNzMpO1xuICAgICAgICAgICAgZDVPdmVydG9uZUdhaW4uZ2Fpbi5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZSgwLCBub3cgKyAwLjc4KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgZDVNYWluLnN0YXJ0KG5vdyArIDAuMDUpO1xuICAgICAgICAgICAgZDVNYWluLnN0b3Aobm93ICsgMC43OCk7XG4gICAgICAgICAgICBkNVN1Yi5zdGFydChub3cgKyAwLjA1KTtcbiAgICAgICAgICAgIGQ1U3ViLnN0b3Aobm93ICsgMC43OCk7XG4gICAgICAgICAgICBkNU92ZXJ0b25lLnN0YXJ0KG5vdyArIDAuMDUpO1xuICAgICAgICAgICAgZDVPdmVydG9uZS5zdG9wKG5vdyArIDAuNzgpO1xuXG4gICAgICAgICAgICAvLyA9PT0gRjUgLSBTaG9ydCBtZWNoYW5pY2FsIHB1bHNlIHdpdGggaW1wYWN0ID09PVxuICAgICAgICAgICAgLy8gU3RhcnRzIGF0IDAuNzVzIChoYWxmIG9mIG9yaWdpbmFsIDEuNXMgdGltaW5nKVxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgZjVNYWluID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlT3NjaWxsYXRvcigpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGY1U3ViID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlT3NjaWxsYXRvcigpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGY1SW1wYWN0ID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlT3NjaWxsYXRvcigpOyAvLyBNZXRhbGxpYyBjbGlja1xuICAgICAgICAgICAgICAgIGNvbnN0IGY1R2FpbiA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZUdhaW4oKTtcbiAgICAgICAgICAgICAgICBjb25zdCBmNVN1YkdhaW4gPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVHYWluKCk7XG4gICAgICAgICAgICAgICAgY29uc3QgZjVJbXBhY3RHYWluID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlR2FpbigpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGY1RmlsdGVyID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlQmlxdWFkRmlsdGVyKCk7XG4gICAgICAgICAgICAgICAgY29uc3QgZjVEaXN0b3J0aW9uID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlV2F2ZVNoYXBlcigpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGY1TWFpbi50eXBlID0gJ3NxdWFyZSc7XG4gICAgICAgICAgICAgICAgZjVNYWluLmZyZXF1ZW5jeS52YWx1ZSA9IDY5OC40NjsgLy8gRjVcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBTdWIgZm9yIHdlaWdodFxuICAgICAgICAgICAgICAgIGY1U3ViLnR5cGUgPSAndHJpYW5nbGUnO1xuICAgICAgICAgICAgICAgIGY1U3ViLmZyZXF1ZW5jeS52YWx1ZSA9IDY5OC40NiAvIDI7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gTWV0YWxsaWMgaW1wYWN0IGNsaWNrXG4gICAgICAgICAgICAgICAgZjVJbXBhY3QudHlwZSA9ICdzcXVhcmUnO1xuICAgICAgICAgICAgICAgIGY1SW1wYWN0LmZyZXF1ZW5jeS52YWx1ZSA9IDQwMDA7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gSGFyc2ggZGlzdG9ydGlvblxuICAgICAgICAgICAgICAgIGNvbnN0IGY1Q3VydmUgPSBuZXcgRmxvYXQzMkFycmF5KDI1Nik7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAyNTY7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB4ID0gKGkgLSAxMjgpIC8gMTI4O1xuICAgICAgICAgICAgICAgICAgICBmNUN1cnZlW2ldID0gTWF0aC50YW5oKHggKiA1KSAqIDAuOTU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGY1RGlzdG9ydGlvbi5jdXJ2ZSA9IGY1Q3VydmU7XG4gICAgICAgICAgICAgICAgZjVEaXN0b3J0aW9uLm92ZXJzYW1wbGUgPSAnNHgnO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGY1RmlsdGVyLnR5cGUgPSAnbG93cGFzcyc7XG4gICAgICAgICAgICAgICAgZjVGaWx0ZXIuZnJlcXVlbmN5LnZhbHVlID0gMTgwMDtcbiAgICAgICAgICAgICAgICBmNUZpbHRlci5RLnZhbHVlID0gNTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBmNU1haW4uY29ubmVjdChmNURpc3RvcnRpb24pO1xuICAgICAgICAgICAgICAgIGY1RGlzdG9ydGlvbi5jb25uZWN0KGY1RmlsdGVyKTtcbiAgICAgICAgICAgICAgICBmNUZpbHRlci5jb25uZWN0KGY1R2Fpbik7XG4gICAgICAgICAgICAgICAgZjVTdWIuY29ubmVjdChmNVN1YkdhaW4pO1xuICAgICAgICAgICAgICAgIGY1U3ViR2Fpbi5jb25uZWN0KGY1R2Fpbik7XG4gICAgICAgICAgICAgICAgZjVJbXBhY3QuY29ubmVjdChmNUltcGFjdEdhaW4pO1xuICAgICAgICAgICAgICAgIGY1SW1wYWN0R2Fpbi5jb25uZWN0KGY1R2Fpbik7XG4gICAgICAgICAgICAgICAgZjVHYWluLmNvbm5lY3QodGhpcy5hdWRpb0NvbnRleHQuZGVzdGluYXRpb24pO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGNvbnN0IHQgPSB0aGlzLmF1ZGlvQ29udGV4dC5jdXJyZW50VGltZTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBBZ2dyZXNzaXZlIHB1bmNoXG4gICAgICAgICAgICAgICAgZjVHYWluLmdhaW4uc2V0VmFsdWVBdFRpbWUoMCwgdCk7XG4gICAgICAgICAgICAgICAgZjVHYWluLmdhaW4ubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodGhpcy52b2x1bWUgKiAwLjUsIHQgKyAwLjAxKTtcbiAgICAgICAgICAgICAgICBmNUdhaW4uZ2Fpbi5zZXRWYWx1ZUF0VGltZSh0aGlzLnZvbHVtZSAqIDAuNSwgdCArIDAuMjMpO1xuICAgICAgICAgICAgICAgIGY1R2Fpbi5nYWluLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKDAsIHQgKyAwLjI2KTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBTdWIgZW52ZWxvcGVcbiAgICAgICAgICAgICAgICBmNVN1YkdhaW4uZ2Fpbi5zZXRWYWx1ZUF0VGltZSh0aGlzLnZvbHVtZSAqIDAuMTgsIHQpO1xuICAgICAgICAgICAgICAgIGY1U3ViR2Fpbi5nYWluLnNldFZhbHVlQXRUaW1lKHRoaXMudm9sdW1lICogMC4xOCwgdCArIDAuMjMpO1xuICAgICAgICAgICAgICAgIGY1U3ViR2Fpbi5nYWluLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKDAsIHQgKyAwLjI2KTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBJbXBhY3QgY2xpY2sgLSB2ZXJ5IHNob3J0XG4gICAgICAgICAgICAgICAgZjVJbXBhY3RHYWluLmdhaW4uc2V0VmFsdWVBdFRpbWUodGhpcy52b2x1bWUgKiAwLjI1LCB0KTtcbiAgICAgICAgICAgICAgICBmNUltcGFjdEdhaW4uZ2Fpbi5leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lKDAuMDAxLCB0ICsgMC4wMTUpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGY1TWFpbi5zdGFydCh0KTtcbiAgICAgICAgICAgICAgICBmNU1haW4uc3RvcCh0ICsgMC4yNyk7XG4gICAgICAgICAgICAgICAgZjVTdWIuc3RhcnQodCk7XG4gICAgICAgICAgICAgICAgZjVTdWIuc3RvcCh0ICsgMC4yNyk7XG4gICAgICAgICAgICAgICAgZjVJbXBhY3Quc3RhcnQodCk7XG4gICAgICAgICAgICAgICAgZjVJbXBhY3Quc3RvcCh0ICsgMC4wMTUpO1xuICAgICAgICAgICAgfSwgNzUwKTsgLy8gSGFsZiBvZiBvcmlnaW5hbCAxNTAwbXNcblxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdGYWlsZWQgdG8gZ2VuZXJhdGUgYWxpZW4gYm9vdCBzb3VuZDonLCBlcnJvcik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZSByZXRybyBDUlQgYm9vdCBzb3VuZCAod2FybXVwIGh1bSlcbiAgICAgKi9cbiAgICBnZW5lcmF0ZVJldHJvQm9vdFNvdW5kKCkge1xuICAgICAgICBpZiAoIXRoaXMuYXVkaW9Db250ZXh0IHx8ICF0aGlzLmVuYWJsZWQpIHJldHVybjtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKHRoaXMuYXVkaW9Db250ZXh0LnN0YXRlID09PSAnc3VzcGVuZGVkJykge1xuICAgICAgICAgICAgICAgIHRoaXMuYXVkaW9Db250ZXh0LnJlc3VtZSgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCBub3cgPSB0aGlzLmF1ZGlvQ29udGV4dC5jdXJyZW50VGltZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gQ1JUIHdhcm11cCB3aXRoIGZyZXF1ZW5jeSBzd2VlcFxuICAgICAgICAgICAgY29uc3Qgb3NjaWxsYXRvciA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZU9zY2lsbGF0b3IoKTtcbiAgICAgICAgICAgIGNvbnN0IGdhaW5Ob2RlID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlR2FpbigpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBvc2NpbGxhdG9yLmNvbm5lY3QoZ2Fpbk5vZGUpO1xuICAgICAgICAgICAgZ2Fpbk5vZGUuY29ubmVjdCh0aGlzLmF1ZGlvQ29udGV4dC5kZXN0aW5hdGlvbik7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIG9zY2lsbGF0b3IudHlwZSA9ICd0cmlhbmdsZSc7XG4gICAgICAgICAgICBvc2NpbGxhdG9yLmZyZXF1ZW5jeS5zZXRWYWx1ZUF0VGltZSgxNTAwMCwgbm93KTtcbiAgICAgICAgICAgIG9zY2lsbGF0b3IuZnJlcXVlbmN5LmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUoMTAwLCBub3cgKyAxLjUpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBnYWluTm9kZS5nYWluLnNldFZhbHVlQXRUaW1lKDAsIG5vdyk7XG4gICAgICAgICAgICBnYWluTm9kZS5nYWluLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHRoaXMudm9sdW1lICogMC4yLCBub3cgKyAwLjMpO1xuICAgICAgICAgICAgZ2Fpbk5vZGUuZ2Fpbi5zZXRWYWx1ZUF0VGltZSh0aGlzLnZvbHVtZSAqIDAuMiwgbm93ICsgMS4yKTtcbiAgICAgICAgICAgIGdhaW5Ob2RlLmdhaW4uZXhwb25lbnRpYWxSYW1wVG9WYWx1ZUF0VGltZSgwLjAxLCBub3cgKyAxLjgpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBvc2NpbGxhdG9yLnN0YXJ0KG5vdyk7XG4gICAgICAgICAgICBvc2NpbGxhdG9yLnN0b3Aobm93ICsgMS44KTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignRmFpbGVkIHRvIGdlbmVyYXRlIHJldHJvIGJvb3Qgc291bmQ6JywgZXJyb3IpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2VuZXJhdGUgc3RhbmRhcmQgdGVybWluYWwgYm9vdCBjaGltZVxuICAgICAqL1xuICAgIGdlbmVyYXRlRGVmYXVsdEJvb3RTb3VuZCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmF1ZGlvQ29udGV4dCB8fCAhdGhpcy5lbmFibGVkKSByZXR1cm47XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICh0aGlzLmF1ZGlvQ29udGV4dC5zdGF0ZSA9PT0gJ3N1c3BlbmRlZCcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvQ29udGV4dC5yZXN1bWUoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3Qgbm93ID0gdGhpcy5hdWRpb0NvbnRleHQuY3VycmVudFRpbWU7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIFBsZWFzYW50IHN0YXJ0dXAgY2hvcmRcbiAgICAgICAgICAgIFs0NDAsIDU1NC4zNywgNjU5LjI1XS5mb3JFYWNoKChmcmVxLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IG9zYyA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZU9zY2lsbGF0b3IoKTtcbiAgICAgICAgICAgICAgICBjb25zdCBnYWluID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlR2FpbigpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIG9zYy5jb25uZWN0KGdhaW4pO1xuICAgICAgICAgICAgICAgIGdhaW4uY29ubmVjdCh0aGlzLmF1ZGlvQ29udGV4dC5kZXN0aW5hdGlvbik7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgb3NjLnR5cGUgPSAnc2luZSc7XG4gICAgICAgICAgICAgICAgb3NjLmZyZXF1ZW5jeS52YWx1ZSA9IGZyZXE7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgY29uc3QgZGVsYXkgPSBpbmRleCAqIDAuMDU7XG4gICAgICAgICAgICAgICAgZ2Fpbi5nYWluLnNldFZhbHVlQXRUaW1lKDAsIG5vdyArIGRlbGF5KTtcbiAgICAgICAgICAgICAgICBnYWluLmdhaW4ubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodGhpcy52b2x1bWUgKiAwLjMsIG5vdyArIGRlbGF5ICsgMC4wMik7XG4gICAgICAgICAgICAgICAgZ2Fpbi5nYWluLmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUoMC4wMSwgbm93ICsgZGVsYXkgKyAwLjQpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIG9zYy5zdGFydChub3cgKyBkZWxheSk7XG4gICAgICAgICAgICAgICAgb3NjLnN0b3Aobm93ICsgZGVsYXkgKyAwLjQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0ZhaWxlZCB0byBnZW5lcmF0ZSBkZWZhdWx0IGJvb3Qgc291bmQ6JywgZXJyb3IpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2VuZXJhdGUgdHlwaW5nIHNvdW5kIGZvciBBbGllbiB0aGVtZSAobWVjaGFuaWNhbCBrZXlib2FyZCB3aXRoIHNvbGVub2lkKVxuICAgICAqIFNpbXVsYXRlcyBoZWF2eSBtZWNoYW5pY2FsIHN3aXRjaGVzIHdpdGggbWV0YWxsaWMgcmVzb25hbmNlXG4gICAgICovXG4gICAgZ2VuZXJhdGVBbGllbktleXByZXNzKCkge1xuICAgICAgICBpZiAoIXRoaXMuYXVkaW9Db250ZXh0IHx8ICF0aGlzLmVuYWJsZWQpIHJldHVybjtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKHRoaXMuYXVkaW9Db250ZXh0LnN0YXRlID09PSAnc3VzcGVuZGVkJykge1xuICAgICAgICAgICAgICAgIHRoaXMuYXVkaW9Db250ZXh0LnJlc3VtZSgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCBub3cgPSB0aGlzLmF1ZGlvQ29udGV4dC5jdXJyZW50VGltZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gPT09IEtleSBEb3duIFBoYXNlID09PVxuICAgICAgICAgICAgLy8gSW5pdGlhbCBpbXBhY3QgLSBzaGFycCBtZXRhbGxpYyBjbGlja1xuICAgICAgICAgICAgY29uc3QgaW1wYWN0T3NjID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlT3NjaWxsYXRvcigpO1xuICAgICAgICAgICAgY29uc3QgaW1wYWN0R2FpbiA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZUdhaW4oKTtcbiAgICAgICAgICAgIGNvbnN0IGltcGFjdEZpbHRlciA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZUJpcXVhZEZpbHRlcigpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpbXBhY3RPc2MudHlwZSA9ICdzcXVhcmUnO1xuICAgICAgICAgICAgaW1wYWN0T3NjLmZyZXF1ZW5jeS52YWx1ZSA9IDIyMDAgKyBNYXRoLnJhbmRvbSgpICogMzAwOyAvLyBTbGlnaHQgdmFyaWF0aW9uIHBlciBrZXlcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaW1wYWN0RmlsdGVyLnR5cGUgPSAnYmFuZHBhc3MnO1xuICAgICAgICAgICAgaW1wYWN0RmlsdGVyLmZyZXF1ZW5jeS52YWx1ZSA9IDI0MDA7XG4gICAgICAgICAgICBpbXBhY3RGaWx0ZXIuUS52YWx1ZSA9IDM7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGltcGFjdE9zYy5jb25uZWN0KGltcGFjdEZpbHRlcik7XG4gICAgICAgICAgICBpbXBhY3RGaWx0ZXIuY29ubmVjdChpbXBhY3RHYWluKTtcbiAgICAgICAgICAgIGltcGFjdEdhaW4uY29ubmVjdCh0aGlzLmF1ZGlvQ29udGV4dC5kZXN0aW5hdGlvbik7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIFZlcnkgc2hhcnAgYXR0YWNrIGZvciBtZWNoYW5pY2FsIGZlZWxcbiAgICAgICAgICAgIGltcGFjdEdhaW4uZ2Fpbi5zZXRWYWx1ZUF0VGltZSh0aGlzLnZvbHVtZSAqIDAuMjUsIG5vdyk7XG4gICAgICAgICAgICBpbXBhY3RHYWluLmdhaW4uZXhwb25lbnRpYWxSYW1wVG9WYWx1ZUF0VGltZSgwLjAwMSwgbm93ICsgMC4wMTUpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpbXBhY3RPc2Muc3RhcnQobm93KTtcbiAgICAgICAgICAgIGltcGFjdE9zYy5zdG9wKG5vdyArIDAuMDE1KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gPT09IFN3aXRjaCBDb250YWN0IC0gTG93ZXIgZnJlcXVlbmN5IGNvbXBvbmVudCA9PT1cbiAgICAgICAgICAgIGNvbnN0IHN3aXRjaE9zYyA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZU9zY2lsbGF0b3IoKTtcbiAgICAgICAgICAgIGNvbnN0IHN3aXRjaEdhaW4gPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVHYWluKCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHN3aXRjaE9zYy50eXBlID0gJ3Nhd3Rvb3RoJztcbiAgICAgICAgICAgIHN3aXRjaE9zYy5mcmVxdWVuY3kudmFsdWUgPSAxODAgKyBNYXRoLnJhbmRvbSgpICogNDA7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHN3aXRjaE9zYy5jb25uZWN0KHN3aXRjaEdhaW4pO1xuICAgICAgICAgICAgc3dpdGNoR2Fpbi5jb25uZWN0KHRoaXMuYXVkaW9Db250ZXh0LmRlc3RpbmF0aW9uKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgc3dpdGNoR2Fpbi5nYWluLnNldFZhbHVlQXRUaW1lKDAsIG5vdyk7XG4gICAgICAgICAgICBzd2l0Y2hHYWluLmdhaW4ubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodGhpcy52b2x1bWUgKiAwLjE1LCBub3cgKyAwLjAwMyk7XG4gICAgICAgICAgICBzd2l0Y2hHYWluLmdhaW4uZXhwb25lbnRpYWxSYW1wVG9WYWx1ZUF0VGltZSgwLjAwMSwgbm93ICsgMC4wMjUpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBzd2l0Y2hPc2Muc3RhcnQobm93KTtcbiAgICAgICAgICAgIHN3aXRjaE9zYy5zdG9wKG5vdyArIDAuMDI1KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gPT09IFNwcmluZyBSZXNvbmFuY2UgLSBNZXRhbGxpYyByaW5nID09PVxuICAgICAgICAgICAgY29uc3Qgc3ByaW5nT3NjID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlT3NjaWxsYXRvcigpO1xuICAgICAgICAgICAgY29uc3Qgc3ByaW5nR2FpbiA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZUdhaW4oKTtcbiAgICAgICAgICAgIGNvbnN0IHNwcmluZ0ZpbHRlciA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZUJpcXVhZEZpbHRlcigpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBzcHJpbmdPc2MudHlwZSA9ICdzaW5lJztcbiAgICAgICAgICAgIHNwcmluZ09zYy5mcmVxdWVuY3kudmFsdWUgPSA0ODAwICsgTWF0aC5yYW5kb20oKSAqIDQwMDsgLy8gSGlnaCBtZXRhbGxpYyBmcmVxdWVuY3lcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgc3ByaW5nRmlsdGVyLnR5cGUgPSAnYmFuZHBhc3MnO1xuICAgICAgICAgICAgc3ByaW5nRmlsdGVyLmZyZXF1ZW5jeS52YWx1ZSA9IDUwMDA7XG4gICAgICAgICAgICBzcHJpbmdGaWx0ZXIuUS52YWx1ZSA9IDg7IC8vIFZlcnkgbmFycm93IHJlc29uYW5jZVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBzcHJpbmdPc2MuY29ubmVjdChzcHJpbmdGaWx0ZXIpO1xuICAgICAgICAgICAgc3ByaW5nRmlsdGVyLmNvbm5lY3Qoc3ByaW5nR2Fpbik7XG4gICAgICAgICAgICBzcHJpbmdHYWluLmNvbm5lY3QodGhpcy5hdWRpb0NvbnRleHQuZGVzdGluYXRpb24pO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBzcHJpbmdHYWluLmdhaW4uc2V0VmFsdWVBdFRpbWUoMCwgbm93ICsgMC4wMDUpO1xuICAgICAgICAgICAgc3ByaW5nR2Fpbi5nYWluLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHRoaXMudm9sdW1lICogMC4wOCwgbm93ICsgMC4wMDgpO1xuICAgICAgICAgICAgc3ByaW5nR2Fpbi5nYWluLmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUoMC4wMDEsIG5vdyArIDAuMDQpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBzcHJpbmdPc2Muc3RhcnQobm93ICsgMC4wMDUpO1xuICAgICAgICAgICAgc3ByaW5nT3NjLnN0b3Aobm93ICsgMC4wNCk7XG4gICAgICAgICAgICBcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignRmFpbGVkIHRvIGdlbmVyYXRlIGFsaWVuIGtleXByZXNzOicsIGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFN0YXJ0IGNvbnRpbnVvdXMgRWI1IHRvbmUgZm9yIGFsaWVuIGNhdCBjb21tYW5kIChsaW5lIHR5cGluZylcbiAgICAgKiBSZXR1cm5zIG9zY2lsbGF0b3IgYW5kIGdhaW4gbm9kZXMgc28gdGhleSBjYW4gYmUgc3RvcHBlZCB3aGVuIGxpbmUgaXMgY29tcGxldGVcbiAgICAgKi9cbiAgICBzdGFydEFsaWVuQ2F0TGluZVRvbmUoKSB7XG4gICAgICAgIGlmICghdGhpcy5hdWRpb0NvbnRleHQgfHwgIXRoaXMuZW5hYmxlZCkgcmV0dXJuIG51bGw7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICh0aGlzLmF1ZGlvQ29udGV4dC5zdGF0ZSA9PT0gJ3N1c3BlbmRlZCcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvQ29udGV4dC5yZXN1bWUoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3Qgbm93ID0gdGhpcy5hdWRpb0NvbnRleHQuY3VycmVudFRpbWU7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbnN0IG9zYyA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZU9zY2lsbGF0b3IoKTtcbiAgICAgICAgICAgIGNvbnN0IGdhaW4gPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVHYWluKCk7XG4gICAgICAgICAgICBjb25zdCBmaWx0ZXIgPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVCaXF1YWRGaWx0ZXIoKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgb3NjLnR5cGUgPSAnc2luZSc7XG4gICAgICAgICAgICBvc2MuZnJlcXVlbmN5LnZhbHVlID0gNjIyLjI1OyAvLyBFYjVcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgZmlsdGVyLnR5cGUgPSAnYmFuZHBhc3MnO1xuICAgICAgICAgICAgZmlsdGVyLmZyZXF1ZW5jeS52YWx1ZSA9IDYyMi4yNTtcbiAgICAgICAgICAgIGZpbHRlci5RLnZhbHVlID0gMTI7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIG9zYy5jb25uZWN0KGZpbHRlcik7XG4gICAgICAgICAgICBmaWx0ZXIuY29ubmVjdChnYWluKTtcbiAgICAgICAgICAgIGdhaW4uY29ubmVjdCh0aGlzLmF1ZGlvQ29udGV4dC5kZXN0aW5hdGlvbik7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIEZhZGUgaW4gcXVpY2tseVxuICAgICAgICAgICAgZ2Fpbi5nYWluLnNldFZhbHVlQXRUaW1lKDAsIG5vdyk7XG4gICAgICAgICAgICBnYWluLmdhaW4ubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodGhpcy52b2x1bWUgKiAwLjE1LCBub3cgKyAwLjA1KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgb3NjLnN0YXJ0KG5vdyk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHJldHVybiB7IG9zYywgZ2FpbiB9O1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdGYWlsZWQgdG8gc3RhcnQgYWxpZW4gY2F0IGxpbmUgdG9uZTonLCBlcnJvcik7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFN0b3AgdGhlIGNvbnRpbnVvdXMgRWI1IHRvbmUgd2l0aCBmYWRlIG91dFxuICAgICAqL1xuICAgIHN0b3BBbGllbkNhdExpbmVUb25lKG5vZGVzKSB7XG4gICAgICAgIGlmICghbm9kZXMgfHwgIXRoaXMuYXVkaW9Db250ZXh0KSByZXR1cm47XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IG5vdyA9IHRoaXMuYXVkaW9Db250ZXh0LmN1cnJlbnRUaW1lO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBGYWRlIG91dCBxdWlja2x5XG4gICAgICAgICAgICBub2Rlcy5nYWluLmdhaW4uY2FuY2VsU2NoZWR1bGVkVmFsdWVzKG5vdyk7XG4gICAgICAgICAgICBub2Rlcy5nYWluLmdhaW4uc2V0VmFsdWVBdFRpbWUobm9kZXMuZ2Fpbi5nYWluLnZhbHVlLCBub3cpO1xuICAgICAgICAgICAgbm9kZXMuZ2Fpbi5nYWluLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKDAsIG5vdyArIDAuMDUpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBub2Rlcy5vc2Muc3RvcChub3cgKyAwLjA1KTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignRmFpbGVkIHRvIHN0b3AgYWxpZW4gY2F0IGxpbmUgdG9uZTonLCBlcnJvcik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBQbGF5IEE0IHRvbmUgZm9yIGFsaWVuIGNhdCBjb21tYW5kXG4gICAgICovXG4gICAgcGxheUFsaWVuQ2F0QTQoZHVyYXRpb24gPSAwLjIpIHtcbiAgICAgICAgaWYgKCF0aGlzLmF1ZGlvQ29udGV4dCB8fCAhdGhpcy5lbmFibGVkKSByZXR1cm47XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICh0aGlzLmF1ZGlvQ29udGV4dC5zdGF0ZSA9PT0gJ3N1c3BlbmRlZCcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvQ29udGV4dC5yZXN1bWUoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3Qgbm93ID0gdGhpcy5hdWRpb0NvbnRleHQuY3VycmVudFRpbWU7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbnN0IG9zYyA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZU9zY2lsbGF0b3IoKTtcbiAgICAgICAgICAgIGNvbnN0IGdhaW4gPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVHYWluKCk7XG4gICAgICAgICAgICBjb25zdCBmaWx0ZXIgPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVCaXF1YWRGaWx0ZXIoKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgb3NjLnR5cGUgPSAnc2luZSc7XG4gICAgICAgICAgICBvc2MuZnJlcXVlbmN5LnZhbHVlID0gNDQwLjAwOyAvLyBBNFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBmaWx0ZXIudHlwZSA9ICdiYW5kcGFzcyc7XG4gICAgICAgICAgICBmaWx0ZXIuZnJlcXVlbmN5LnZhbHVlID0gNDQwLjAwO1xuICAgICAgICAgICAgZmlsdGVyLlEudmFsdWUgPSAxMjtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgb3NjLmNvbm5lY3QoZmlsdGVyKTtcbiAgICAgICAgICAgIGZpbHRlci5jb25uZWN0KGdhaW4pO1xuICAgICAgICAgICAgZ2Fpbi5jb25uZWN0KHRoaXMuYXVkaW9Db250ZXh0LmRlc3RpbmF0aW9uKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gUXVpY2sgYmVlcFxuICAgICAgICAgICAgZ2Fpbi5nYWluLnNldFZhbHVlQXRUaW1lKDAsIG5vdyk7XG4gICAgICAgICAgICBnYWluLmdhaW4ubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodGhpcy52b2x1bWUgKiAwLjIsIG5vdyArIDAuMDIpO1xuICAgICAgICAgICAgZ2Fpbi5nYWluLnNldFZhbHVlQXRUaW1lKHRoaXMudm9sdW1lICogMC4yLCBub3cgKyBkdXJhdGlvbiAtIDAuMDIpO1xuICAgICAgICAgICAgZ2Fpbi5nYWluLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKDAsIG5vdyArIGR1cmF0aW9uKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgb3NjLnN0YXJ0KG5vdyk7XG4gICAgICAgICAgICBvc2Muc3RvcChub3cgKyBkdXJhdGlvbik7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0ZhaWxlZCB0byBwbGF5IGFsaWVuIGNhdCBBNDonLCBlcnJvcik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBQbGF5IERiNSB0b25lIGZvciBhbGllbiBjYXQgY29tbWFuZFxuICAgICAqL1xuICAgIHBsYXlBbGllbkNhdERiNShkdXJhdGlvbiA9IDAuMSkge1xuICAgICAgICBpZiAoIXRoaXMuYXVkaW9Db250ZXh0IHx8ICF0aGlzLmVuYWJsZWQpIHJldHVybjtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKHRoaXMuYXVkaW9Db250ZXh0LnN0YXRlID09PSAnc3VzcGVuZGVkJykge1xuICAgICAgICAgICAgICAgIHRoaXMuYXVkaW9Db250ZXh0LnJlc3VtZSgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCBub3cgPSB0aGlzLmF1ZGlvQ29udGV4dC5jdXJyZW50VGltZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgY29uc3Qgb3NjID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlT3NjaWxsYXRvcigpO1xuICAgICAgICAgICAgY29uc3QgZ2FpbiA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZUdhaW4oKTtcbiAgICAgICAgICAgIGNvbnN0IGZpbHRlciA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZUJpcXVhZEZpbHRlcigpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBvc2MudHlwZSA9ICdzaW5lJztcbiAgICAgICAgICAgIG9zYy5mcmVxdWVuY3kudmFsdWUgPSA1NTQuMzc7IC8vIERiNVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBmaWx0ZXIudHlwZSA9ICdiYW5kcGFzcyc7XG4gICAgICAgICAgICBmaWx0ZXIuZnJlcXVlbmN5LnZhbHVlID0gNTU0LjM3O1xuICAgICAgICAgICAgZmlsdGVyLlEudmFsdWUgPSAxMjtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgb3NjLmNvbm5lY3QoZmlsdGVyKTtcbiAgICAgICAgICAgIGZpbHRlci5jb25uZWN0KGdhaW4pO1xuICAgICAgICAgICAgZ2Fpbi5jb25uZWN0KHRoaXMuYXVkaW9Db250ZXh0LmRlc3RpbmF0aW9uKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gUXVpY2sgYmVlcFxuICAgICAgICAgICAgZ2Fpbi5nYWluLnNldFZhbHVlQXRUaW1lKDAsIG5vdyk7XG4gICAgICAgICAgICBnYWluLmdhaW4ubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodGhpcy52b2x1bWUgKiAwLjIsIG5vdyArIDAuMDIpO1xuICAgICAgICAgICAgZ2Fpbi5nYWluLnNldFZhbHVlQXRUaW1lKHRoaXMudm9sdW1lICogMC4yLCBub3cgKyBkdXJhdGlvbiAtIDAuMDIpO1xuICAgICAgICAgICAgZ2Fpbi5nYWluLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKDAsIG5vdyArIGR1cmF0aW9uKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgb3NjLnN0YXJ0KG5vdyk7XG4gICAgICAgICAgICBvc2Muc3RvcChub3cgKyBkdXJhdGlvbik7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0ZhaWxlZCB0byBwbGF5IGFsaWVuIGNhdCBEYjU6JywgZXJyb3IpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUGxheSBGNSBiZWVwIGZvciBhbGllbiBjYXQgY29tbWFuZCAobGluZSBicmVhaylcbiAgICAgKi9cbiAgICBwbGF5QWxpZW5DYXRMaW5lQnJlYWsoZHVyYXRpb24gPSAwLjEpIHtcbiAgICAgICAgaWYgKCF0aGlzLmF1ZGlvQ29udGV4dCB8fCAhdGhpcy5lbmFibGVkKSByZXR1cm47XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICh0aGlzLmF1ZGlvQ29udGV4dC5zdGF0ZSA9PT0gJ3N1c3BlbmRlZCcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvQ29udGV4dC5yZXN1bWUoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3Qgbm93ID0gdGhpcy5hdWRpb0NvbnRleHQuY3VycmVudFRpbWU7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbnN0IG9zYyA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZU9zY2lsbGF0b3IoKTtcbiAgICAgICAgICAgIGNvbnN0IGdhaW4gPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVHYWluKCk7XG4gICAgICAgICAgICBjb25zdCBmaWx0ZXIgPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVCaXF1YWRGaWx0ZXIoKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgb3NjLnR5cGUgPSAnc2luZSc7XG4gICAgICAgICAgICBvc2MuZnJlcXVlbmN5LnZhbHVlID0gNjk4LjQ2OyAvLyBGNVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBmaWx0ZXIudHlwZSA9ICdiYW5kcGFzcyc7XG4gICAgICAgICAgICBmaWx0ZXIuZnJlcXVlbmN5LnZhbHVlID0gNjk4LjQ2O1xuICAgICAgICAgICAgZmlsdGVyLlEudmFsdWUgPSAxMjtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgb3NjLmNvbm5lY3QoZmlsdGVyKTtcbiAgICAgICAgICAgIGZpbHRlci5jb25uZWN0KGdhaW4pO1xuICAgICAgICAgICAgZ2Fpbi5jb25uZWN0KHRoaXMuYXVkaW9Db250ZXh0LmRlc3RpbmF0aW9uKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gUXVpY2sgYmVlcFxuICAgICAgICAgICAgZ2Fpbi5nYWluLnNldFZhbHVlQXRUaW1lKDAsIG5vdyk7XG4gICAgICAgICAgICBnYWluLmdhaW4ubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodGhpcy52b2x1bWUgKiAwLjIsIG5vdyArIDAuMDIpO1xuICAgICAgICAgICAgZ2Fpbi5nYWluLnNldFZhbHVlQXRUaW1lKHRoaXMudm9sdW1lICogMC4yLCBub3cgKyBkdXJhdGlvbiAtIDAuMDIpO1xuICAgICAgICAgICAgZ2Fpbi5nYWluLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKDAsIG5vdyArIGR1cmF0aW9uKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgb3NjLnN0YXJ0KG5vdyk7XG4gICAgICAgICAgICBvc2Muc3RvcChub3cgKyBkdXJhdGlvbik7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0ZhaWxlZCB0byBwbGF5IGFsaWVuIGNhdCBsaW5lIGJyZWFrOicsIGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlIHR5cGluZyBzb3VuZCBmb3IgcmV0cm8gdGhlbWUgKG1lY2hhbmljYWwgdHlwZXdyaXRlcilcbiAgICAgKi9cbiAgICBnZW5lcmF0ZVJldHJvS2V5cHJlc3MoKSB7XG4gICAgICAgIGlmICghdGhpcy5hdWRpb0NvbnRleHQgfHwgIXRoaXMuZW5hYmxlZCkgcmV0dXJuO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAodGhpcy5hdWRpb0NvbnRleHQuc3RhdGUgPT09ICdzdXNwZW5kZWQnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hdWRpb0NvbnRleHQucmVzdW1lKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IG5vdyA9IHRoaXMuYXVkaW9Db250ZXh0LmN1cnJlbnRUaW1lO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBUeXBld3JpdGVyLXN0eWxlIGNsaWNrXG4gICAgICAgICAgICBjb25zdCBvc2MgPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVPc2NpbGxhdG9yKCk7XG4gICAgICAgICAgICBjb25zdCBnYWluID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlR2FpbigpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBvc2MuY29ubmVjdChnYWluKTtcbiAgICAgICAgICAgIGdhaW4uY29ubmVjdCh0aGlzLmF1ZGlvQ29udGV4dC5kZXN0aW5hdGlvbik7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIG9zYy50eXBlID0gJ3NxdWFyZSc7XG4gICAgICAgICAgICBvc2MuZnJlcXVlbmN5LnZhbHVlID0gMjAwMCArIE1hdGgucmFuZG9tKCkgKiA1MDA7IC8vIFNsaWdodCB2YXJpYXRpb25cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgZ2Fpbi5nYWluLnNldFZhbHVlQXRUaW1lKHRoaXMudm9sdW1lICogMC4xLCBub3cpO1xuICAgICAgICAgICAgZ2Fpbi5nYWluLmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUoMC4wMSwgbm93ICsgMC4wMTUpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBvc2Muc3RhcnQobm93KTtcbiAgICAgICAgICAgIG9zYy5zdG9wKG5vdyArIDAuMDE1KTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignRmFpbGVkIHRvIGdlbmVyYXRlIHJldHJvIGtleXByZXNzOicsIGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlIHR5cGluZyBzb3VuZCBmb3IgZGVmYXVsdCB0aGVtZSAoc29mdCBjbGljaylcbiAgICAgKi9cbiAgICBnZW5lcmF0ZURlZmF1bHRLZXlwcmVzcygpIHtcbiAgICAgICAgaWYgKCF0aGlzLmF1ZGlvQ29udGV4dCB8fCAhdGhpcy5lbmFibGVkKSByZXR1cm47XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICh0aGlzLmF1ZGlvQ29udGV4dC5zdGF0ZSA9PT0gJ3N1c3BlbmRlZCcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvQ29udGV4dC5yZXN1bWUoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3Qgbm93ID0gdGhpcy5hdWRpb0NvbnRleHQuY3VycmVudFRpbWU7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIFNvZnQga2V5Ym9hcmQgY2xpY2tcbiAgICAgICAgICAgIGNvbnN0IG9zYyA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZU9zY2lsbGF0b3IoKTtcbiAgICAgICAgICAgIGNvbnN0IGdhaW4gPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVHYWluKCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIG9zYy5jb25uZWN0KGdhaW4pO1xuICAgICAgICAgICAgZ2Fpbi5jb25uZWN0KHRoaXMuYXVkaW9Db250ZXh0LmRlc3RpbmF0aW9uKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgb3NjLnR5cGUgPSAnc2luZSc7XG4gICAgICAgICAgICBvc2MuZnJlcXVlbmN5LnZhbHVlID0gODAwO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBnYWluLmdhaW4uc2V0VmFsdWVBdFRpbWUodGhpcy52b2x1bWUgKiAwLjA4LCBub3cpO1xuICAgICAgICAgICAgZ2Fpbi5nYWluLmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUoMC4wMSwgbm93ICsgMC4wMSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIG9zYy5zdGFydChub3cpO1xuICAgICAgICAgICAgb3NjLnN0b3Aobm93ICsgMC4wMSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0ZhaWxlZCB0byBnZW5lcmF0ZSBkZWZhdWx0IGtleXByZXNzOicsIGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlIFRhYiBrZXkgc291bmQgKGRpZmZlcmVudCBmcm9tIHJlZ3VsYXIga2V5cHJlc3MpXG4gICAgICogQWxpZW4gdGhlbWU6IEhlYXZpZXIgbWVjaGFuaWNhbCBzaGlmdFxuICAgICAqL1xuICAgIGdlbmVyYXRlVGFiU291bmQodGhlbWUgPSAnZGVmYXVsdCcpIHtcbiAgICAgICAgaWYgKCF0aGlzLmF1ZGlvQ29udGV4dCB8fCAhdGhpcy5lbmFibGVkKSByZXR1cm47XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICh0aGlzLmF1ZGlvQ29udGV4dC5zdGF0ZSA9PT0gJ3N1c3BlbmRlZCcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvQ29udGV4dC5yZXN1bWUoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3Qgbm93ID0gdGhpcy5hdWRpb0NvbnRleHQuY3VycmVudFRpbWU7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmICh0aGVtZSA9PT0gJ2FsaWVuJykge1xuICAgICAgICAgICAgICAgIC8vIEFsaWVuOiBIZWF2aWVyIG1lY2hhbmljYWwgVEFCIHdpdGggY2FycmlhZ2UtbGlrZSBzb3VuZFxuICAgICAgICAgICAgICAgIC8vIEluaXRpYWwgaGVhdnkgaW1wYWN0XG4gICAgICAgICAgICAgICAgY29uc3QgaW1wYWN0ID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlT3NjaWxsYXRvcigpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGltcGFjdEdhaW4gPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVHYWluKCk7XG4gICAgICAgICAgICAgICAgY29uc3QgaW1wYWN0RmlsdGVyID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlQmlxdWFkRmlsdGVyKCk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaW1wYWN0LnR5cGUgPSAnc2F3dG9vdGgnO1xuICAgICAgICAgICAgICAgIGltcGFjdC5mcmVxdWVuY3kudmFsdWUgPSAxNTA7XG4gICAgICAgICAgICAgICAgaW1wYWN0RmlsdGVyLnR5cGUgPSAnbG93cGFzcyc7XG4gICAgICAgICAgICAgICAgaW1wYWN0RmlsdGVyLmZyZXF1ZW5jeS52YWx1ZSA9IDYwMDtcbiAgICAgICAgICAgICAgICBpbXBhY3RGaWx0ZXIuUS52YWx1ZSA9IDI7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaW1wYWN0LmNvbm5lY3QoaW1wYWN0RmlsdGVyKTtcbiAgICAgICAgICAgICAgICBpbXBhY3RGaWx0ZXIuY29ubmVjdChpbXBhY3RHYWluKTtcbiAgICAgICAgICAgICAgICBpbXBhY3RHYWluLmNvbm5lY3QodGhpcy5hdWRpb0NvbnRleHQuZGVzdGluYXRpb24pO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGltcGFjdEdhaW4uZ2Fpbi5zZXRWYWx1ZUF0VGltZSh0aGlzLnZvbHVtZSAqIDAuMzUsIG5vdyk7XG4gICAgICAgICAgICAgICAgaW1wYWN0R2Fpbi5nYWluLmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUoMC4wMDEsIG5vdyArIDAuMDgpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGltcGFjdC5zdGFydChub3cpO1xuICAgICAgICAgICAgICAgIGltcGFjdC5zdG9wKG5vdyArIDAuMDgpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIE1lY2hhbmljYWwgc2xpZGUvc2hpZnQgc291bmRcbiAgICAgICAgICAgICAgICBjb25zdCBzbGlkZSA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZU9zY2lsbGF0b3IoKTtcbiAgICAgICAgICAgICAgICBjb25zdCBzbGlkZUdhaW4gPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVHYWluKCk7XG4gICAgICAgICAgICAgICAgY29uc3Qgc2xpZGVGaWx0ZXIgPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVCaXF1YWRGaWx0ZXIoKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBzbGlkZS50eXBlID0gJ3NxdWFyZSc7XG4gICAgICAgICAgICAgICAgc2xpZGVGaWx0ZXIudHlwZSA9ICdiYW5kcGFzcyc7XG4gICAgICAgICAgICAgICAgc2xpZGVGaWx0ZXIuZnJlcXVlbmN5LnZhbHVlID0gMTIwMDtcbiAgICAgICAgICAgICAgICBzbGlkZUZpbHRlci5RLnZhbHVlID0gNDtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBzbGlkZS5jb25uZWN0KHNsaWRlRmlsdGVyKTtcbiAgICAgICAgICAgICAgICBzbGlkZUZpbHRlci5jb25uZWN0KHNsaWRlR2Fpbik7XG4gICAgICAgICAgICAgICAgc2xpZGVHYWluLmNvbm5lY3QodGhpcy5hdWRpb0NvbnRleHQuZGVzdGluYXRpb24pO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHNsaWRlLmZyZXF1ZW5jeS5zZXRWYWx1ZUF0VGltZSg4MDAsIG5vdyArIDAuMDEpO1xuICAgICAgICAgICAgICAgIHNsaWRlLmZyZXF1ZW5jeS5leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lKDE0MDAsIG5vdyArIDAuMDYpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHNsaWRlR2Fpbi5nYWluLnNldFZhbHVlQXRUaW1lKDAsIG5vdyArIDAuMDEpO1xuICAgICAgICAgICAgICAgIHNsaWRlR2Fpbi5nYWluLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHRoaXMudm9sdW1lICogMC4yLCBub3cgKyAwLjAyKTtcbiAgICAgICAgICAgICAgICBzbGlkZUdhaW4uZ2Fpbi5leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lKDAuMDAxLCBub3cgKyAwLjA4KTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBzbGlkZS5zdGFydChub3cgKyAwLjAxKTtcbiAgICAgICAgICAgICAgICBzbGlkZS5zdG9wKG5vdyArIDAuMDgpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBEZWZhdWx0OiBIaWdoZXIgcGl0Y2hlZCB0YWIgc291bmRcbiAgICAgICAgICAgICAgICBjb25zdCBvc2MgPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVPc2NpbGxhdG9yKCk7XG4gICAgICAgICAgICAgICAgY29uc3QgZ2FpbiA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZUdhaW4oKTtcbiAgICAgICAgICAgICAgICBvc2MuY29ubmVjdChnYWluKTtcbiAgICAgICAgICAgICAgICBnYWluLmNvbm5lY3QodGhpcy5hdWRpb0NvbnRleHQuZGVzdGluYXRpb24pO1xuICAgICAgICAgICAgICAgIG9zYy50eXBlID0gJ3RyaWFuZ2xlJztcbiAgICAgICAgICAgICAgICBvc2MuZnJlcXVlbmN5LnZhbHVlID0gMTIwMDtcbiAgICAgICAgICAgICAgICBnYWluLmdhaW4uc2V0VmFsdWVBdFRpbWUodGhpcy52b2x1bWUgKiAwLjE1LCBub3cpO1xuICAgICAgICAgICAgICAgIGdhaW4uZ2Fpbi5leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lKDAuMDEsIG5vdyArIDAuMDQpO1xuICAgICAgICAgICAgICAgIG9zYy5zdGFydChub3cpO1xuICAgICAgICAgICAgICAgIG9zYy5zdG9wKG5vdyArIDAuMDQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdGYWlsZWQgdG8gZ2VuZXJhdGUgdGFiIHNvdW5kOicsIGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlIEVudGVyIGtleSBzb3VuZFxuICAgICAqIEFsaWVuIHRoZW1lOiBBdXRob3JpdGF0aXZlIGNvbW1hbmQgY29uZmlybWF0aW9uXG4gICAgICovXG4gICAgZ2VuZXJhdGVFbnRlclNvdW5kKHRoZW1lID0gJ2RlZmF1bHQnKSB7XG4gICAgICAgIGlmICghdGhpcy5hdWRpb0NvbnRleHQgfHwgIXRoaXMuZW5hYmxlZCkgcmV0dXJuO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAodGhpcy5hdWRpb0NvbnRleHQuc3RhdGUgPT09ICdzdXNwZW5kZWQnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hdWRpb0NvbnRleHQucmVzdW1lKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IG5vdyA9IHRoaXMuYXVkaW9Db250ZXh0LmN1cnJlbnRUaW1lO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAodGhlbWUgPT09ICdhbGllbicpIHtcbiAgICAgICAgICAgICAgICAvLyBBbGllbjogQXV0aG9yaXRhdGl2ZSB0d28tdG9uZSBjb25maXJtYXRpb25cbiAgICAgICAgICAgICAgICAvLyBMb3cgZnJlcXVlbmN5IGNvbXBvbmVudCAtIGNvbW1hbmQgcmVjZWl2ZWRcbiAgICAgICAgICAgICAgICBjb25zdCBsb3dPc2MgPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVPc2NpbGxhdG9yKCk7XG4gICAgICAgICAgICAgICAgY29uc3QgbG93R2FpbiA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZUdhaW4oKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBsb3dPc2MudHlwZSA9ICdzcXVhcmUnO1xuICAgICAgICAgICAgICAgIGxvd09zYy5mcmVxdWVuY3kudmFsdWUgPSAyMjA7XG4gICAgICAgICAgICAgICAgbG93T3NjLmNvbm5lY3QobG93R2Fpbik7XG4gICAgICAgICAgICAgICAgbG93R2Fpbi5jb25uZWN0KHRoaXMuYXVkaW9Db250ZXh0LmRlc3RpbmF0aW9uKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBsb3dHYWluLmdhaW4uc2V0VmFsdWVBdFRpbWUodGhpcy52b2x1bWUgKiAwLjMsIG5vdyk7XG4gICAgICAgICAgICAgICAgbG93R2Fpbi5nYWluLmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUoMC4wMDEsIG5vdyArIDAuMTIpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGxvd09zYy5zdGFydChub3cpO1xuICAgICAgICAgICAgICAgIGxvd09zYy5zdG9wKG5vdyArIDAuMTIpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIEhpZ2ggZnJlcXVlbmN5IGNvbXBvbmVudCAtIGNvbW1hbmQgY29uZmlybWVkXG4gICAgICAgICAgICAgICAgY29uc3QgaGlnaE9zYyA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZU9zY2lsbGF0b3IoKTtcbiAgICAgICAgICAgICAgICBjb25zdCBoaWdoR2FpbiA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZUdhaW4oKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBoaWdoT3NjLnR5cGUgPSAnc2luZSc7XG4gICAgICAgICAgICAgICAgaGlnaE9zYy5mcmVxdWVuY3kudmFsdWUgPSA2NjA7XG4gICAgICAgICAgICAgICAgaGlnaE9zYy5jb25uZWN0KGhpZ2hHYWluKTtcbiAgICAgICAgICAgICAgICBoaWdoR2Fpbi5jb25uZWN0KHRoaXMuYXVkaW9Db250ZXh0LmRlc3RpbmF0aW9uKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBoaWdoR2Fpbi5nYWluLnNldFZhbHVlQXRUaW1lKDAsIG5vdyArIDAuMDQpO1xuICAgICAgICAgICAgICAgIGhpZ2hHYWluLmdhaW4ubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUodGhpcy52b2x1bWUgKiAwLjI1LCBub3cgKyAwLjA0NSk7XG4gICAgICAgICAgICAgICAgaGlnaEdhaW4uZ2Fpbi5leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lKDAuMDAxLCBub3cgKyAwLjEyKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBoaWdoT3NjLnN0YXJ0KG5vdyArIDAuMDQpO1xuICAgICAgICAgICAgICAgIGhpZ2hPc2Muc3RvcChub3cgKyAwLjEyKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gRGVmYXVsdDogU2F0aXNmeWluZyBjb25maXJtYXRpb25cbiAgICAgICAgICAgICAgICBjb25zdCBvc2MgPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVPc2NpbGxhdG9yKCk7XG4gICAgICAgICAgICAgICAgY29uc3QgZ2FpbiA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZUdhaW4oKTtcbiAgICAgICAgICAgICAgICBvc2MuY29ubmVjdChnYWluKTtcbiAgICAgICAgICAgICAgICBnYWluLmNvbm5lY3QodGhpcy5hdWRpb0NvbnRleHQuZGVzdGluYXRpb24pO1xuICAgICAgICAgICAgICAgIG9zYy50eXBlID0gJ3NpbmUnO1xuICAgICAgICAgICAgICAgIG9zYy5mcmVxdWVuY3kudmFsdWUgPSA2NjA7XG4gICAgICAgICAgICAgICAgZ2Fpbi5nYWluLnNldFZhbHVlQXRUaW1lKHRoaXMudm9sdW1lICogMC4yLCBub3cpO1xuICAgICAgICAgICAgICAgIGdhaW4uZ2Fpbi5leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lKDAuMDEsIG5vdyArIDAuMDgpO1xuICAgICAgICAgICAgICAgIG9zYy5zdGFydChub3cpO1xuICAgICAgICAgICAgICAgIG9zYy5zdG9wKG5vdyArIDAuMDgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdGYWlsZWQgdG8gZ2VuZXJhdGUgZW50ZXIgc291bmQ6JywgZXJyb3IpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2VuZXJhdGUgY29tbWFuZCBzdWNjZXNzIHNvdW5kXG4gICAgICovXG4gICAgZ2VuZXJhdGVTdWNjZXNzU291bmQodGhlbWUgPSAnZGVmYXVsdCcpIHtcbiAgICAgICAgaWYgKCF0aGlzLmF1ZGlvQ29udGV4dCB8fCAhdGhpcy5lbmFibGVkKSByZXR1cm47XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICh0aGlzLmF1ZGlvQ29udGV4dC5zdGF0ZSA9PT0gJ3N1c3BlbmRlZCcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvQ29udGV4dC5yZXN1bWUoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3Qgbm93ID0gdGhpcy5hdWRpb0NvbnRleHQuY3VycmVudFRpbWU7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIFBsZWFzYW50IGFzY2VuZGluZyB0b25lXG4gICAgICAgICAgICBbNDQwLCA1NTQsIDY1OV0uZm9yRWFjaCgoZnJlcSwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgb3NjID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlT3NjaWxsYXRvcigpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBnYWluID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlR2FpbigpO1xuICAgICAgICAgICAgICAgICAgICBvc2MuY29ubmVjdChnYWluKTtcbiAgICAgICAgICAgICAgICAgICAgZ2Fpbi5jb25uZWN0KHRoaXMuYXVkaW9Db250ZXh0LmRlc3RpbmF0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgb3NjLnR5cGUgPSAnc2luZSc7XG4gICAgICAgICAgICAgICAgICAgIG9zYy5mcmVxdWVuY3kudmFsdWUgPSBmcmVxO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB0ID0gdGhpcy5hdWRpb0NvbnRleHQuY3VycmVudFRpbWU7XG4gICAgICAgICAgICAgICAgICAgIGdhaW4uZ2Fpbi5zZXRWYWx1ZUF0VGltZSh0aGlzLnZvbHVtZSAqIDAuMTUsIHQpO1xuICAgICAgICAgICAgICAgICAgICBnYWluLmdhaW4uZXhwb25lbnRpYWxSYW1wVG9WYWx1ZUF0VGltZSgwLjAxLCB0ICsgMC4xNSk7XG4gICAgICAgICAgICAgICAgICAgIG9zYy5zdGFydCh0KTtcbiAgICAgICAgICAgICAgICAgICAgb3NjLnN0b3AodCArIDAuMTUpO1xuICAgICAgICAgICAgICAgIH0sIGluZGV4ICogODApO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0ZhaWxlZCB0byBnZW5lcmF0ZSBzdWNjZXNzIHNvdW5kOicsIGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEluaXRpYWxpemUgc291bmQgbGlicmFyeVxuICAgICAqL1xuICAgIGluaXRpYWxpemVTb3VuZHMoKSB7XG4gICAgICAgIHRoaXMuc291bmRzID0ge1xuICAgICAgICAgICAgLy8gQWxpZW4vTm9zdHJvbW8gc291bmRzXG4gICAgICAgICAgICBhbGllbkJvb3Q6IHtcbiAgICAgICAgICAgICAgICB1cmw6ICcvc291bmRzL2FsaWVuLWJvb3QubXAzJyxcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJ01VL1RIL1VSIHN5c3RlbSBzdGFydHVwJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGFsaWVuS2V5cHJlc3M6IHtcbiAgICAgICAgICAgICAgICB1cmw6ICcvc291bmRzL2FsaWVuLWtleXByZXNzLm1wMycsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdNZWNoYW5pY2FsIGtleWJvYXJkIGNsaWNrJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGFsaWVuQmVlcDoge1xuICAgICAgICAgICAgICAgIHVybDogJy9zb3VuZHMvYWxpZW4tYmVlcC5tcDMnLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnU3lzdGVtIGJlZXAnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYWxpZW5FcnJvcjoge1xuICAgICAgICAgICAgICAgIHVybDogJy9zb3VuZHMvYWxpZW4tZXJyb3IubXAzJyxcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJ0Vycm9yIHRvbmUnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBEZWZhdWx0IHRlcm1pbmFsIHNvdW5kc1xuICAgICAgICAgICAgdGVybWluYWxCb290OiB7XG4gICAgICAgICAgICAgICAgdXJsOiAnL3NvdW5kcy90ZXJtaW5hbC1ib290Lm1wMycsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdUZXJtaW5hbCBzdGFydHVwJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGtleXByZXNzOiB7XG4gICAgICAgICAgICAgICAgdXJsOiAnL3NvdW5kcy9rZXlwcmVzcy5tcDMnLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnS2V5Ym9hcmQgY2xpY2snXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYmVlcDoge1xuICAgICAgICAgICAgICAgIHVybDogJy9zb3VuZHMvYmVlcC5tcDMnLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnQmVsbCBzb3VuZCdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIFJldHJvIHNvdW5kc1xuICAgICAgICAgICAgcmV0cm9Cb290OiB7XG4gICAgICAgICAgICAgICAgdXJsOiAnL3NvdW5kcy9yZXRyby1ib290Lm1wMycsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdDUlQgd2FybXVwJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJldHJvS2V5cHJlc3M6IHtcbiAgICAgICAgICAgICAgICB1cmw6ICcvc291bmRzL3JldHJvLWtleXByZXNzLm1wMycsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdNZWNoYW5pY2FsIHN3aXRjaCdcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBQbGF5IGEgc291bmQgZWZmZWN0XG4gICAgICovXG4gICAgcGxheShzb3VuZE5hbWUsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBpZiAoIXRoaXMuZW5hYmxlZCkgcmV0dXJuO1xuICAgICAgICBcbiAgICAgICAgY29uc3Qgc291bmQgPSB0aGlzLnNvdW5kc1tzb3VuZE5hbWVdO1xuICAgICAgICBpZiAoIXNvdW5kKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oYFNvdW5kIG5vdCBmb3VuZDogJHtzb3VuZE5hbWV9YCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyBUcnkgdG8gbG9hZCBhdWRpbyBmaWxlLCBmYWxsYmFjayB0byBnZW5lcmF0ZWQgc291bmRcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGF1ZGlvID0gbmV3IEF1ZGlvKHNvdW5kLnVybCk7XG4gICAgICAgICAgICBhdWRpby52b2x1bWUgPSBvcHRpb25zLnZvbHVtZSB8fCB0aGlzLnZvbHVtZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgYXVkaW8ucGxheSgpLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICAgICAgLy8gRmlsZSBub3QgZm91bmQgb3IgYXV0b3BsYXkgYmxvY2tlZCAtIHVzZSBnZW5lcmF0ZWQgc291bmRcbiAgICAgICAgICAgICAgICBjb25zb2xlLmRlYnVnKCdBdWRpbyBmaWxlIG5vdCBhdmFpbGFibGUsIHVzaW5nIGdlbmVyYXRlZCBzb3VuZCcpO1xuICAgICAgICAgICAgICAgIHRoaXMucGxheUZhbGxiYWNrU291bmQoc291bmROYW1lKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdGYWlsZWQgdG8gcGxheSBzb3VuZCwgdXNpbmcgZmFsbGJhY2s6JywgZXJyb3IpO1xuICAgICAgICAgICAgdGhpcy5wbGF5RmFsbGJhY2tTb3VuZChzb3VuZE5hbWUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUGxheSBmYWxsYmFjayBnZW5lcmF0ZWQgc291bmQgd2hlbiBhdWRpbyBmaWxlcyBhcmUgdW5hdmFpbGFibGVcbiAgICAgKi9cbiAgICBwbGF5RmFsbGJhY2tTb3VuZChzb3VuZE5hbWUpIHtcbiAgICAgICAgaWYgKHNvdW5kTmFtZS5pbmNsdWRlcygnYWxpZW4nKSkge1xuICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZUFsaWVuQmVlcCgpO1xuICAgICAgICB9IGVsc2UgaWYgKHNvdW5kTmFtZS5pbmNsdWRlcygncmV0cm8nKSkge1xuICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZVJldHJvQmVlcCgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZUJlZXAoNDQwLCAwLjIsICdzaW5lJyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBQbGF5IGJvb3Qgc291bmQgYmFzZWQgb24gdGhlbWVcbiAgICAgKi9cbiAgICBwbGF5Qm9vdFNvdW5kKHRoZW1lID0gJ2RlZmF1bHQnKSB7XG4gICAgICAgIGlmICghdGhpcy5lbmFibGVkKSByZXR1cm47XG4gICAgICAgIFxuICAgICAgICBzd2l0Y2godGhlbWUpIHtcbiAgICAgICAgICAgIGNhc2UgJ2FsaWVuJzpcbiAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlQWxpZW5Cb290U291bmQoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3JldHJvJzpcbiAgICAgICAgICAgIGNhc2UgJ2FwcGxlLWlpJzpcbiAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlUmV0cm9Cb290U291bmQoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3Ryb24nOlxuICAgICAgICAgICAgY2FzZSAnY3liZXJwdW5rJzpcbiAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlRGVmYXVsdEJvb3RTb3VuZCgpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlRGVmYXVsdEJvb3RTb3VuZCgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUGxheSBrZXlwcmVzcyBzb3VuZCBiYXNlZCBvbiB0aGVtZVxuICAgICAqL1xuICAgIHBsYXlLZXlwcmVzc1NvdW5kKHRoZW1lID0gJ2RlZmF1bHQnKSB7XG4gICAgICAgIGlmICghdGhpcy5lbmFibGVkKSByZXR1cm47XG4gICAgICAgIFxuICAgICAgICBzd2l0Y2godGhlbWUpIHtcbiAgICAgICAgICAgIGNhc2UgJ2FsaWVuJzpcbiAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlQWxpZW5LZXlwcmVzcygpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAncmV0cm8nOlxuICAgICAgICAgICAgY2FzZSAnYXBwbGUtaWknOlxuICAgICAgICAgICAgICAgIHRoaXMuZ2VuZXJhdGVSZXRyb0tleXByZXNzKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdoYWNrZXInOlxuICAgICAgICAgICAgY2FzZSAnbWF0cml4JzpcbiAgICAgICAgICAgICAgICAvLyBSYXBpZCwgZGlnaXRhbCBzb3VuZCBmb3IgaGFja2VyIHRoZW1lc1xuICAgICAgICAgICAgICAgIHRoaXMuZ2VuZXJhdGVCZWVwKDE1MDAsIDAuMDA4LCAnc3F1YXJlJyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRoaXMuZ2VuZXJhdGVEZWZhdWx0S2V5cHJlc3MoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFBsYXkgc3lzdGVtIGJlZXBcbiAgICAgKi9cbiAgICBwbGF5QmVlcCh0aGVtZSA9ICdkZWZhdWx0Jykge1xuICAgICAgICBpZiAodGhlbWUgPT09ICdhbGllbicpIHtcbiAgICAgICAgICAgIHRoaXMuZ2VuZXJhdGVBbGllbkJlZXAoKTtcbiAgICAgICAgfSBlbHNlIGlmICh0aGVtZSA9PT0gJ3JldHJvJyB8fCB0aGVtZSA9PT0gJ2FwcGxlLWlpJykge1xuICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZVJldHJvQmVlcCgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZUJlZXAoNDQwLCAwLjIsICdzaW5lJyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBQbGF5IGVycm9yIHNvdW5kXG4gICAgICovXG4gICAgcGxheUVycm9yKHRoZW1lID0gJ2RlZmF1bHQnKSB7XG4gICAgICAgIGlmICh0aGVtZSA9PT0gJ2FsaWVuJykge1xuICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZUJlZXAoMTIwLCAwLjMsICdzcXVhcmUnKTsgLy8gTG93IHdhcm5pbmcgdG9uZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZUJlZXAoMjAwLCAwLjI1LCAnc2F3dG9vdGgnKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFN0YXJ0IGNvbnRpbnVvdXMgYW1iaWVudCBzdGF0aWMgZm9yIGFsaWVuIHRoZW1lXG4gICAgICogTXVsdGktbGF5ZXJlZCBhdG1vc3BoZXJpYyBzb3VuZHNjYXBlIHdpdGggdGFwZSBoaXNzLCBlbGVjdHJpY2FsIGh1bSwgYW5kIGludGVyZmVyZW5jZVxuICAgICAqL1xuICAgIHN0YXJ0QW1iaWVudFN0YXRpYygpIHtcbiAgICAgICAgaWYgKCF0aGlzLmF1ZGlvQ29udGV4dCB8fCAhdGhpcy5lbmFibGVkIHx8IHRoaXMuYW1iaWVudE5vaXNlU291cmNlKSByZXR1cm47XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICh0aGlzLmF1ZGlvQ29udGV4dC5zdGF0ZSA9PT0gJ3N1c3BlbmRlZCcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvQ29udGV4dC5yZXN1bWUoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gPT09IExBWUVSIDE6IEhpZ2gtRnJlcXVlbmN5IFRhcGUgSGlzcyA9PT1cbiAgICAgICAgICAgIGNvbnN0IGJ1ZmZlclNpemUgPSB0aGlzLmF1ZGlvQ29udGV4dC5zYW1wbGVSYXRlICogMzsgLy8gMy1zZWNvbmQgYnVmZmVyIGZvciB2YXJpYXRpb25cbiAgICAgICAgICAgIGNvbnN0IG5vaXNlQnVmZmVyID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlQnVmZmVyKDIsIGJ1ZmZlclNpemUsIHRoaXMuYXVkaW9Db250ZXh0LnNhbXBsZVJhdGUpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBHZW5lcmF0ZSBzdGVyZW8gcGluayBub2lzZSB3aXRoIHNsaWdodCBjaGFubmVsIGRpZmZlcmVuY2VzXG4gICAgICAgICAgICBmb3IgKGxldCBjaGFubmVsID0gMDsgY2hhbm5lbCA8IDI7IGNoYW5uZWwrKykge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5vaXNlRGF0YSA9IG5vaXNlQnVmZmVyLmdldENoYW5uZWxEYXRhKGNoYW5uZWwpO1xuICAgICAgICAgICAgICAgIGxldCBiMCA9IDAsIGIxID0gMCwgYjIgPSAwLCBiMyA9IDAsIGI0ID0gMCwgYjUgPSAwLCBiNiA9IDA7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBidWZmZXJTaXplOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgd2hpdGUgPSBNYXRoLnJhbmRvbSgpICogMiAtIDE7XG4gICAgICAgICAgICAgICAgICAgIC8vIFBpbmsgbm9pc2UgZmlsdGVyIGNhc2NhZGVcbiAgICAgICAgICAgICAgICAgICAgYjAgPSAwLjk5ODg2ICogYjAgKyB3aGl0ZSAqIDAuMDU1NTE3OTtcbiAgICAgICAgICAgICAgICAgICAgYjEgPSAwLjk5MzMyICogYjEgKyB3aGl0ZSAqIDAuMDc1MDc1OTtcbiAgICAgICAgICAgICAgICAgICAgYjIgPSAwLjk2OTAwICogYjIgKyB3aGl0ZSAqIDAuMTUzODUyMDtcbiAgICAgICAgICAgICAgICAgICAgYjMgPSAwLjg2NjUwICogYjMgKyB3aGl0ZSAqIDAuMzEwNDg1NjtcbiAgICAgICAgICAgICAgICAgICAgYjQgPSAwLjU1MDAwICogYjQgKyB3aGl0ZSAqIDAuNTMyOTUyMjtcbiAgICAgICAgICAgICAgICAgICAgYjUgPSAtMC43NjE2ICogYjUgLSB3aGl0ZSAqIDAuMDE2ODk4MDtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIC8vIEFkZCBvY2Nhc2lvbmFsIGNyYWNrbGVzIGZvciB0YXBlIGltcGVyZmVjdGlvbnNcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY3JhY2tsZSA9IChNYXRoLnJhbmRvbSgpID4gMC45OTgpID8gKE1hdGgucmFuZG9tKCkgKiAwLjMpIDogMDtcbiAgICAgICAgICAgICAgICAgICAgbm9pc2VEYXRhW2ldID0gKChiMCArIGIxICsgYjIgKyBiMyArIGI0ICsgYjUgKyBiNiArIHdoaXRlICogMC41MzYyKSAqIDAuMTEpICsgY3JhY2tsZTtcbiAgICAgICAgICAgICAgICAgICAgYjYgPSB3aGl0ZSAqIDAuMTE1OTI2O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gQ3JlYXRlIGJ1ZmZlciBzb3VyY2UgZm9yIHRhcGUgaGlzc1xuICAgICAgICAgICAgdGhpcy5hbWJpZW50Tm9pc2VTb3VyY2UgPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVCdWZmZXJTb3VyY2UoKTtcbiAgICAgICAgICAgIHRoaXMuYW1iaWVudE5vaXNlU291cmNlLmJ1ZmZlciA9IG5vaXNlQnVmZmVyO1xuICAgICAgICAgICAgdGhpcy5hbWJpZW50Tm9pc2VTb3VyY2UubG9vcCA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLmFtYmllbnROb2lzZVNvdXJjZS5wbGF5YmFja1JhdGUudmFsdWUgPSAwLjk4ICsgTWF0aC5yYW5kb20oKSAqIDAuMDQ7IC8vIFNsaWdodCBzcGVlZCB2YXJpYXRpb25cblxuICAgICAgICAgICAgLy8gSGlnaC1wYXNzIGZpbHRlciBmb3IgdGFwZSBoaXNzIGNoYXJhY3RlciAoMi02a0h6IHJhbmdlKVxuICAgICAgICAgICAgY29uc3Qgbm9pc2VGaWx0ZXIgPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVCaXF1YWRGaWx0ZXIoKTtcbiAgICAgICAgICAgIG5vaXNlRmlsdGVyLnR5cGUgPSAnaGlnaHBhc3MnO1xuICAgICAgICAgICAgbm9pc2VGaWx0ZXIuZnJlcXVlbmN5LnZhbHVlID0gMjgwMDtcbiAgICAgICAgICAgIG5vaXNlRmlsdGVyLlEudmFsdWUgPSAwLjc7XG5cbiAgICAgICAgICAgIC8vIEdhaW4gZm9yIHRhcGUgaGlzc1xuICAgICAgICAgICAgdGhpcy5hbWJpZW50Tm9pc2VHYWluID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlR2FpbigpO1xuICAgICAgICAgICAgdGhpcy5hbWJpZW50Tm9pc2VHYWluLmdhaW4udmFsdWUgPSB0aGlzLnZvbHVtZSAqIDAuMDY7IC8vIFNsaWdodGx5IG1vcmUgYXVkaWJsZVxuXG4gICAgICAgICAgICAvLyBDb25uZWN0IHRhcGUgaGlzcyBjaGFpblxuICAgICAgICAgICAgdGhpcy5hbWJpZW50Tm9pc2VTb3VyY2UuY29ubmVjdChub2lzZUZpbHRlcik7XG4gICAgICAgICAgICBub2lzZUZpbHRlci5jb25uZWN0KHRoaXMuYW1iaWVudE5vaXNlR2Fpbik7XG4gICAgICAgICAgICB0aGlzLmFtYmllbnROb2lzZUdhaW4uY29ubmVjdCh0aGlzLmF1ZGlvQ29udGV4dC5kZXN0aW5hdGlvbik7XG5cbiAgICAgICAgICAgIC8vID09PSBMQVlFUiAyOiBEZWVwIEVsZWN0cmljYWwgSHVtICg1MEh6ICsgaGFybW9uaWNzKSA9PT1cbiAgICAgICAgICAgIHRoaXMuYW1iaWVudExvd0h1bU9zYyA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZU9zY2lsbGF0b3IoKTtcbiAgICAgICAgICAgIHRoaXMuYW1iaWVudExvd0h1bUdhaW4gPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVHYWluKCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHRoaXMuYW1iaWVudExvd0h1bU9zYy50eXBlID0gJ3Nhd3Rvb3RoJztcbiAgICAgICAgICAgIHRoaXMuYW1iaWVudExvd0h1bU9zYy5mcmVxdWVuY3kudmFsdWUgPSA1MDsgLy8gTWFpbnMgaHVtXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIFZlcnkgc3VidGxlIGxvdy1mcmVxdWVuY3kgcnVtYmxlXG4gICAgICAgICAgICB0aGlzLmFtYmllbnRMb3dIdW1HYWluLmdhaW4udmFsdWUgPSB0aGlzLnZvbHVtZSAqIDAuMDM7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIEFkZCBzbGlnaHQgZnJlcXVlbmN5IG1vZHVsYXRpb24gZm9yIHJlYWxpc21cbiAgICAgICAgICAgIGNvbnN0IGh1bUxGTyA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZU9zY2lsbGF0b3IoKTtcbiAgICAgICAgICAgIGNvbnN0IGh1bUxGT0dhaW4gPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVHYWluKCk7XG4gICAgICAgICAgICBodW1MRk8udHlwZSA9ICdzaW5lJztcbiAgICAgICAgICAgIGh1bUxGTy5mcmVxdWVuY3kudmFsdWUgPSAwLjE1OyAvLyBTbG93IG9zY2lsbGF0aW9uXG4gICAgICAgICAgICBodW1MRk9HYWluLmdhaW4udmFsdWUgPSAwLjM7IC8vIFN1YnRsZSBmcmVxdWVuY3kgdmFyaWF0aW9uXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGh1bUxGTy5jb25uZWN0KGh1bUxGT0dhaW4pO1xuICAgICAgICAgICAgaHVtTEZPR2Fpbi5jb25uZWN0KHRoaXMuYW1iaWVudExvd0h1bU9zYy5mcmVxdWVuY3kpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICB0aGlzLmFtYmllbnRMb3dIdW1Pc2MuY29ubmVjdCh0aGlzLmFtYmllbnRMb3dIdW1HYWluKTtcbiAgICAgICAgICAgIHRoaXMuYW1iaWVudExvd0h1bUdhaW4uY29ubmVjdCh0aGlzLmF1ZGlvQ29udGV4dC5kZXN0aW5hdGlvbik7XG5cbiAgICAgICAgICAgIC8vID09PSBMQVlFUiAzOiBNaWQtUmFuZ2UgRWxlY3RyaWNhbCBJbnRlcmZlcmVuY2UgPT09XG4gICAgICAgICAgICB0aGlzLmFtYmllbnRFbGVjdHJpY09zYyA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZU9zY2lsbGF0b3IoKTtcbiAgICAgICAgICAgIHRoaXMuYW1iaWVudEVsZWN0cmljR2FpbiA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZUdhaW4oKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gQ3JlYXRlIHdhcmJsaW5nIGludGVyZmVyZW5jZSB0b25lXG4gICAgICAgICAgICB0aGlzLmFtYmllbnRFbGVjdHJpY09zYy50eXBlID0gJ3RyaWFuZ2xlJztcbiAgICAgICAgICAgIHRoaXMuYW1iaWVudEVsZWN0cmljT3NjLmZyZXF1ZW5jeS52YWx1ZSA9IDEyMDsgLy8gSGFybW9uaWMgb2YgNjBIeiAoVVMgcG93ZXIpXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIE1vZHVsYXRlIGZvciBpbnRlcmZlcmVuY2UgZWZmZWN0XG4gICAgICAgICAgICBjb25zdCBlbGVjdHJpY0xGTyA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZU9zY2lsbGF0b3IoKTtcbiAgICAgICAgICAgIGNvbnN0IGVsZWN0cmljTEZPR2FpbiA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZUdhaW4oKTtcbiAgICAgICAgICAgIGVsZWN0cmljTEZPLnR5cGUgPSAnc2luZSc7XG4gICAgICAgICAgICBlbGVjdHJpY0xGTy5mcmVxdWVuY3kudmFsdWUgPSAwLjA3OyAvLyBWZXJ5IHNsb3cgd2FyYmxlXG4gICAgICAgICAgICBlbGVjdHJpY0xGT0dhaW4uZ2Fpbi52YWx1ZSA9IDg7IC8vIE5vdGljZWFibGUgZnJlcXVlbmN5IHZhcmlhdGlvblxuICAgICAgICAgICAgXG4gICAgICAgICAgICBlbGVjdHJpY0xGTy5jb25uZWN0KGVsZWN0cmljTEZPR2Fpbik7XG4gICAgICAgICAgICBlbGVjdHJpY0xGT0dhaW4uY29ubmVjdCh0aGlzLmFtYmllbnRFbGVjdHJpY09zYy5mcmVxdWVuY3kpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBCYW5kcGFzcyBmaWx0ZXIgZm9yIHRoYXQgXCJvbGQgZmx1b3Jlc2NlbnQgbGlnaHRcIiBzb3VuZFxuICAgICAgICAgICAgY29uc3QgZWxlY3RyaWNGaWx0ZXIgPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVCaXF1YWRGaWx0ZXIoKTtcbiAgICAgICAgICAgIGVsZWN0cmljRmlsdGVyLnR5cGUgPSAnYmFuZHBhc3MnO1xuICAgICAgICAgICAgZWxlY3RyaWNGaWx0ZXIuZnJlcXVlbmN5LnZhbHVlID0gMTgwO1xuICAgICAgICAgICAgZWxlY3RyaWNGaWx0ZXIuUS52YWx1ZSA9IDM7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHRoaXMuYW1iaWVudEVsZWN0cmljR2Fpbi5nYWluLnZhbHVlID0gdGhpcy52b2x1bWUgKiAwLjAyNTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdGhpcy5hbWJpZW50RWxlY3RyaWNPc2MuY29ubmVjdChlbGVjdHJpY0ZpbHRlcik7XG4gICAgICAgICAgICBlbGVjdHJpY0ZpbHRlci5jb25uZWN0KHRoaXMuYW1iaWVudEVsZWN0cmljR2Fpbik7XG4gICAgICAgICAgICB0aGlzLmFtYmllbnRFbGVjdHJpY0dhaW4uY29ubmVjdCh0aGlzLmF1ZGlvQ29udGV4dC5kZXN0aW5hdGlvbik7XG5cbiAgICAgICAgICAgIC8vID09PSBMQVlFUiA0OiBSYW5kb20gQ2xpY2tzIGFuZCBQb3BzID09PVxuICAgICAgICAgICAgLy8gU2ltdWxhdGUgcmVsYXkgc3dpdGNoZXMgYW5kIHRhcGUgYXJ0aWZhY3RzXG4gICAgICAgICAgICBjb25zdCBzY2hlZHVsZVJhbmRvbUNsaWNrID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghdGhpcy5hbWJpZW50Tm9pc2VTb3VyY2UpIHJldHVybjsgLy8gU3RvcCBpZiBhbWJpZW50IHN0b3BwZWRcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBjb25zdCBkZWxheSA9IDMwMDAgKyBNYXRoLnJhbmRvbSgpICogNzAwMDsgLy8gUmFuZG9tIDMtMTAgc2Vjb25kc1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5hdWRpb0NvbnRleHQgJiYgdGhpcy5lbmFibGVkICYmIHRoaXMuYW1iaWVudE5vaXNlU291cmNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBHZW5lcmF0ZSBxdWljayBwb3AvY2xpY2tcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNsaWNrT3NjID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlT3NjaWxsYXRvcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY2xpY2tHYWluID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlR2FpbigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY2xpY2tGaWx0ZXIgPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVCaXF1YWRGaWx0ZXIoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2tGaWx0ZXIudHlwZSA9ICdiYW5kcGFzcyc7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGlja0ZpbHRlci5mcmVxdWVuY3kudmFsdWUgPSA2MDAgKyBNYXRoLnJhbmRvbSgpICogODAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2tGaWx0ZXIuUS52YWx1ZSA9IDg7XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrT3NjLnR5cGUgPSAnc3F1YXJlJztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrT3NjLmZyZXF1ZW5jeS52YWx1ZSA9IDEwMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgbm93ID0gdGhpcy5hdWRpb0NvbnRleHQuY3VycmVudFRpbWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGlja0dhaW4uZ2Fpbi5zZXRWYWx1ZUF0VGltZSh0aGlzLnZvbHVtZSAqICgwLjA4ICsgTWF0aC5yYW5kb20oKSAqIDAuMSksIG5vdyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGlja0dhaW4uZ2Fpbi5leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lKDAuMDAxLCBub3cgKyAwLjAyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2tPc2MuY29ubmVjdChjbGlja0ZpbHRlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGlja0ZpbHRlci5jb25uZWN0KGNsaWNrR2Fpbik7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGlja0dhaW4uY29ubmVjdCh0aGlzLmF1ZGlvQ29udGV4dC5kZXN0aW5hdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrT3NjLnN0YXJ0KG5vdyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGlja09zYy5zdG9wKG5vdyArIDAuMDIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHNjaGVkdWxlUmFuZG9tQ2xpY2soKTsgLy8gU2NoZWR1bGUgbmV4dCBjbGlja1xuICAgICAgICAgICAgICAgIH0sIGRlbGF5KTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIC8vIFN0YXJ0IGFsbCBvc2NpbGxhdG9ycyBhbmQgc2NoZWR1bGUgY2xpY2tzXG4gICAgICAgICAgICB0aGlzLmFtYmllbnROb2lzZVNvdXJjZS5zdGFydCgwKTtcbiAgICAgICAgICAgIHRoaXMuYW1iaWVudExvd0h1bU9zYy5zdGFydCgwKTtcbiAgICAgICAgICAgIGh1bUxGTy5zdGFydCgwKTtcbiAgICAgICAgICAgIHRoaXMuYW1iaWVudEVsZWN0cmljT3NjLnN0YXJ0KDApO1xuICAgICAgICAgICAgZWxlY3RyaWNMRk8uc3RhcnQoMCk7XG4gICAgICAgICAgICBzY2hlZHVsZVJhbmRvbUNsaWNrKCk7XG5cbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignRmFpbGVkIHRvIHN0YXJ0IGFtYmllbnQgc3RhdGljOicsIGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFN0b3AgYW1iaWVudCBzdGF0aWMgYW5kIGFsbCBsYXllcnNcbiAgICAgKi9cbiAgICBzdG9wQW1iaWVudFN0YXRpYygpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFN0b3AgdGFwZSBoaXNzXG4gICAgICAgICAgICBpZiAodGhpcy5hbWJpZW50Tm9pc2VTb3VyY2UpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFtYmllbnROb2lzZVNvdXJjZS5zdG9wKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5hbWJpZW50Tm9pc2VTb3VyY2UuZGlzY29ubmVjdCgpO1xuICAgICAgICAgICAgICAgIHRoaXMuYW1iaWVudE5vaXNlU291cmNlID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLmFtYmllbnROb2lzZUdhaW4pIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFtYmllbnROb2lzZUdhaW4uZGlzY29ubmVjdCgpO1xuICAgICAgICAgICAgICAgIHRoaXMuYW1iaWVudE5vaXNlR2FpbiA9IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIFN0b3AgbG93IGh1bVxuICAgICAgICAgICAgaWYgKHRoaXMuYW1iaWVudExvd0h1bU9zYykge1xuICAgICAgICAgICAgICAgIHRoaXMuYW1iaWVudExvd0h1bU9zYy5zdG9wKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5hbWJpZW50TG93SHVtT3NjLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmFtYmllbnRMb3dIdW1Pc2MgPSBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuYW1iaWVudExvd0h1bUdhaW4pIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFtYmllbnRMb3dIdW1HYWluLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmFtYmllbnRMb3dIdW1HYWluID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gU3RvcCBlbGVjdHJpY2FsIGludGVyZmVyZW5jZVxuICAgICAgICAgICAgaWYgKHRoaXMuYW1iaWVudEVsZWN0cmljT3NjKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hbWJpZW50RWxlY3RyaWNPc2Muc3RvcCgpO1xuICAgICAgICAgICAgICAgIHRoaXMuYW1iaWVudEVsZWN0cmljT3NjLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmFtYmllbnRFbGVjdHJpY09zYyA9IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5hbWJpZW50RWxlY3RyaWNHYWluKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hbWJpZW50RWxlY3RyaWNHYWluLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmFtYmllbnRFbGVjdHJpY0dhaW4gPSBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdGYWlsZWQgdG8gc3RvcCBhbWJpZW50IHN0YXRpYzonLCBlcnJvcik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBFbmFibGUvZGlzYWJsZSBzb3VuZCBlZmZlY3RzXG4gICAgICovXG4gICAgdG9nZ2xlKCkge1xuICAgICAgICB0aGlzLmVuYWJsZWQgPSAhdGhpcy5lbmFibGVkO1xuICAgICAgICB0aGlzLnNhdmVQcmVmZXJlbmNlKCk7XG4gICAgICAgIFxuICAgICAgICAvLyBTdG9wIGFtYmllbnQgc3RhdGljIGlmIHNvdW5kcyBhcmUgZGlzYWJsZWRcbiAgICAgICAgaWYgKCF0aGlzLmVuYWJsZWQpIHtcbiAgICAgICAgICAgIHRoaXMuc3RvcEFtYmllbnRTdGF0aWMoKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIHRoaXMuZW5hYmxlZDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZXQgdm9sdW1lICgwLjAgdG8gMS4wKVxuICAgICAqL1xuICAgIHNldFZvbHVtZShsZXZlbCkge1xuICAgICAgICB0aGlzLnZvbHVtZSA9IE1hdGgubWF4KDAsIE1hdGgubWluKDEsIGxldmVsKSk7XG4gICAgICAgIHRoaXMuc2F2ZVByZWZlcmVuY2UoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBMb2FkIHNvdW5kIHByZWZlcmVuY2UgZnJvbSBsb2NhbFN0b3JhZ2VcbiAgICAgKi9cbiAgICBsb2FkUHJlZmVyZW5jZSgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHNhdmVkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rlcm1pbmFsX3NvdW5kX2VuYWJsZWQnKTtcbiAgICAgICAgICAgIHJldHVybiBzYXZlZCAhPT0gbnVsbCA/IHNhdmVkID09PSAndHJ1ZScgOiB0cnVlOyAvLyBEZWZhdWx0IGVuYWJsZWRcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTYXZlIHNvdW5kIHByZWZlcmVuY2UgdG8gbG9jYWxTdG9yYWdlXG4gICAgICovXG4gICAgc2F2ZVByZWZlcmVuY2UoKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndGVybWluYWxfc291bmRfZW5hYmxlZCcsIHRoaXMuZW5hYmxlZC50b1N0cmluZygpKTtcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd0ZXJtaW5hbF9zb3VuZF92b2x1bWUnLCB0aGlzLnZvbHVtZS50b1N0cmluZygpKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdGYWlsZWQgdG8gc2F2ZSBzb3VuZCBwcmVmZXJlbmNlczonLCBlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENoZWNrIGlmIHNvdW5kcyBhcmUgYXZhaWxhYmxlXG4gICAgICovXG4gICAgaXNBdmFpbGFibGUoKSB7XG4gICAgICAgIHJldHVybiB0eXBlb2YgQXVkaW8gIT09ICd1bmRlZmluZWQnO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgU291bmRTZXJ2aWNlO1xuIl0sIm5hbWVzIjpbIlNvdW5kU2VydmljZSIsIl9jbGFzc0NhbGxDaGVjayIsInNvdW5kcyIsImVuYWJsZWQiLCJsb2FkUHJlZmVyZW5jZSIsInZvbHVtZSIsImF1ZGlvQ29udGV4dCIsImFtYmllbnROb2lzZVNvdXJjZSIsImFtYmllbnROb2lzZUdhaW4iLCJhbWJpZW50TG93SHVtT3NjIiwiYW1iaWVudExvd0h1bUdhaW4iLCJhbWJpZW50RWxlY3RyaWNPc2MiLCJhbWJpZW50RWxlY3RyaWNHYWluIiwiaW5pdGlhbGl6ZVNvdW5kcyIsImluaXRpYWxpemVBdWRpb0NvbnRleHQiLCJfY3JlYXRlQ2xhc3MiLCJrZXkiLCJ2YWx1ZSIsIkF1ZGlvQ29udGV4dCIsIndpbmRvdyIsIndlYmtpdEF1ZGlvQ29udGV4dCIsImUiLCJjb25zb2xlIiwid2FybiIsImdlbmVyYXRlQmVlcCIsImZyZXF1ZW5jeSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsImR1cmF0aW9uIiwidHlwZSIsInN0YXRlIiwicmVzdW1lIiwib3NjaWxsYXRvciIsImNyZWF0ZU9zY2lsbGF0b3IiLCJnYWluTm9kZSIsImNyZWF0ZUdhaW4iLCJjb25uZWN0IiwiZGVzdGluYXRpb24iLCJub3ciLCJjdXJyZW50VGltZSIsImdhaW4iLCJzZXRWYWx1ZUF0VGltZSIsImxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lIiwiZXhwb25lbnRpYWxSYW1wVG9WYWx1ZUF0VGltZSIsInN0YXJ0Iiwic3RvcCIsImVycm9yIiwiZ2VuZXJhdGVBbGllbkJlZXAiLCJvc2NpbGxhdG9yMSIsIm9zY2lsbGF0b3IyIiwiZ2VuZXJhdGVSZXRyb0JlZXAiLCJnZW5lcmF0ZUFsaWVuQm9vdFNvdW5kIiwiX3RoaXMiLCJodW0iLCJodW1HYWluIiwiaHVtRmlsdGVyIiwiY3JlYXRlQmlxdWFkRmlsdGVyIiwiaHVtRGlzdG9ydGlvbiIsImNyZWF0ZVdhdmVTaGFwZXIiLCJjdXJ2ZSIsIkZsb2F0MzJBcnJheSIsImkiLCJ4IiwiTWF0aCIsInRhbmgiLCJvdmVyc2FtcGxlIiwiUSIsInNlcnZvIiwic2Vydm9HYWluIiwic2Vydm9GaWx0ZXIiLCJkNU1haW4iLCJkNVN1YiIsImQ1T3ZlcnRvbmUiLCJkNUdhaW4iLCJkNVN1YkdhaW4iLCJkNU92ZXJ0b25lR2FpbiIsImQ1RmlsdGVyIiwiZDVEaXN0b3J0aW9uIiwiZDVDdXJ2ZSIsIl9pIiwiX3giLCJzZXRUaW1lb3V0IiwiZjVNYWluIiwiZjVTdWIiLCJmNUltcGFjdCIsImY1R2FpbiIsImY1U3ViR2FpbiIsImY1SW1wYWN0R2FpbiIsImY1RmlsdGVyIiwiZjVEaXN0b3J0aW9uIiwiZjVDdXJ2ZSIsIl9pMiIsIl94MiIsInQiLCJnZW5lcmF0ZVJldHJvQm9vdFNvdW5kIiwiZ2VuZXJhdGVEZWZhdWx0Qm9vdFNvdW5kIiwiX3RoaXMyIiwiZm9yRWFjaCIsImZyZXEiLCJpbmRleCIsIm9zYyIsImRlbGF5IiwiZ2VuZXJhdGVBbGllbktleXByZXNzIiwiaW1wYWN0T3NjIiwiaW1wYWN0R2FpbiIsImltcGFjdEZpbHRlciIsInJhbmRvbSIsInN3aXRjaE9zYyIsInN3aXRjaEdhaW4iLCJzcHJpbmdPc2MiLCJzcHJpbmdHYWluIiwic3ByaW5nRmlsdGVyIiwic3RhcnRBbGllbkNhdExpbmVUb25lIiwiZmlsdGVyIiwic3RvcEFsaWVuQ2F0TGluZVRvbmUiLCJub2RlcyIsImNhbmNlbFNjaGVkdWxlZFZhbHVlcyIsInBsYXlBbGllbkNhdEE0IiwicGxheUFsaWVuQ2F0RGI1IiwicGxheUFsaWVuQ2F0TGluZUJyZWFrIiwiZ2VuZXJhdGVSZXRyb0tleXByZXNzIiwiZ2VuZXJhdGVEZWZhdWx0S2V5cHJlc3MiLCJnZW5lcmF0ZVRhYlNvdW5kIiwidGhlbWUiLCJpbXBhY3QiLCJzbGlkZSIsInNsaWRlR2FpbiIsInNsaWRlRmlsdGVyIiwiZ2VuZXJhdGVFbnRlclNvdW5kIiwibG93T3NjIiwibG93R2FpbiIsImhpZ2hPc2MiLCJoaWdoR2FpbiIsImdlbmVyYXRlU3VjY2Vzc1NvdW5kIiwiX3RoaXMzIiwiYWxpZW5Cb290IiwidXJsIiwiZGVzY3JpcHRpb24iLCJhbGllbktleXByZXNzIiwiYWxpZW5CZWVwIiwiYWxpZW5FcnJvciIsInRlcm1pbmFsQm9vdCIsImtleXByZXNzIiwiYmVlcCIsInJldHJvQm9vdCIsInJldHJvS2V5cHJlc3MiLCJwbGF5Iiwic291bmROYW1lIiwiX3RoaXM0Iiwib3B0aW9ucyIsInNvdW5kIiwiY29uY2F0IiwiYXVkaW8iLCJBdWRpbyIsImVyciIsImRlYnVnIiwicGxheUZhbGxiYWNrU291bmQiLCJpbmNsdWRlcyIsInBsYXlCb290U291bmQiLCJwbGF5S2V5cHJlc3NTb3VuZCIsInBsYXlCZWVwIiwicGxheUVycm9yIiwic3RhcnRBbWJpZW50U3RhdGljIiwiX3RoaXM1IiwiYnVmZmVyU2l6ZSIsInNhbXBsZVJhdGUiLCJub2lzZUJ1ZmZlciIsImNyZWF0ZUJ1ZmZlciIsImNoYW5uZWwiLCJub2lzZURhdGEiLCJnZXRDaGFubmVsRGF0YSIsImIwIiwiYjEiLCJiMiIsImIzIiwiYjQiLCJiNSIsImI2Iiwid2hpdGUiLCJjcmFja2xlIiwiY3JlYXRlQnVmZmVyU291cmNlIiwiYnVmZmVyIiwibG9vcCIsInBsYXliYWNrUmF0ZSIsIm5vaXNlRmlsdGVyIiwiaHVtTEZPIiwiaHVtTEZPR2FpbiIsImVsZWN0cmljTEZPIiwiZWxlY3RyaWNMRk9HYWluIiwiZWxlY3RyaWNGaWx0ZXIiLCJzY2hlZHVsZVJhbmRvbUNsaWNrIiwiY2xpY2tPc2MiLCJjbGlja0dhaW4iLCJjbGlja0ZpbHRlciIsInN0b3BBbWJpZW50U3RhdGljIiwiZGlzY29ubmVjdCIsInRvZ2dsZSIsInNhdmVQcmVmZXJlbmNlIiwic2V0Vm9sdW1lIiwibGV2ZWwiLCJtYXgiLCJtaW4iLCJzYXZlZCIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJzZXRJdGVtIiwidG9TdHJpbmciLCJpc0F2YWlsYWJsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///8823\n");

/***/ }),

/***/ 3985:
/*!***********************************************!*\
  !*** ./resources/js/services/ThemeService.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _components_EventBus_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/EventBus.js */ 947);\n\n\n\n\n\n\n/**\n * ThemeService - Global theme management system\n * Handles light/dark/auto theme switching with time-based intelligence\n * Coordinates with wallpaper system and updates all UI components\n */\nvar ThemeService = /*#__PURE__*/function () {\n  function ThemeService() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, ThemeService);\n    // Theme state\n    this.currentTheme = 'auto'; // 'light', 'dark', 'auto'\n    this.effectiveTheme = 'light'; // Actual theme being displayed\n    this.systemPreference = this.detectSystemTheme();\n    this.preferences = null;\n\n    // Time-based auto theme\n    this.autoThemeInterval = null;\n    this.lastAutoCheck = null;\n\n    // Bind methods\n    this.handleSystemThemeChange = this.handleSystemThemeChange.bind(this);\n    this.init();\n  }\n\n  /**\n   * Initialize theme service\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(ThemeService, [{\n    key: \"init\",\n    value: function () {\n      var _init = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee() {\n        var _this$preferences, savedTheme;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return this.loadPreferences();\n            case 3:\n              // Set initial theme\n              savedTheme = this.getSavedTheme();\n              this.currentTheme = savedTheme || ((_this$preferences = this.preferences) === null || _this$preferences === void 0 || (_this$preferences = _this$preferences.appearance) === null || _this$preferences === void 0 ? void 0 : _this$preferences.theme) || 'auto';\n\n              // Apply initial theme\n              this.applyTheme(this.currentTheme);\n\n              // Listen for system theme changes\n              this.watchSystemTheme();\n\n              // Start auto theme scheduler if needed\n              if (this.currentTheme === 'auto') {\n                this.startAutoThemeScheduler();\n              }\n\n              // Listen for preference changes\n              _components_EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].on('preferences:changed', this.handlePreferencesChanged.bind(this));\n              console.log('‚úÖ ThemeService initialized:', {\n                currentTheme: this.currentTheme,\n                effectiveTheme: this.effectiveTheme,\n                systemPreference: this.systemPreference\n              });\n\n              // Emit ready event\n              _components_EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('theme:ready', {\n                currentTheme: this.currentTheme,\n                effectiveTheme: this.effectiveTheme\n              });\n              _context.next = 16;\n              break;\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('ThemeService initialization failed:', _context.t0);\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 13]]);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n    /**\n     * Load user preferences\n     */\n  }, {\n    key: \"loadPreferences\",\n    value: function () {\n      var _loadPreferences = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee2() {\n        var response, data;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch('/api/preferences');\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return response.json();\n            case 6:\n              data = _context2.sent;\n              if (data.success) {\n                this.preferences = data.data;\n              }\n              _context2.next = 13;\n              break;\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.warn('Failed to load theme preferences:', _context2.t0);\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 10]]);\n      }));\n      function loadPreferences() {\n        return _loadPreferences.apply(this, arguments);\n      }\n      return loadPreferences;\n    }()\n    /**\n     * Get saved theme from localStorage\n     */\n  }, {\n    key: \"getSavedTheme\",\n    value: function getSavedTheme() {\n      try {\n        return localStorage.getItem('app_theme');\n      } catch (error) {\n        return null;\n      }\n    }\n\n    /**\n     * Save theme to localStorage\n     */\n  }, {\n    key: \"saveTheme\",\n    value: function saveTheme(theme) {\n      try {\n        localStorage.setItem('app_theme', theme);\n      } catch (error) {\n        console.warn('Failed to save theme:', error);\n      }\n    }\n\n    /**\n     * Set theme manually\n     * @param {string} theme - 'light', 'dark', or 'auto'\n     */\n  }, {\n    key: \"setTheme\",\n    value: function setTheme(theme) {\n      if (!['light', 'dark', 'auto'].includes(theme)) {\n        console.warn('Invalid theme:', theme);\n        return;\n      }\n      this.currentTheme = theme;\n      this.saveTheme(theme);\n\n      // Stop auto scheduler if switching away from auto\n      if (theme !== 'auto' && this.autoThemeInterval) {\n        clearInterval(this.autoThemeInterval);\n        this.autoThemeInterval = null;\n      }\n\n      // Start auto scheduler if switching to auto\n      if (theme === 'auto') {\n        this.startAutoThemeScheduler();\n      }\n\n      // Apply theme\n      this.applyTheme(theme);\n      console.log('üé® Theme changed to:', theme);\n    }\n\n    /**\n     * Apply theme to the DOM\n     * @param {string} theme - Theme to apply\n     */\n  }, {\n    key: \"applyTheme\",\n    value: function applyTheme(theme) {\n      // Determine effective theme\n      var effective = theme;\n      if (theme === 'auto') {\n        var _this$preferences2;\n        // Check time-based preference first\n        var hour = new Date().getHours();\n        var isNightTime = hour < 6 || hour >= 18;\n        if ((_this$preferences2 = this.preferences) !== null && _this$preferences2 !== void 0 && (_this$preferences2 = _this$preferences2.desktop) !== null && _this$preferences2 !== void 0 && (_this$preferences2 = _this$preferences2.wallpaper) !== null && _this$preferences2 !== void 0 && _this$preferences2.time_based_switching) {\n          // Use time-based logic: 6 AM - 6 PM = light, 6 PM - 6 AM = dark\n          effective = isNightTime ? 'dark' : 'light';\n        } else {\n          // Fall back to system preference\n          effective = this.systemPreference;\n        }\n      }\n\n      // Store effective theme\n      this.effectiveTheme = effective;\n\n      // Update DOM\n      this.updateDOM(effective);\n\n      // Emit theme changed event\n      _components_EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('theme:changed', {\n        theme: this.currentTheme,\n        effectiveTheme: effective\n      });\n    }\n\n    /**\n     * Update DOM with theme\n     * @param {string} theme - 'light' or 'dark'\n     */\n  }, {\n    key: \"updateDOM\",\n    value: function updateDOM(theme) {\n      var root = document.documentElement;\n\n      // Set data-theme attribute\n      root.setAttribute('data-theme', theme);\n\n      // Update CSS custom properties for smooth transitions\n      root.style.setProperty('--theme-transition', 'all 300ms cubic-bezier(0.4, 0, 0.2, 1)');\n      console.log(\"\\uD83C\\uDFA8 DOM updated to \".concat(theme, \" theme\"));\n    }\n\n    /**\n     * Get current effective theme\n     * @returns {string} 'light' or 'dark'\n     */\n  }, {\n    key: \"getEffectiveTheme\",\n    value: function getEffectiveTheme() {\n      return this.effectiveTheme;\n    }\n\n    /**\n     * Get current theme setting\n     * @returns {string} 'light', 'dark', or 'auto'\n     */\n  }, {\n    key: \"getCurrentTheme\",\n    value: function getCurrentTheme() {\n      return this.currentTheme;\n    }\n\n    /**\n     * Check if dark theme is active\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isDark\",\n    value: function isDark() {\n      return this.effectiveTheme === 'dark';\n    }\n\n    /**\n     * Check if light theme is active\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isLight\",\n    value: function isLight() {\n      return this.effectiveTheme === 'light';\n    }\n\n    /**\n     * Detect system theme preference\n     * @returns {string} 'light' or 'dark'\n     */\n  }, {\n    key: \"detectSystemTheme\",\n    value: function detectSystemTheme() {\n      if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        return 'dark';\n      }\n      return 'light';\n    }\n\n    /**\n     * Watch for system theme changes\n     */\n  }, {\n    key: \"watchSystemTheme\",\n    value: function watchSystemTheme() {\n      if (window.matchMedia) {\n        var mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\n        // Modern browsers\n        if (mediaQuery.addEventListener) {\n          mediaQuery.addEventListener('change', this.handleSystemThemeChange);\n        } else if (mediaQuery.addListener) {\n          // Safari <= 13\n          mediaQuery.addListener(this.handleSystemThemeChange);\n        }\n      }\n    }\n\n    /**\n     * Handle system theme change\n     * @param {MediaQueryListEvent} e\n     */\n  }, {\n    key: \"handleSystemThemeChange\",\n    value: function handleSystemThemeChange(e) {\n      this.systemPreference = e.matches ? 'dark' : 'light';\n      console.log('üåì System theme changed to:', this.systemPreference);\n\n      // Re-apply theme if in auto mode\n      if (this.currentTheme === 'auto') {\n        this.applyTheme('auto');\n      }\n    }\n\n    /**\n     * Start automatic theme scheduler based on time of day\n     */\n  }, {\n    key: \"startAutoThemeScheduler\",\n    value: function startAutoThemeScheduler() {\n      var _this = this;\n      // Clear existing interval\n      if (this.autoThemeInterval) {\n        clearInterval(this.autoThemeInterval);\n      }\n\n      // Check immediately\n      this.applyTheme('auto');\n\n      // Check every 5 minutes\n      this.autoThemeInterval = setInterval(function () {\n        if (_this.currentTheme === 'auto') {\n          var hour = new Date().getHours();\n          var lastHour = _this.lastAutoCheck ? _this.lastAutoCheck.getHours() : -1;\n\n          // Only re-apply if hour changed (to reduce overhead)\n          if (hour !== lastHour) {\n            _this.applyTheme('auto');\n            _this.lastAutoCheck = new Date();\n            console.log('‚è∞ Auto theme check at hour:', hour);\n          }\n        }\n      }, 5 * 60 * 1000); // 5 minutes\n\n      console.log('‚è∞ Auto theme scheduler started');\n    }\n\n    /**\n     * Handle preferences changed event\n     * @param {object} data - Preferences data\n     */\n  }, {\n    key: \"handlePreferencesChanged\",\n    value: function handlePreferencesChanged(data) {\n      if (data && data.appearance && data.appearance.theme) {\n        this.setTheme(data.appearance.theme);\n      }\n    }\n\n    /**\n     * Get theme-appropriate colors\n     * @returns {object} Color palette for current theme\n     */\n  }, {\n    key: \"getThemeColors\",\n    value: function getThemeColors() {\n      var isDark = this.isDark();\n      return {\n        // Window colors\n        windowBg: isDark ? 'rgba(40, 40, 40, 0.95)' : 'rgba(246, 246, 246, 0.95)',\n        windowTitlebar: isDark ? 'linear-gradient(to bottom, rgba(60, 60, 60, 0.9), rgba(50, 50, 50, 0.9))' : 'linear-gradient(to bottom, rgba(255, 255, 255, 0.9), rgba(240, 240, 240, 0.9))',\n        windowBorder: isDark ? 'rgba(255, 255, 255, 0.1)' : 'rgba(255, 255, 255, 0.2)',\n        windowTitleText: isDark ? 'rgba(255, 255, 255, 0.85)' : 'rgba(0, 0, 0, 0.85)',\n        // Dock colors\n        dockBg: isDark ? 'rgba(30, 30, 30, 0.3)' : 'rgba(255, 255, 255, 0.15)',\n        dockBorder: isDark ? 'rgba(0, 0, 0, 0.4)' : 'rgba(255, 255, 255, 0.18)',\n        dockLabel: isDark ? 'rgba(30, 30, 30, 0.9)' : 'rgba(0, 0, 0, 0.8)',\n        dockLabelText: 'white',\n        // Context menu colors\n        contextMenuBg: isDark ? 'rgba(30, 30, 30, 0.95)' : 'rgba(255, 255, 255, 0.9)',\n        contextMenuText: isDark ? '#fff' : '#333',\n        contextMenuHover: isDark ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 122, 255, 0.1)',\n        // Desktop colors\n        iconText: 'white',\n        // Always white for contrast on wallpapers\n        iconTextShadow: isDark ? '0 1px 3px rgba(0, 0, 0, 0.9)' : '0 1px 2px rgba(0, 0, 0, 0.8)',\n        // General colors\n        shadowColor: 'rgba(0, 0, 0, 0.3)',\n        accentColor: '#007AFF'\n      };\n    }\n\n    /**\n     * Destroy theme service\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.autoThemeInterval) {\n        clearInterval(this.autoThemeInterval);\n      }\n      if (window.matchMedia) {\n        var mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n        if (mediaQuery.removeEventListener) {\n          mediaQuery.removeEventListener('change', this.handleSystemThemeChange);\n        } else if (mediaQuery.removeListener) {\n          mediaQuery.removeListener(this.handleSystemThemeChange);\n        }\n      }\n    }\n  }]);\n}(); // Create singleton instance\nvar themeService = new ThemeService();\n\n// Export singleton\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (themeService);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3985\n");

/***/ }),

/***/ 3627:
/*!*******************************!*\
  !*** ./resources/css/app.css ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzYyNy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvY3NzL2FwcC5jc3M/N2IyZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3627\n");

/***/ }),

/***/ 9700:
/*!**************************************************!*\
  !*** ./resources/css/components/preferences.css ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTcwMC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvY3NzL2NvbXBvbmVudHMvcHJlZmVyZW5jZXMuY3NzPzIyYmQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///9700\n");

/***/ }),

/***/ 3865:
/*!***************************************!*\
  !*** ./resources/css/boot-screen.css ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzg2NS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvY3NzL2Jvb3Qtc2NyZWVuLmNzcz84YjkzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3865\n");

/***/ }),

/***/ 7589:
/*!**********************************************!*\
  !*** ./resources/css/components/landing.css ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzU4OS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvY3NzL2NvbXBvbmVudHMvbGFuZGluZy5jc3M/NjQ5YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7589\n");

/***/ }),

/***/ 4633:
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/regeneratorRuntime.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var _typeof = (__webpack_require__(/*! ./typeof.js */ 3738)[\"default\"]);\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4633\n");

/***/ }),

/***/ 3738:
/*!*******************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzczOC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxHQUFHLEVBQUUseUJBQXlCLFNBQVMseUJBQXlCO0FBQ2hFO0FBQ0EsMEJBQTBCLHlCQUF5QixTQUFTLHlCQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3R5cGVvZi5qcz85MjY0Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF90eXBlb2Yobykge1xuICBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7XG5cbiAgcmV0dXJuIChtb2R1bGUuZXhwb3J0cyA9IF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAobykge1xuICAgIHJldHVybiB0eXBlb2YgbztcbiAgfSA6IGZ1bmN0aW9uIChvKSB7XG4gICAgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87XG4gIH0sIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cyksIF90eXBlb2Yobyk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF90eXBlb2YsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3738\n");

/***/ }),

/***/ 4756:
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// TODO(Babel 8): Remove this file.\n\nvar runtime = __webpack_require__(/*! ../helpers/regeneratorRuntime */ 4633)();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDc1Ni5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxjQUFjLG1CQUFPLENBQUMseUNBQStCO0FBQ3JEOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9yZWdlbmVyYXRvci9pbmRleC5qcz83YzNmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRPRE8oQmFiZWwgOCk6IFJlbW92ZSB0aGlzIGZpbGUuXG5cbnZhciBydW50aW1lID0gcmVxdWlyZShcIi4uL2hlbHBlcnMvcmVnZW5lcmF0b3JSdW50aW1lXCIpKCk7XG5tb2R1bGUuZXhwb3J0cyA9IHJ1bnRpbWU7XG5cbi8vIENvcGllZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWdlbmVyYXRvci9ibG9iL21haW4vcGFja2FnZXMvcnVudGltZS9ydW50aW1lLmpzI0w3MzY9XG50cnkge1xuICByZWdlbmVyYXRvclJ1bnRpbWUgPSBydW50aW1lO1xufSBjYXRjaCAoYWNjaWRlbnRhbFN0cmljdE1vZGUpIHtcbiAgaWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSBcIm9iamVjdFwiKSB7XG4gICAgZ2xvYmFsVGhpcy5yZWdlbmVyYXRvclJ1bnRpbWUgPSBydW50aW1lO1xuICB9IGVsc2Uge1xuICAgIEZ1bmN0aW9uKFwiclwiLCBcInJlZ2VuZXJhdG9yUnVudGltZSA9IHJcIikocnVudGltZSk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4756\n");

/***/ }),

/***/ 3145:
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _arrayLikeToArray)\n/* harmony export */ });\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE0NS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBLHlDQUF5QyxTQUFTO0FBQ2xEO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlMaWtlVG9BcnJheS5qcz85MmFjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7XG4gIGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoO1xuICBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIGFycjJbaV0gPSBhcnJbaV07XG4gIHJldHVybiBhcnIyO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3145\n");

/***/ }),

/***/ 6369:
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _arrayWithHoles)\n/* harmony export */ });\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjM2OS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5V2l0aEhvbGVzLmpzPzRlNTAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6369\n");

/***/ }),

/***/ 4243:
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _arrayWithoutHoles)\n/* harmony export */ });\n/* harmony import */ var _arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrayLikeToArray.js */ 3145);\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(arr);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDI0My5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxRDtBQUN0QztBQUNmLGlDQUFpQyxnRUFBZ0I7QUFDakQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlXaXRob3V0SG9sZXMuanM/N2ZlZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXJyYXlMaWtlVG9BcnJheSBmcm9tIFwiLi9hcnJheUxpa2VUb0FycmF5LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KGFycik7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4243\n");

/***/ }),

/***/ 467:
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _asyncToGenerator)\n/* harmony export */ });\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDY3LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcz8yMjBmIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHtcbiAgdHJ5IHtcbiAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7XG4gICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZWplY3QoZXJyb3IpO1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoaW5mby5kb25lKSB7XG4gICAgcmVzb2x2ZSh2YWx1ZSk7XG4gIH0gZWxzZSB7XG4gICAgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpO1xuICB9XG59XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpcyxcbiAgICAgIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTtcbiAgICAgIGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJuZXh0XCIsIHZhbHVlKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIF90aHJvdyhlcnIpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcInRocm93XCIsIGVycik7XG4gICAgICB9XG4gICAgICBfbmV4dCh1bmRlZmluZWQpO1xuICAgIH0pO1xuICB9O1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///467\n");

/***/ }),

/***/ 3029:
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _classCallCheck)\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzAyOS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjay5qcz9kMmQ1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3029\n");

/***/ }),

/***/ 2901:
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/createClass.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _createClass)\n/* harmony export */ });\n/* harmony import */ var _toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toPropertyKey.js */ 9922);\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, (0,_toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkwMS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQztBQUMvQztBQUNBLGtCQUFrQixrQkFBa0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsNkRBQWE7QUFDL0M7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcy5qcz85MmZiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0b1Byb3BlcnR5S2V5IGZyb20gXCIuL3RvUHJvcGVydHlLZXkuanNcIjtcbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTtcbiAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIHRvUHJvcGVydHlLZXkoZGVzY3JpcHRvci5rZXkpLCBkZXNjcmlwdG9yKTtcbiAgfVxufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQ29uc3RydWN0b3IsIFwicHJvdG90eXBlXCIsIHtcbiAgICB3cml0YWJsZTogZmFsc2VcbiAgfSk7XG4gIHJldHVybiBDb25zdHJ1Y3Rvcjtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2901\n");

/***/ }),

/***/ 4467:
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _defineProperty)\n/* harmony export */ });\n/* harmony import */ var _toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toPropertyKey.js */ 9922);\n\nfunction _defineProperty(obj, key, value) {\n  key = (0,_toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDQ2Ny5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQztBQUNoQztBQUNmLFFBQVEsNkRBQWE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eS5qcz8zNTBiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0b1Byb3BlcnR5S2V5IGZyb20gXCIuL3RvUHJvcGVydHlLZXkuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAga2V5ID0gdG9Qcm9wZXJ0eUtleShrZXkpO1xuICBpZiAoa2V5IGluIG9iaikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgfVxuICByZXR1cm4gb2JqO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4467\n");

/***/ }),

/***/ 3893:
/*!********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _iterableToArray)\n/* harmony export */ });\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzg5My5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2l0ZXJhYmxlVG9BcnJheS5qcz9lNzE3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikge1xuICBpZiAodHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBpdGVyW1N5bWJvbC5pdGVyYXRvcl0gIT0gbnVsbCB8fCBpdGVyW1wiQEBpdGVyYXRvclwiXSAhPSBudWxsKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3893\n");

/***/ }),

/***/ 6986:
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _iterableToArrayLimit)\n/* harmony export */ });\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjk4Ni5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsWUFBWSxrRUFBa0U7QUFDdEYsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2l0ZXJhYmxlVG9BcnJheUxpbWl0LmpzPzkxYTAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KHIsIGwpIHtcbiAgdmFyIHQgPSBudWxsID09IHIgPyBudWxsIDogXCJ1bmRlZmluZWRcIiAhPSB0eXBlb2YgU3ltYm9sICYmIHJbU3ltYm9sLml0ZXJhdG9yXSB8fCByW1wiQEBpdGVyYXRvclwiXTtcbiAgaWYgKG51bGwgIT0gdCkge1xuICAgIHZhciBlLFxuICAgICAgbixcbiAgICAgIGksXG4gICAgICB1LFxuICAgICAgYSA9IFtdLFxuICAgICAgZiA9ICEwLFxuICAgICAgbyA9ICExO1xuICAgIHRyeSB7XG4gICAgICBpZiAoaSA9ICh0ID0gdC5jYWxsKHIpKS5uZXh0LCAwID09PSBsKSB7XG4gICAgICAgIGlmIChPYmplY3QodCkgIT09IHQpIHJldHVybjtcbiAgICAgICAgZiA9ICExO1xuICAgICAgfSBlbHNlIGZvciAoOyAhKGYgPSAoZSA9IGkuY2FsbCh0KSkuZG9uZSkgJiYgKGEucHVzaChlLnZhbHVlKSwgYS5sZW5ndGggIT09IGwpOyBmID0gITApO1xuICAgIH0gY2F0Y2ggKHIpIHtcbiAgICAgIG8gPSAhMCwgbiA9IHI7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGlmICghZiAmJiBudWxsICE9IHRbXCJyZXR1cm5cIl0gJiYgKHUgPSB0W1wicmV0dXJuXCJdKCksIE9iamVjdCh1KSAhPT0gdSkpIHJldHVybjtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIGlmIChvKSB0aHJvdyBuO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gYTtcbiAgfVxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6986\n");

/***/ }),

/***/ 6562:
/*!********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _nonIterableRest)\n/* harmony export */ });\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjU2Mi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL25vbkl0ZXJhYmxlUmVzdC5qcz8yOTAxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7XG4gIHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6562\n");

/***/ }),

/***/ 519:
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _nonIterableSpread)\n/* harmony export */ });\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTE5LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZTtBQUNmO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vbm9uSXRlcmFibGVTcHJlYWQuanM/NTZlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7XG4gIHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///519\n");

/***/ }),

/***/ 3453:
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _slicedToArray)\n/* harmony export */ });\n/* harmony import */ var _arrayWithHoles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrayWithHoles.js */ 6369);\n/* harmony import */ var _iterableToArrayLimit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterableToArrayLimit.js */ 6986);\n/* harmony import */ var _unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./unsupportedIterableToArray.js */ 7800);\n/* harmony import */ var _nonIterableRest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nonIterableRest.js */ 6562);\n\n\n\n\nfunction _slicedToArray(arr, i) {\n  return (0,_arrayWithHoles_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(arr) || (0,_iterableToArrayLimit_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(arr, i) || (0,_unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(arr, i) || (0,_nonIterableRest_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQ1My5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFpRDtBQUNZO0FBQ1k7QUFDdEI7QUFDcEM7QUFDZixTQUFTLDhEQUFjLFNBQVMsb0VBQW9CLFlBQVksMEVBQTBCLFlBQVksK0RBQWU7QUFDckgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheS5qcz85NjBjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcnJheVdpdGhIb2xlcyBmcm9tIFwiLi9hcnJheVdpdGhIb2xlcy5qc1wiO1xuaW1wb3J0IGl0ZXJhYmxlVG9BcnJheUxpbWl0IGZyb20gXCIuL2l0ZXJhYmxlVG9BcnJheUxpbWl0LmpzXCI7XG5pbXBvcnQgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkgZnJvbSBcIi4vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanNcIjtcbmltcG9ydCBub25JdGVyYWJsZVJlc3QgZnJvbSBcIi4vbm9uSXRlcmFibGVSZXN0LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHtcbiAgcmV0dXJuIGFycmF5V2l0aEhvbGVzKGFycikgfHwgaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIsIGkpIHx8IG5vbkl0ZXJhYmxlUmVzdCgpO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3453\n");

/***/ }),

/***/ 7695:
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/toArray.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _toArray)\n/* harmony export */ });\n/* harmony import */ var _arrayWithHoles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrayWithHoles.js */ 6369);\n/* harmony import */ var _iterableToArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterableToArray.js */ 3893);\n/* harmony import */ var _unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./unsupportedIterableToArray.js */ 7800);\n/* harmony import */ var _nonIterableRest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nonIterableRest.js */ 6562);\n\n\n\n\nfunction _toArray(arr) {\n  return (0,_arrayWithHoles_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(arr) || (0,_iterableToArray_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(arr) || (0,_unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(arr) || (0,_nonIterableRest_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzY5NS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFpRDtBQUNFO0FBQ3NCO0FBQ3RCO0FBQ3BDO0FBQ2YsU0FBUyw4REFBYyxTQUFTLCtEQUFlLFNBQVMsMEVBQTBCLFNBQVMsK0RBQWU7QUFDMUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9BcnJheS5qcz9jMWIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcnJheVdpdGhIb2xlcyBmcm9tIFwiLi9hcnJheVdpdGhIb2xlcy5qc1wiO1xuaW1wb3J0IGl0ZXJhYmxlVG9BcnJheSBmcm9tIFwiLi9pdGVyYWJsZVRvQXJyYXkuanNcIjtcbmltcG9ydCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSBmcm9tIFwiLi91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheS5qc1wiO1xuaW1wb3J0IG5vbkl0ZXJhYmxlUmVzdCBmcm9tIFwiLi9ub25JdGVyYWJsZVJlc3QuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF90b0FycmF5KGFycikge1xuICByZXR1cm4gYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBpdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IG5vbkl0ZXJhYmxlUmVzdCgpO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7695\n");

/***/ }),

/***/ 9394:
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _toConsumableArray)\n/* harmony export */ });\n/* harmony import */ var _arrayWithoutHoles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrayWithoutHoles.js */ 4243);\n/* harmony import */ var _iterableToArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterableToArray.js */ 3893);\n/* harmony import */ var _unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./unsupportedIterableToArray.js */ 7800);\n/* harmony import */ var _nonIterableSpread_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nonIterableSpread.js */ 519);\n\n\n\n\nfunction _toConsumableArray(arr) {\n  return (0,_arrayWithoutHoles_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(arr) || (0,_iterableToArray_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(arr) || (0,_unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(arr) || (0,_nonIterableSpread_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTM5NC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF1RDtBQUNKO0FBQ3NCO0FBQ2xCO0FBQ3hDO0FBQ2YsU0FBUyxpRUFBaUIsU0FBUywrREFBZSxTQUFTLDBFQUEwQixTQUFTLGlFQUFpQjtBQUMvRyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheS5qcz9mMTdlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcnJheVdpdGhvdXRIb2xlcyBmcm9tIFwiLi9hcnJheVdpdGhvdXRIb2xlcy5qc1wiO1xuaW1wb3J0IGl0ZXJhYmxlVG9BcnJheSBmcm9tIFwiLi9pdGVyYWJsZVRvQXJyYXkuanNcIjtcbmltcG9ydCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSBmcm9tIFwiLi91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheS5qc1wiO1xuaW1wb3J0IG5vbkl0ZXJhYmxlU3ByZWFkIGZyb20gXCIuL25vbkl0ZXJhYmxlU3ByZWFkLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7XG4gIHJldHVybiBhcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IGl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFycikgfHwgbm9uSXRlcmFibGVTcHJlYWQoKTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9394\n");

/***/ }),

/***/ 2327:
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/toPrimitive.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toPrimitive)\n/* harmony export */ });\n/* harmony import */ var _typeof_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeof.js */ 2284);\n\nfunction toPrimitive(t, r) {\n  if (\"object\" != (0,_typeof_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != (0,_typeof_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMyNy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrQztBQUNuQjtBQUNmLGtCQUFrQixzREFBTztBQUN6QjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isc0RBQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9QcmltaXRpdmUuanM/YjQ4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX3R5cGVvZiBmcm9tIFwiLi90eXBlb2YuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRvUHJpbWl0aXZlKHQsIHIpIHtcbiAgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZih0KSB8fCAhdCkgcmV0dXJuIHQ7XG4gIHZhciBlID0gdFtTeW1ib2wudG9QcmltaXRpdmVdO1xuICBpZiAodm9pZCAwICE9PSBlKSB7XG4gICAgdmFyIGkgPSBlLmNhbGwodCwgciB8fCBcImRlZmF1bHRcIik7XG4gICAgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpO1xuICB9XG4gIHJldHVybiAoXCJzdHJpbmdcIiA9PT0gciA/IFN0cmluZyA6IE51bWJlcikodCk7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2327\n");

/***/ }),

/***/ 9922:
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toPropertyKey)\n/* harmony export */ });\n/* harmony import */ var _typeof_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeof.js */ 2284);\n/* harmony import */ var _toPrimitive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toPrimitive.js */ 2327);\n\n\nfunction toPropertyKey(t) {\n  var i = (0,_toPrimitive_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(t, \"string\");\n  return \"symbol\" == (0,_typeof_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(i) ? i : i + \"\";\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTkyMi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0M7QUFDUztBQUM1QjtBQUNmLFVBQVUsMkRBQVc7QUFDckIscUJBQXFCLHNEQUFPO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvUHJvcGVydHlLZXkuanM/NWFiMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX3R5cGVvZiBmcm9tIFwiLi90eXBlb2YuanNcIjtcbmltcG9ydCB0b1ByaW1pdGl2ZSBmcm9tIFwiLi90b1ByaW1pdGl2ZS5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdG9Qcm9wZXJ0eUtleSh0KSB7XG4gIHZhciBpID0gdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7XG4gIHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///9922\n");

/***/ }),

/***/ 2284:
/*!***********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/typeof.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _typeof)\n/* harmony export */ });\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjI4NC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3R5cGVvZi5qcz82MzczIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF90eXBlb2Yobykge1xuICBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7XG5cbiAgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAobykge1xuICAgIHJldHVybiB0eXBlb2YgbztcbiAgfSA6IGZ1bmN0aW9uIChvKSB7XG4gICAgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87XG4gIH0sIF90eXBlb2Yobyk7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2284\n");

/***/ }),

/***/ 7800:
/*!*******************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _unsupportedIterableToArray)\n/* harmony export */ });\n/* harmony import */ var _arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrayLikeToArray.js */ 3145);\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(o, minLen);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzgwMC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxRDtBQUN0QztBQUNmO0FBQ0Esb0NBQW9DLGdFQUFnQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQSxzRkFBc0YsZ0VBQWdCO0FBQ3RHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5LmpzPzNiYzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFycmF5TGlrZVRvQXJyYXkgZnJvbSBcIi4vYXJyYXlMaWtlVG9BcnJheS5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikge1xuICBpZiAoIW8pIHJldHVybjtcbiAgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xuICB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7XG4gIGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7XG4gIGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pO1xuICBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7800\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames not based on template
/******/ 			if ({"resources_js_components_preferences_Preferences_js":1,"resources_js_components_AlienBootScreen_js":1}[chunkId]) return "js/" + chunkId + ".js";
/******/ 			// return url for filenames based on template
/******/ 			return undefined;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get mini-css chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference all chunks
/******/ 		__webpack_require__.miniCssF = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".css";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		// data-webpack is not used as build has no uniqueName
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 		
/******/ 		
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "/";
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/js/app": 0,
/******/ 			"css/landing": 0,
/******/ 			"css/boot-screen": 0,
/******/ 			"css/components/preferences": 0,
/******/ 			"css/app": 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(!/^css\/(app|boot\-screen|components\/preferences|landing)$/.test(chunkId)) {
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						} else installedChunks[chunkId] = 0;
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk"] = self["webpackChunk"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["css/landing","css/boot-screen","css/components/preferences","css/app"], () => (__webpack_require__(5495)))
/******/ 	__webpack_require__.O(undefined, ["css/landing","css/boot-screen","css/components/preferences","css/app"], () => (__webpack_require__(3627)))
/******/ 	__webpack_require__.O(undefined, ["css/landing","css/boot-screen","css/components/preferences","css/app"], () => (__webpack_require__(9700)))
/******/ 	__webpack_require__.O(undefined, ["css/landing","css/boot-screen","css/components/preferences","css/app"], () => (__webpack_require__(3865)))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["css/landing","css/boot-screen","css/components/preferences","css/app"], () => (__webpack_require__(7589)))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;