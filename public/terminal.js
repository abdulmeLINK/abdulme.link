"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["terminal"],{

/***/ 5431:
/*!******************************************************!*\
  !*** ./resources/js/components/terminal/Terminal.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _EventBus_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../EventBus.js */ 2454);\n/* harmony import */ var _services_SoundService_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/SoundService.js */ 9906);\n/* harmony import */ var _commands_HelpCommand_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./commands/HelpCommand.js */ 5730);\n/* harmony import */ var _commands_ClearCommand_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./commands/ClearCommand.js */ 3502);\n/* harmony import */ var _commands_LSCommand_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./commands/LSCommand.js */ 2040);\n/* harmony import */ var _commands_PWDCommand_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./commands/PWDCommand.js */ 1768);\n/* harmony import */ var _commands_CDCommand_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./commands/CDCommand.js */ 6174);\n/* harmony import */ var _commands_CatCommand_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./commands/CatCommand.js */ 7829);\n/* harmony import */ var _commands_WhoAmICommand_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./commands/WhoAmICommand.js */ 5568);\n/* harmony import */ var _commands_NeofetchCommand_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./commands/NeofetchCommand.js */ 2101);\n/* harmony import */ var _commands_GamesCommand_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./commands/GamesCommand.js */ 7604);\n/* harmony import */ var _commands_ThemeCommand_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./commands/ThemeCommand.js */ 9902);\n/* harmony import */ var _commands_SoundCommand_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./commands/SoundCommand.js */ 1984);\n/* harmony import */ var _commands_AlienBootCommand_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./commands/AlienBootCommand.js */ 3988);\n/* harmony import */ var _commands_ExitCommand_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./commands/ExitCommand.js */ 6927);\n/* harmony import */ var _games_SnakeGame_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./games/SnakeGame.js */ 8329);\n/* harmony import */ var _games_TetrisGame_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./games/TetrisGame.js */ 9040);\n/* harmony import */ var _games_TypingGame_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./games/TypingGame.js */ 2942);\n/* harmony import */ var _games_Game2048_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./games/Game2048.js */ 5383);\n\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n\n\n\n\n// Commands\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Games\n\n\n\n\n\n/**\r\n * Terminal - LinkOS Terminal application with xterm.js\r\n * Provides authentic terminal experience with command system and games\r\n */\nvar Terminal = /*#__PURE__*/function () {\n  function Terminal() {\n    var container = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, Terminal);\n    this.container = container;\n    this.terminal = null;\n    this.fitAddon = null;\n    this.webLinksAddon = null;\n\n    // Terminal state\n    this.isInitialized = false;\n    this.currentDirectory = '~';\n    this.commandHistory = [];\n    this.historyIndex = -1;\n    this.currentInput = '';\n    this.isCommandRunning = false;\n    this.isGameRunning = false;\n\n    // Command system\n    this.commandRegistry = new Map();\n    this.fileSystem = null;\n    this.sessionData = null;\n\n    // Sound service\n    this.soundService = new _services_SoundService_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\n    this.currentTheme = 'default';\n\n    // Configuration\n    this.config = {\n      theme: {\n        background: '#000000',\n        foreground: '#e0e0e0',\n        cursor: '#00ff41',\n        cursorAccent: '#000000',\n        selection: 'rgba(255, 255, 255, 0.3)',\n        black: '#000000',\n        red: '#ff073a',\n        green: '#00ff41',\n        yellow: '#fff113',\n        blue: '#0066ff',\n        magenta: '#ff00ff',\n        cyan: '#00ffff',\n        white: '#ffffff',\n        brightBlack: '#555555',\n        brightRed: '#ff6c60',\n        brightGreen: '#a8ff60',\n        brightYellow: '#ffffb6',\n        brightBlue: '#96cbfe',\n        brightMagenta: '#ff73fd',\n        brightCyan: '#c6c5fe',\n        brightWhite: '#ffffff'\n      },\n      fontSize: 14,\n      fontFamily: 'Menlo, Monaco, \"Lucida Console\", monospace',\n      lineHeight: 1.2,\n      letterSpacing: 0,\n      cursorBlink: true,\n      cursorStyle: 'block',\n      scrollback: 1000,\n      tabStopWidth: 4\n    };\n    this.init();\n  }\n\n  /**\r\n   * Initialize terminal\r\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(Terminal, [{\n    key: \"init\",\n    value: function () {\n      var _init = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee() {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return this.loadDependencies();\n            case 3:\n              _context.next = 5;\n              return this.loadFileSystem();\n            case 5:\n              this.setupTerminal();\n              this.registerCommands();\n              this.loadSessionData();\n              this.setupEventListeners();\n              this.isInitialized = true;\n              _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].emit('terminal:ready', {\n                terminalId: this.id,\n                config: this.config\n              });\n              _context.next = 17;\n              break;\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Failed to initialize terminal:', _context.t0);\n              this.showError('Terminal initialization failed');\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 13]]);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n    /**\r\n     * Load xterm.js dependencies\r\n     */\n  }, {\n    key: \"loadDependencies\",\n    value: function () {\n      var _loadDependencies = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee2() {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(window.Terminal && window.FitAddon && window.WebLinksAddon)) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                var scripts = ['/js/vendor/xterm.js', '/js/vendor/xterm-addon-fit.js', '/js/vendor/xterm-addon-web-links.js'];\n                var loaded = 0;\n                scripts.forEach(function (src) {\n                  var script = document.createElement('script');\n                  script.src = src;\n                  script.onload = function () {\n                    loaded++;\n                    if (loaded === scripts.length) {\n                      resolve();\n                    }\n                  };\n                  script.onerror = function () {\n                    return reject(new Error(\"Failed to load \".concat(src)));\n                  };\n                  document.head.appendChild(script);\n                });\n              }));\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function loadDependencies() {\n        return _loadDependencies.apply(this, arguments);\n      }\n      return loadDependencies;\n    }()\n    /**\r\n     * Load file system data\r\n     */\n  }, {\n    key: \"loadFileSystem\",\n    value: function () {\n      var _loadFileSystem = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee3() {\n        var response, _data$home, data;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return fetch('/filesystem.json');\n            case 3:\n              response = _context3.sent;\n              if (!response.ok) {\n                _context3.next = 11;\n                break;\n              }\n              _context3.next = 7;\n              return response.json();\n            case 7:\n              data = _context3.sent;\n              // Check if it has the new structure\n              if ((_data$home = data.home) !== null && _data$home !== void 0 && (_data$home = _data$home.contents) !== null && _data$home !== void 0 && _data$home.abdulmelik) {\n                this.fileSystem = data;\n                console.log('Terminal: Loaded filesystem from /filesystem.json');\n              } else {\n                console.warn('Terminal: /filesystem.json has old structure, using default');\n                this.fileSystem = this.getDefaultFileSystem();\n              }\n              _context3.next = 13;\n              break;\n            case 11:\n              console.warn('Terminal: Could not fetch /filesystem.json, using default');\n              this.fileSystem = this.getDefaultFileSystem();\n            case 13:\n              _context3.next = 19;\n              break;\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Terminal: Failed to load filesystem:', _context3.t0);\n              this.fileSystem = this.getDefaultFileSystem();\n            case 19:\n              console.log('Terminal: fileSystem loaded', this.fileSystem);\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 15]]);\n      }));\n      function loadFileSystem() {\n        return _loadFileSystem.apply(this, arguments);\n      }\n      return loadFileSystem;\n    }()\n    /**\r\n     * Setup xterm.js terminal\r\n     */\n  }, {\n    key: \"setupTerminal\",\n    value: function setupTerminal() {\n      var _this = this;\n      // Create container if not provided\n      if (!this.container) {\n        this.container = document.createElement('div');\n        this.container.className = 'terminal-container';\n      }\n\n      // Load saved theme\n      try {\n        var savedTheme = localStorage.getItem('terminal_theme');\n        if (savedTheme) {\n          this.applySavedTheme(savedTheme);\n          this.currentTheme = savedTheme;\n        }\n      } catch (e) {\n        console.warn('Failed to load saved theme:', e);\n      }\n\n      // Initialize terminal\n      this.terminal = new window.Terminal(this.config);\n\n      // Add addons\n      this.fitAddon = new window.FitAddon.FitAddon();\n      this.webLinksAddon = new window.WebLinksAddon.WebLinksAddon();\n      this.terminal.loadAddon(this.fitAddon);\n      this.terminal.loadAddon(this.webLinksAddon);\n\n      // Open terminal\n      this.terminal.open(this.container);\n\n      // Fit terminal to container\n      this.fitAddon.fit();\n\n      // Setup input handling\n      this.setupInputHandling();\n\n      // Show welcome message\n      this.showWelcome();\n\n      // Show prompt\n      this.showPrompt();\n\n      // Focus terminal to enable cursor blinking\n      this.focus();\n\n      // Play boot sound after short delay\n      setTimeout(function () {\n        _this.soundService.playBootSound(_this.currentTheme);\n      }, 300);\n    }\n\n    /**\r\n     * Focus the terminal\r\n     */\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (this.terminal) {\n        this.terminal.focus();\n      }\n    }\n\n    /**\r\n     * Setup input handling\r\n     */\n  }, {\n    key: \"setupInputHandling\",\n    value: function setupInputHandling() {\n      var _this2 = this;\n      this.terminal.onData(function (data) {\n        if (_this2.isCommandRunning || _this2.isGameRunning) return;\n        var code = data.charCodeAt(0);\n        switch (code) {\n          case 13:\n            // Enter\n            _this2.handleEnter();\n            break;\n          case 127: // Backspace\n          case 8:\n            _this2.handleBackspace();\n            break;\n          case 9:\n            // Tab\n            _this2.handleTab();\n            break;\n          case 3:\n            // Ctrl+C\n            _this2.handleCtrlC();\n            break;\n          case 12:\n            // Ctrl+L\n            _this2.handleClear();\n            break;\n          case 1:\n            // Ctrl+A\n            _this2.handleCtrlA();\n            break;\n          case 5:\n            // Ctrl+E\n            _this2.handleCtrlE();\n            break;\n          case 11:\n            // Ctrl+K\n            _this2.handleCtrlK();\n            break;\n          case 21:\n            // Ctrl+U\n            _this2.handleCtrlU();\n            break;\n          case 23:\n            // Ctrl+W\n            _this2.handleCtrlW();\n            break;\n          default:\n            // Handle special keys\n            if (data === '\\x1b[A') {\n              // Up arrow\n              _this2.handleUpArrow();\n            } else if (data === '\\x1b[B') {\n              // Down arrow\n              _this2.handleDownArrow();\n            } else if (data === '\\x1b[C') {\n              // Right arrow\n              _this2.handleRightArrow();\n            } else if (data === '\\x1b[D') {\n              // Left arrow\n              _this2.handleLeftArrow();\n            } else if (code >= 32 && code <= 126) {\n              // Printable characters\n              _this2.handleCharacter(data);\n            }\n            break;\n        }\n      });\n    }\n\n    /**\r\n     * Handle Enter key\r\n     */\n  }, {\n    key: \"handleEnter\",\n    value: function handleEnter() {\n      this.terminal.writeln('');\n\n      // Play enter sound\n      if (this.soundService) {\n        this.soundService.generateEnterSound(this.currentTheme);\n      }\n      var command = this.currentInput.trim();\n      if (command) {\n        this.addToHistory(command);\n        this.executeCommand(command);\n      } else {\n        this.showPrompt();\n      }\n      this.currentInput = '';\n      this.historyIndex = -1;\n    }\n\n    /**\r\n     * Handle Backspace\r\n     */\n  }, {\n    key: \"handleBackspace\",\n    value: function handleBackspace() {\n      if (this.currentInput.length > 0) {\n        this.currentInput = this.currentInput.slice(0, -1);\n        this.terminal.write('\\b \\b');\n\n        // Play a softer keypress sound for backspace\n        if (this.soundService) {\n          this.soundService.playKeypressSound(this.currentTheme);\n        }\n      }\n    }\n\n    /**\r\n     * Handle Tab completion\r\n     */\n  }, {\n    key: \"handleTab\",\n    value: function handleTab() {\n      // Play tab sound\n      if (this.soundService) {\n        this.soundService.generateTabSound(this.currentTheme);\n      }\n      var completions = this.getCompletions(this.currentInput);\n      if (completions.length === 1) {\n        var completion = completions[0];\n        // Clear current line and write completion\n        var promptLength = this.getPromptLength();\n        this.terminal.write(\"\\x1B[\".concat(promptLength + 1, \"G\\x1B[K\"));\n        this.currentInput = completion;\n        this.terminal.write(completion);\n      } else if (completions.length > 1) {\n        this.terminal.writeln('');\n        this.showCompletions(completions);\n        this.showPrompt();\n        this.terminal.write(this.currentInput);\n      }\n    }\n\n    /**\r\n     * Handle Ctrl+C\r\n     */\n  }, {\n    key: \"handleCtrlC\",\n    value: function handleCtrlC() {\n      this.terminal.writeln('^C');\n      this.currentInput = '';\n      this.isCommandRunning = false;\n      this.showPrompt();\n    }\n\n    /**\r\n     * Handle Ctrl+L (clear)\r\n     */\n  }, {\n    key: \"handleClear\",\n    value: function handleClear() {\n      this.terminal.clear();\n      this.showPrompt();\n    }\n\n    /**\r\n     * Handle Ctrl+A (beginning of line)\r\n     */\n  }, {\n    key: \"handleCtrlA\",\n    value: function handleCtrlA() {\n      // Move cursor to beginning of input\n      var promptLength = this.getPromptLength();\n      this.terminal.write(\"\\x1B[\".concat(promptLength + 1, \"G\"));\n    }\n\n    /**\r\n     * Handle Ctrl+E (end of line)\r\n     */\n  }, {\n    key: \"handleCtrlE\",\n    value: function handleCtrlE() {\n      // Move cursor to end of input\n      var promptLength = this.getPromptLength();\n      this.terminal.write(\"\\x1B[\".concat(promptLength + this.currentInput.length + 1, \"G\"));\n    }\n\n    /**\r\n     * Handle Ctrl+K (cut to end)\r\n     */\n  }, {\n    key: \"handleCtrlK\",\n    value: function handleCtrlK() {\n      this.terminal.write('\\x1b[K'); // Clear from cursor to end of line\n      this.currentInput = '';\n    }\n\n    /**\r\n     * Handle Ctrl+U (cut to beginning)\r\n     */\n  }, {\n    key: \"handleCtrlU\",\n    value: function handleCtrlU() {\n      // Clear from beginning to cursor\n      var promptLength = this.getPromptLength();\n      this.terminal.write(\"\\x1B[\".concat(promptLength + 1, \"G\\x1B[K\"));\n      this.currentInput = '';\n    }\n\n    /**\r\n     * Handle Ctrl+W (delete word)\r\n     */\n  }, {\n    key: \"handleCtrlW\",\n    value: function handleCtrlW() {\n      var words = this.currentInput.split(' ');\n      if (words.length > 1) {\n        words.pop();\n        var newInput = words.join(' ') + ' ';\n        var diff = this.currentInput.length - newInput.length;\n        for (var i = 0; i < diff; i++) {\n          this.terminal.write('\\b \\b');\n        }\n        this.currentInput = newInput;\n      } else {\n        this.handleCtrlU();\n      }\n    }\n\n    /**\r\n     * Handle up arrow (command history)\r\n     */\n  }, {\n    key: \"handleUpArrow\",\n    value: function handleUpArrow() {\n      if (this.commandHistory.length === 0) return;\n      if (this.historyIndex === -1) {\n        this.historyIndex = this.commandHistory.length - 1;\n      } else if (this.historyIndex > 0) {\n        this.historyIndex--;\n      }\n      this.replaceCurrentInput(this.commandHistory[this.historyIndex]);\n    }\n\n    /**\r\n     * Handle down arrow (command history)\r\n     */\n  }, {\n    key: \"handleDownArrow\",\n    value: function handleDownArrow() {\n      if (this.historyIndex === -1) return;\n      this.historyIndex++;\n      if (this.historyIndex >= this.commandHistory.length) {\n        this.historyIndex = -1;\n        this.replaceCurrentInput('');\n      } else {\n        this.replaceCurrentInput(this.commandHistory[this.historyIndex]);\n      }\n    }\n\n    /**\r\n     * Handle right arrow\r\n     */\n  }, {\n    key: \"handleRightArrow\",\n    value: function handleRightArrow() {\n      // TODO: Implement cursor movement within line\n    }\n\n    /**\r\n     * Handle left arrow\r\n     */\n  }, {\n    key: \"handleLeftArrow\",\n    value: function handleLeftArrow() {\n      // TODO: Implement cursor movement within line\n    }\n\n    /**\r\n     * Handle character input\r\n     */\n  }, {\n    key: \"handleCharacter\",\n    value: function handleCharacter(_char) {\n      this.currentInput += _char;\n      this.terminal.write(_char);\n\n      // Play keypress sound for typing\n      if (this.soundService) {\n        this.soundService.playKeypressSound(this.currentTheme);\n      }\n    }\n\n    /**\r\n     * Replace current input line\r\n     */\n  }, {\n    key: \"replaceCurrentInput\",\n    value: function replaceCurrentInput(newInput) {\n      // Clear current input\n      var promptLength = this.getPromptLength();\n      this.terminal.write(\"\\x1B[\".concat(promptLength + 1, \"G\\x1B[K\"));\n\n      // Write new input\n      this.currentInput = newInput;\n      this.terminal.write(newInput);\n    }\n\n    /**\r\n     * Get prompt length for cursor positioning\r\n     */\n  }, {\n    key: \"getPromptLength\",\n    value: function getPromptLength() {\n      return \"\".concat(this.getUserName(), \":\").concat(this.currentDirectory, \"$ \").length;\n    }\n\n    /**\r\n     * Show welcome message\r\n     */\n  }, {\n    key: \"showWelcome\",\n    value: function showWelcome() {\n      var _this3 = this;\n      var welcome = ['╭─────────────────────────────────────────────────────╮', '│              \\x1b[32m✨ AbdulmeLink Terminal ✨\\x1b[0m              │', '│                                                     │', '│  Welcome to the authentic LinkOS terminal experience │', '│                                                     │', '│  Type \\x1b[33mhelp\\x1b[0m to see available commands                │', '│  Type \\x1b[33mgames\\x1b[0m to see available games                  │', '│                                                     │', '╰─────────────────────────────────────────────────────╯', ''];\n      welcome.forEach(function (line) {\n        _this3.terminal.writeln(line);\n      });\n    }\n\n    /**\r\n     * Show command prompt\r\n     */\n  }, {\n    key: \"showPrompt\",\n    value: function showPrompt() {\n      var userName = this.getUserName();\n      var prompt = \"\\x1B[32m\".concat(userName, \"\\x1B[0m:\\x1B[34m\").concat(this.currentDirectory, \"\\x1B[0m$ \");\n      this.terminal.write(prompt);\n    }\n\n    /**\r\n     * Get username for prompt\r\n     */\n  }, {\n    key: \"getUserName\",\n    value: function getUserName() {\n      return 'guest';\n    }\n\n    /**\r\n     * Add command to history\r\n     */\n  }, {\n    key: \"addToHistory\",\n    value: function addToHistory(command) {\n      this.commandHistory.push(command);\n\n      // Limit history size\n      if (this.commandHistory.length > 100) {\n        this.commandHistory.shift();\n      }\n\n      // Save to session storage\n      this.saveSessionData();\n    }\n\n    /**\r\n     * Execute command\r\n     */\n  }, {\n    key: \"executeCommand\",\n    value: function () {\n      var _executeCommand = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee4(input) {\n        var parts, command, args, commandHandler;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              this.isCommandRunning = true;\n              parts = input.split(' ');\n              command = parts[0].toLowerCase();\n              args = parts.slice(1);\n              _context4.prev = 4;\n              if (!this.commandRegistry.has(command)) {\n                _context4.next = 11;\n                break;\n              }\n              commandHandler = this.commandRegistry.get(command);\n              _context4.next = 9;\n              return commandHandler.execute(args, this);\n            case 9:\n              _context4.next = 13;\n              break;\n            case 11:\n              this.writeError(\"command not found: \".concat(command));\n              this.suggestCommands(command);\n            case 13:\n              _context4.next = 18;\n              break;\n            case 15:\n              _context4.prev = 15;\n              _context4.t0 = _context4[\"catch\"](4);\n              this.writeError(\"Error executing command: \".concat(_context4.t0.message));\n            case 18:\n              this.isCommandRunning = false;\n              this.showPrompt();\n            case 20:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[4, 15]]);\n      }));\n      function executeCommand(_x) {\n        return _executeCommand.apply(this, arguments);\n      }\n      return executeCommand;\n    }()\n    /**\r\n     * Register commands\r\n     */\n  }, {\n    key: \"registerCommands\",\n    value: function registerCommands() {\n      // Import and register commands will be implemented separately\n      this.registerCommand('help', new _commands_HelpCommand_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]());\n      this.registerCommand('clear', new _commands_ClearCommand_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]());\n      this.registerCommand('ls', new _commands_LSCommand_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]());\n      this.registerCommand('pwd', new _commands_PWDCommand_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"]());\n      this.registerCommand('cd', new _commands_CDCommand_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]());\n      this.registerCommand('cat', new _commands_CatCommand_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"]());\n      this.registerCommand('whoami', new _commands_WhoAmICommand_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"]());\n      this.registerCommand('neofetch', new _commands_NeofetchCommand_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"]());\n      this.registerCommand('theme', new _commands_ThemeCommand_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"]());\n      this.registerCommand('sound', new _commands_SoundCommand_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"]());\n      this.registerCommand('alienboot', new _commands_AlienBootCommand_js__WEBPACK_IMPORTED_MODULE_17__[\"default\"]());\n      this.registerCommand('exit', new _commands_ExitCommand_js__WEBPACK_IMPORTED_MODULE_18__[\"default\"]());\n\n      // Games\n      this.registerCommand('games', new _commands_GamesCommand_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"]());\n      this.registerCommand('snake', new _games_SnakeGame_js__WEBPACK_IMPORTED_MODULE_19__[\"default\"]());\n      this.registerCommand('tetris', new _games_TetrisGame_js__WEBPACK_IMPORTED_MODULE_20__[\"default\"]());\n      this.registerCommand('typing', new _games_TypingGame_js__WEBPACK_IMPORTED_MODULE_21__[\"default\"]());\n      this.registerCommand('2048', new _games_Game2048_js__WEBPACK_IMPORTED_MODULE_22__[\"default\"]());\n    }\n\n    /**\r\n     * Register a command\r\n     */\n  }, {\n    key: \"registerCommand\",\n    value: function registerCommand(name, handler) {\n      this.commandRegistry.set(name, handler);\n    }\n\n    /**\r\n     * Get command completions\r\n     */\n  }, {\n    key: \"getCompletions\",\n    value: function getCompletions(input) {\n      var parts = input.split(' ');\n      var commandName = parts[0];\n\n      // If only typing command, complete command names\n      if (parts.length === 1) {\n        var commands = Array.from(this.commandRegistry.keys());\n        return commands.filter(function (cmd) {\n          return cmd.startsWith(input);\n        });\n      }\n\n      // If typing arguments, complete filenames/directories\n      if (parts.length >= 2 && (commandName === 'cd' || commandName === 'cat' || commandName === 'ls')) {\n        var partial = parts[parts.length - 1];\n        var currentPath = this.getCurrentPath();\n        var contents = this.getDirectoryContents(currentPath);\n        if (!contents) return [];\n        var items = Object.keys(contents);\n\n        // For cd, only show directories\n        if (commandName === 'cd') {\n          var dirs = items.filter(function (name) {\n            return contents[name].type === 'directory' && name.startsWith(partial);\n          });\n          return dirs.map(function (dir) {\n            return \"\".concat(parts.slice(0, -1).join(' '), \" \").concat(dir);\n          });\n        }\n\n        // For cat and ls, show all items\n        var matches = items.filter(function (name) {\n          return name.startsWith(partial);\n        });\n        return matches.map(function (match) {\n          return \"\".concat(parts.slice(0, -1).join(' '), \" \").concat(match);\n        });\n      }\n      return [];\n    }\n\n    /**\r\n     * Show completions\r\n     */\n  }, {\n    key: \"showCompletions\",\n    value: function showCompletions(completions) {\n      var columns = Math.floor(this.terminal.cols / 20);\n      var output = '';\n      for (var i = 0; i < completions.length; i++) {\n        output += completions[i].padEnd(20);\n        if ((i + 1) % columns === 0) {\n          output += '\\r\\n';\n        }\n      }\n      this.terminal.write(output);\n      this.terminal.writeln('');\n    }\n\n    /**\r\n     * Suggest commands for typos\r\n     */\n  }, {\n    key: \"suggestCommands\",\n    value: function suggestCommands(input) {\n      var _this4 = this;\n      var commands = Array.from(this.commandRegistry.keys());\n      var suggestions = commands.filter(function (cmd) {\n        return _this4.levenshteinDistance(input, cmd) <= 2;\n      });\n      if (suggestions.length > 0) {\n        this.terminal.writeln(\"\\x1B[33mDid you mean: \".concat(suggestions.join(', '), \"?\\x1B[0m\"));\n      }\n    }\n\n    /**\r\n     * Calculate Levenshtein distance for suggestions\r\n     */\n  }, {\n    key: \"levenshteinDistance\",\n    value: function levenshteinDistance(str1, str2) {\n      var matrix = [];\n      for (var i = 0; i <= str2.length; i++) {\n        matrix[i] = [i];\n      }\n      for (var j = 0; j <= str1.length; j++) {\n        matrix[0][j] = j;\n      }\n      for (var _i = 1; _i <= str2.length; _i++) {\n        for (var _j = 1; _j <= str1.length; _j++) {\n          if (str2.charAt(_i - 1) === str1.charAt(_j - 1)) {\n            matrix[_i][_j] = matrix[_i - 1][_j - 1];\n          } else {\n            matrix[_i][_j] = Math.min(matrix[_i - 1][_j - 1] + 1, matrix[_i][_j - 1] + 1, matrix[_i - 1][_j] + 1);\n          }\n        }\n      }\n      return matrix[str2.length][str1.length];\n    }\n\n    /**\r\n     * Write text to terminal\r\n     */\n  }, {\n    key: \"write\",\n    value: function write(text) {\n      this.terminal.write(text);\n    }\n\n    /**\r\n     * Write line to terminal\r\n     */\n  }, {\n    key: \"writeln\",\n    value: function writeln(text) {\n      this.terminal.writeln(text);\n    }\n\n    /**\r\n     * Write error message\r\n     */\n  }, {\n    key: \"writeError\",\n    value: function writeError(message) {\n      this.terminal.writeln(\"\\x1B[31m\".concat(message, \"\\x1B[0m\"));\n    }\n\n    /**\r\n     * Write success message\r\n     */\n  }, {\n    key: \"writeSuccess\",\n    value: function writeSuccess(message) {\n      this.terminal.writeln(\"\\x1B[32m\".concat(message, \"\\x1B[0m\"));\n    }\n\n    /**\r\n     * Write info message\r\n     */\n  }, {\n    key: \"writeInfo\",\n    value: function writeInfo(message) {\n      this.terminal.writeln(\"\\x1B[36m\".concat(message, \"\\x1B[0m\"));\n    }\n\n    /**\r\n     * Write warning message\r\n     */\n  }, {\n    key: \"writeWarning\",\n    value: function writeWarning(message) {\n      this.terminal.writeln(\"\\x1B[33m\".concat(message, \"\\x1B[0m\"));\n    }\n\n    /**\r\n     * Clear terminal\r\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.terminal.clear();\n    }\n\n    /**\r\n     * Set game running state to disable normal input handling\r\n     */\n  }, {\n    key: \"setGameRunning\",\n    value: function setGameRunning(isRunning) {\n      this.isGameRunning = isRunning;\n      if (!isRunning) {\n        // Clear any accumulated input when game ends\n        this.currentInput = '';\n      }\n    }\n\n    /**\r\n     * Write prompt (used by games to return to command prompt)\r\n     */\n  }, {\n    key: \"writePrompt\",\n    value: function writePrompt() {\n      this.terminal.write(\"\\n\\x1B[32m\".concat(this.currentDirectory, \"\\x1B[0m $ \"));\n    }\n\n    /**\r\n     * Get current path without ~ prefix\r\n     */\n  }, {\n    key: \"getCurrentPath\",\n    value: function getCurrentPath() {\n      if (this.currentDirectory === '~') {\n        return '';\n      }\n      // Remove ~/ prefix and return the path\n      return this.currentDirectory.substring(2);\n    }\n\n    /**\r\n     * Validate if a path exists in the filesystem\r\n     */\n  }, {\n    key: \"validatePath\",\n    value: function validatePath(path) {\n      var _this$fileSystem$home;\n      if (!this.fileSystem) return false;\n      if (!path || path === '') {\n        return true; // Root (home/abdulmelik) always exists\n      }\n\n      // Start from /home/abdulmelik/contents\n      var current = (_this$fileSystem$home = this.fileSystem.home) === null || _this$fileSystem$home === void 0 || (_this$fileSystem$home = _this$fileSystem$home.contents) === null || _this$fileSystem$home === void 0 || (_this$fileSystem$home = _this$fileSystem$home.abdulmelik) === null || _this$fileSystem$home === void 0 ? void 0 : _this$fileSystem$home.contents;\n      if (!current) return false;\n\n      // Navigate through the path\n      var parts = path.split('/').filter(function (p) {\n        return p;\n      });\n      for (var i = 0; i < parts.length; i++) {\n        var part = parts[i];\n        if (!current[part]) {\n          return false;\n        }\n        if (current[part].type === 'directory') {\n          // Navigate to contents of directory\n          current = current[part].contents || {};\n        } else if (i < parts.length - 1) {\n          // It's a file but we're not at the end of the path\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\r\n     * Get contents of a directory\r\n     */\n  }, {\n    key: \"getDirectoryContents\",\n    value: function getDirectoryContents(path) {\n      var _this$fileSystem$home2;\n      if (!this.fileSystem) {\n        console.error('Terminal: fileSystem is not loaded');\n        return null;\n      }\n\n      // Start from /home/abdulmelik/contents\n      var current = (_this$fileSystem$home2 = this.fileSystem.home) === null || _this$fileSystem$home2 === void 0 || (_this$fileSystem$home2 = _this$fileSystem$home2.contents) === null || _this$fileSystem$home2 === void 0 || (_this$fileSystem$home2 = _this$fileSystem$home2.abdulmelik) === null || _this$fileSystem$home2 === void 0 ? void 0 : _this$fileSystem$home2.contents;\n      if (!current) {\n        console.error('Terminal: Could not access home/abdulmelik/contents', this.fileSystem);\n        return null;\n      }\n\n      // If at root (~), return home directory contents\n      if (!path || path === '') {\n        return current;\n      }\n\n      // Navigate through the path\n      var parts = path.split('/').filter(function (p) {\n        return p;\n      });\n      var _iterator = _createForOfIteratorHelper(parts),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var part = _step.value;\n          if (!current[part]) {\n            return null;\n          }\n          if (current[part].type === 'directory') {\n            current = current[part].contents || {};\n          } else {\n            // It's a file, can't list contents\n            return null;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return current;\n    }\n\n    /**\r\n     * Navigate up one directory level\r\n     */\n  }, {\n    key: \"navigateUp\",\n    value: function navigateUp() {\n      if (this.currentDirectory === '~') {\n        return; // Already at root\n      }\n      var parts = this.currentDirectory.split('/');\n      parts.pop(); // Remove last part\n\n      if (parts.length === 1 && parts[0] === '~') {\n        this.currentDirectory = '~';\n      } else {\n        this.currentDirectory = parts.join('/');\n      }\n    }\n\n    /**\r\n     * Resize terminal\r\n     */\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (this.fitAddon) {\n        this.fitAddon.fit();\n      }\n    }\n\n    /**\r\n     * Apply saved theme from localStorage\r\n     */\n  }, {\n    key: \"applySavedTheme\",\n    value: function applySavedTheme(themeName) {\n      var themes = {\n        'default': {\n          background: '#000000',\n          foreground: '#e0e0e0',\n          cursor: '#00ff00',\n          cursorAccent: '#000000',\n          selection: 'rgba(255, 255, 255, 0.3)',\n          black: '#2e3436',\n          red: '#ff5555',\n          green: '#50fa7b',\n          yellow: '#f1fa8c',\n          blue: '#4d9ef7',\n          magenta: '#ff79c6',\n          cyan: '#8be9fd',\n          white: '#e0e0e0',\n          brightBlack: '#888888',\n          brightRed: '#ff8888',\n          brightGreen: '#88ffaa',\n          brightYellow: '#ffffaa',\n          brightBlue: '#88ccff',\n          brightMagenta: '#ffaaff',\n          brightCyan: '#aaffff',\n          brightWhite: '#ffffff'\n        },\n        'alien': {\n          background: '#000000',\n          foreground: '#39ff14',\n          cursor: '#39ff14',\n          cursorAccent: '#000000',\n          selection: 'rgba(57, 255, 20, 0.2)',\n          black: '#000000',\n          red: '#ff3b30',\n          green: '#39ff14',\n          yellow: '#ffcc00',\n          blue: '#00a6ff',\n          magenta: '#ff2d55',\n          cyan: '#00ffcc',\n          white: '#8fbc8f',\n          brightBlack: '#1a4d1a',\n          brightRed: '#ff6961',\n          brightGreen: '#6bff4d',\n          brightYellow: '#ffeb3b',\n          brightBlue: '#4fc3f7',\n          brightMagenta: '#ff80ab',\n          brightCyan: '#64ffda',\n          brightWhite: '#adff2f'\n        },\n        'matrix': {\n          background: '#000000',\n          foreground: '#00ff41',\n          cursor: '#00ff41',\n          cursorAccent: '#000000',\n          selection: 'rgba(0, 255, 65, 0.3)',\n          black: '#000000',\n          red: '#ff073a',\n          green: '#00ff41',\n          yellow: '#fff113',\n          blue: '#0066ff',\n          magenta: '#ff00ff',\n          cyan: '#00ffff',\n          white: '#ffffff',\n          brightBlack: '#555555',\n          brightRed: '#ff6c60',\n          brightGreen: '#a8ff60',\n          brightYellow: '#ffffb6',\n          brightBlue: '#96cbfe',\n          brightMagenta: '#ff73fd',\n          brightCyan: '#c6c5fe',\n          brightWhite: '#ffffff'\n        },\n        'cyberpunk': {\n          background: '#0a0014',\n          foreground: '#ff006e',\n          cursor: '#ff006e',\n          cursorAccent: '#0a0014',\n          selection: 'rgba(255, 0, 110, 0.3)',\n          black: '#0a0014',\n          red: '#ff006e',\n          green: '#00ffaa',\n          yellow: '#ffaa00',\n          blue: '#00aaff',\n          magenta: '#ff00ff',\n          cyan: '#00ffff',\n          white: '#ffffff',\n          brightBlack: '#555555',\n          brightRed: '#ff4499',\n          brightGreen: '#44ffcc',\n          brightYellow: '#ffcc44',\n          brightBlue: '#44ccff',\n          brightMagenta: '#ff44ff',\n          brightCyan: '#44ffff',\n          brightWhite: '#ffffff'\n        },\n        'retro': {\n          background: '#1a0f00',\n          foreground: '#ffb000',\n          cursor: '#ffb000',\n          cursorAccent: '#1a0f00',\n          selection: 'rgba(255, 176, 0, 0.3)',\n          black: '#1a0f00',\n          red: '#ff8c00',\n          green: '#ffb000',\n          yellow: '#ffd700',\n          blue: '#ff9f40',\n          magenta: '#ff7f50',\n          cyan: '#ffcc80',\n          white: '#ffe4b5',\n          brightBlack: '#8b4513',\n          brightRed: '#ffa54f',\n          brightGreen: '#ffc966',\n          brightYellow: '#ffe87c',\n          brightBlue: '#ffb766',\n          brightMagenta: '#ff9966',\n          brightCyan: '#ffd9a3',\n          brightWhite: '#fffacd'\n        },\n        'apple-ii': {\n          background: '#0f380f',\n          foreground: '#33ff33',\n          cursor: '#33ff33',\n          cursorAccent: '#0f380f',\n          selection: 'rgba(51, 255, 51, 0.25)',\n          black: '#0f380f',\n          red: '#66ff66',\n          green: '#33ff33',\n          yellow: '#99ff99',\n          blue: '#44ff44',\n          magenta: '#77ff77',\n          cyan: '#88ff88',\n          white: '#ccffcc',\n          brightBlack: '#226622',\n          brightRed: '#77ff77',\n          brightGreen: '#55ff55',\n          brightYellow: '#aaffaa',\n          brightBlue: '#66ff66',\n          brightMagenta: '#88ff88',\n          brightCyan: '#99ff99',\n          brightWhite: '#eeffee'\n        },\n        'tron': {\n          background: '#000408',\n          foreground: '#6fc3df',\n          cursor: '#6fc3df',\n          cursorAccent: '#000408',\n          selection: 'rgba(111, 195, 223, 0.3)',\n          black: '#000408',\n          red: '#ff410d',\n          green: '#00e8c6',\n          yellow: '#ffb300',\n          blue: '#6fc3df',\n          magenta: '#ae81ff',\n          cyan: '#00e8ff',\n          white: '#a4c5d9',\n          brightBlack: '#1c2833',\n          brightRed: '#ff6f4f',\n          brightGreen: '#33ffd9',\n          brightYellow: '#ffd633',\n          brightBlue: '#8fd9f0',\n          brightMagenta: '#c8a0ff',\n          brightCyan: '#66f0ff',\n          brightWhite: '#dceef7'\n        },\n        'hacker': {\n          background: '#000000',\n          foreground: '#00ff00',\n          cursor: '#00ff00',\n          cursorAccent: '#000000',\n          selection: 'rgba(0, 255, 0, 0.25)',\n          black: '#000000',\n          red: '#ff0000',\n          green: '#00ff00',\n          yellow: '#ffff00',\n          blue: '#0000ff',\n          magenta: '#ff00ff',\n          cyan: '#00ffff',\n          white: '#ffffff',\n          brightBlack: '#808080',\n          brightRed: '#ff8080',\n          brightGreen: '#80ff80',\n          brightYellow: '#ffff80',\n          brightBlue: '#8080ff',\n          brightMagenta: '#ff80ff',\n          brightCyan: '#80ffff',\n          brightWhite: '#ffffff'\n        },\n        'dracula': {\n          background: '#282a36',\n          foreground: '#f8f8f2',\n          cursor: '#f8f8f2',\n          cursorAccent: '#282a36',\n          selection: 'rgba(68, 71, 90, 0.5)',\n          black: '#21222c',\n          red: '#ff5555',\n          green: '#50fa7b',\n          yellow: '#f1fa8c',\n          blue: '#bd93f9',\n          magenta: '#ff79c6',\n          cyan: '#8be9fd',\n          white: '#f8f8f2',\n          brightBlack: '#6272a4',\n          brightRed: '#ff6e6e',\n          brightGreen: '#69ff94',\n          brightYellow: '#ffffa5',\n          brightBlue: '#d6acff',\n          brightMagenta: '#ff92df',\n          brightCyan: '#a4ffff',\n          brightWhite: '#ffffff'\n        },\n        'monokai': {\n          background: '#272822',\n          foreground: '#f8f8f2',\n          cursor: '#f8f8f0',\n          cursorAccent: '#272822',\n          selection: 'rgba(73, 72, 62, 0.8)',\n          black: '#272822',\n          red: '#f92672',\n          green: '#a6e22e',\n          yellow: '#f4bf75',\n          blue: '#66d9ef',\n          magenta: '#ae81ff',\n          cyan: '#a1efe4',\n          white: '#f8f8f2',\n          brightBlack: '#75715e',\n          brightRed: '#f92672',\n          brightGreen: '#a6e22e',\n          brightYellow: '#f4bf75',\n          brightBlue: '#66d9ef',\n          brightMagenta: '#ae81ff',\n          brightCyan: '#a1efe4',\n          brightWhite: '#f9f8f5'\n        },\n        'nord': {\n          background: '#2e3440',\n          foreground: '#d8dee9',\n          cursor: '#d8dee9',\n          cursorAccent: '#2e3440',\n          selection: 'rgba(67, 76, 94, 0.5)',\n          black: '#3b4252',\n          red: '#bf616a',\n          green: '#a3be8c',\n          yellow: '#ebcb8b',\n          blue: '#81a1c1',\n          magenta: '#b48ead',\n          cyan: '#88c0d0',\n          white: '#e5e9f0',\n          brightBlack: '#4c566a',\n          brightRed: '#bf616a',\n          brightGreen: '#a3be8c',\n          brightYellow: '#ebcb8b',\n          brightBlue: '#81a1c1',\n          brightMagenta: '#b48ead',\n          brightCyan: '#8fbcbb',\n          brightWhite: '#eceff4'\n        }\n      };\n      if (themes[themeName]) {\n        this.config.theme = themes[themeName];\n      }\n    }\n\n    /**\r\n     * Get default file system\r\n     */\n  }, {\n    key: \"getDefaultFileSystem\",\n    value: function getDefaultFileSystem() {\n      return {\n        \"home\": {\n          \"type\": \"directory\",\n          \"modified\": \"Oct 1 00:00\",\n          \"size\": 4096,\n          \"contents\": {\n            \"abdulmelik\": {\n              \"type\": \"directory\",\n              \"modified\": \"Oct 1 00:00\",\n              \"size\": 4096,\n              \"contents\": {\n                \"README.md\": {\n                  \"type\": \"file\",\n                  \"modified\": \"Oct 1 00:00\",\n                  \"size\": 128,\n                  \"content\": \"# Welcome!\\n\\nType 'help' for available commands.\"\n                },\n                \"Documents\": {\n                  \"type\": \"directory\",\n                  \"modified\": \"Oct 1 00:00\",\n                  \"size\": 4096,\n                  \"contents\": {}\n                },\n                \"Projects\": {\n                  \"type\": \"directory\",\n                  \"modified\": \"Oct 1 00:00\",\n                  \"size\": 4096,\n                  \"contents\": {}\n                }\n              }\n            }\n          }\n        }\n      };\n    }\n\n    /**\r\n     * Load session data\r\n     */\n  }, {\n    key: \"loadSessionData\",\n    value: function loadSessionData() {\n      try {\n        var saved = localStorage.getItem('terminal_session');\n        if (saved) {\n          this.sessionData = JSON.parse(saved);\n          this.commandHistory = this.sessionData.commandHistory || [];\n          this.currentDirectory = this.sessionData.currentDirectory || '~';\n        }\n      } catch (error) {\n        console.warn('Failed to load session data:', error);\n      }\n    }\n\n    /**\r\n     * Save session data\r\n     */\n  }, {\n    key: \"saveSessionData\",\n    value: function saveSessionData() {\n      try {\n        var sessionData = {\n          commandHistory: this.commandHistory,\n          currentDirectory: this.currentDirectory,\n          timestamp: Date.now()\n        };\n        localStorage.setItem('terminal_session', JSON.stringify(sessionData));\n      } catch (error) {\n        console.warn('Failed to save session data:', error);\n      }\n    }\n\n    /**\r\n     * Setup event listeners\r\n     */\n  }, {\n    key: \"setupEventListeners\",\n    value: function setupEventListeners() {\n      var _this5 = this;\n      // Window resize\n      window.addEventListener('resize', function () {\n        _this5.resize();\n      });\n\n      // App events\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].on('terminal:command', function (data) {\n        if (data.command) {\n          _this5.executeCommand(data.command);\n        }\n      });\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].on('terminal:clear', function () {\n        _this5.clear();\n        _this5.showPrompt();\n      });\n    }\n\n    /**\r\n     * Show error fallback\r\n     */\n  }, {\n    key: \"showError\",\n    value: function showError(message) {\n      if (this.container) {\n        this.container.innerHTML = \"\\n                <div style=\\\"\\n                    padding: 2rem;\\n                    text-align: center;\\n                    color: #ff073a;\\n                    font-family: monospace;\\n                    background: #000;\\n                    height: 100%;\\n                    display: flex;\\n                    align-items: center;\\n                    justify-content: center;\\n                \\\">\\n                    <div>\\n                        <h3>Terminal Error</h3>\\n                        <p>\".concat(message, \"</p>\\n                        <button onclick=\\\"location.reload()\\\" style=\\\"\\n                            background: #00ff41;\\n                            color: #000;\\n                            border: none;\\n                            padding: 8px 16px;\\n                            margin-top: 1rem;\\n                            cursor: pointer;\\n                        \\\">Reload</button>\\n                    </div>\\n                </div>\\n            \");\n      }\n    }\n\n    /**\r\n     * Destroy terminal and clean up\r\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.terminal) {\n        this.terminal.dispose();\n      }\n      this.saveSessionData();\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].off('terminal:command');\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].off('terminal:clear');\n      this.terminal = null;\n      this.container = null;\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Terminal);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5431\n");

/***/ }),

/***/ 3988:
/*!***********************************************************************!*\
  !*** ./resources/js/components/terminal/commands/AlienBootCommand.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n/**\r\n * AlienBootCommand - Show ABDULMELINK boot screen\r\n */\nvar AlienBootCommand = /*#__PURE__*/function () {\n  function AlienBootCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, AlienBootCommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(AlienBootCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        var terminalWindow, originalZIndex, AlienBootScreenModule, AlienBootScreen, bootScreen;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              terminal.writeln('');\n              terminal.writeInfo('Initiating ABDULMELINK boot sequence...');\n\n              // Get terminal window for z-index manipulation\n              terminalWindow = terminal.container.closest('.LinkOS-window');\n              originalZIndex = terminalWindow ? terminalWindow.style.zIndex : null; // Dynamically import AlienBootScreen\n              _context.prev = 4;\n              // Lower terminal z-index temporarily so boot screen appears on top\n              if (terminalWindow) {\n                terminalWindow.style.zIndex = '1000';\n              }\n              _context.next = 8;\n              return __webpack_require__.e(/*! import() */ \"resources_js_components_AlienBootScreen_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../AlienBootScreen.js */ 2181));\n            case 8:\n              AlienBootScreenModule = _context.sent;\n              AlienBootScreen = AlienBootScreenModule[\"default\"];\n              bootScreen = new AlienBootScreen();\n              _context.next = 13;\n              return bootScreen.show(terminal.soundService);\n            case 13:\n              // Restore terminal z-index after boot\n              if (terminalWindow) {\n                terminalWindow.style.zIndex = originalZIndex || '';\n              }\n              terminal.writeln('');\n              terminal.writeSuccess('✓ Boot sequence complete');\n              terminal.writeInfo('System online - ABDULMELINK operational');\n              terminal.writeln('');\n              _context.next = 24;\n              break;\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](4);\n              // Restore z-index even on error\n              if (terminalWindow) {\n                terminalWindow.style.zIndex = originalZIndex || '';\n              }\n              terminal.writeError('Failed to load boot screen: ' + _context.t0.message);\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[4, 20]]);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AlienBootCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzk4OC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRkEsSUFHTUEsZ0JBQWdCO0VBQUEsU0FBQUEsaUJBQUE7SUFBQUMsaUZBQUEsT0FBQUQsZ0JBQUE7RUFBQTtFQUFBLE9BQUFFLDhFQUFBLENBQUFGLGdCQUFBO0lBQUFHLEdBQUE7SUFBQUMsS0FBQTtNQUFBLElBQUFDLFFBQUEsR0FBQUMsbUZBQUEsZUFBQUMsc0VBQUEsQ0FDbEIsU0FBQUUsUUFBY0MsSUFBSSxFQUFFQyxRQUFRO1FBQUEsSUFBQUMsY0FBQSxFQUFBQyxjQUFBLEVBQUFDLHFCQUFBLEVBQUFDLGVBQUEsRUFBQUMsVUFBQTtRQUFBLE9BQUFULHNFQUFBLFVBQUFXLFNBQUFDLFFBQUE7VUFBQSxrQkFBQUEsUUFBQSxDQUFBQyxJQUFBLEdBQUFELFFBQUEsQ0FBQUUsSUFBQTtZQUFBO2NBQ3hCVixRQUFRLENBQUNXLE9BQU8sQ0FBQyxFQUFFLENBQUM7Y0FDcEJYLFFBQVEsQ0FBQ1ksU0FBUyxDQUFDLHlDQUF5QyxDQUFDOztjQUU3RDtjQUNNWCxjQUFjLEdBQUdELFFBQVEsQ0FBQ2EsU0FBUyxDQUFDQyxPQUFPLENBQUMsZUFBZSxDQUFDO2NBQzVEWixjQUFjLEdBQUdELGNBQWMsR0FBR0EsY0FBYyxDQUFDYyxLQUFLLENBQUNDLE1BQU0sR0FBRyxJQUFJLEVBRTFFO2NBQUFSLFFBQUEsQ0FBQUMsSUFBQTtjQUVJO2NBQ0EsSUFBSVIsY0FBYyxFQUFFO2dCQUNoQkEsY0FBYyxDQUFDYyxLQUFLLENBQUNDLE1BQU0sR0FBRyxNQUFNO2NBQ3hDO2NBQUNSLFFBQUEsQ0FBQUUsSUFBQTtjQUFBLE9BRW1DLDZLQUFrQztZQUFBO2NBQWhFUCxxQkFBcUIsR0FBQUssUUFBQSxDQUFBUyxJQUFBO2NBQ3JCYixlQUFlLEdBQUdELHFCQUFxQixXQUFRO2NBRS9DRSxVQUFVLEdBQUcsSUFBSUQsZUFBZSxDQUFDLENBQUM7Y0FBQUksUUFBQSxDQUFBRSxJQUFBO2NBQUEsT0FDbENMLFVBQVUsQ0FBQ2EsSUFBSSxDQUFDbEIsUUFBUSxDQUFDbUIsWUFBWSxDQUFDO1lBQUE7Y0FFNUM7Y0FDQSxJQUFJbEIsY0FBYyxFQUFFO2dCQUNoQkEsY0FBYyxDQUFDYyxLQUFLLENBQUNDLE1BQU0sR0FBR2QsY0FBYyxJQUFJLEVBQUU7Y0FDdEQ7Y0FFQUYsUUFBUSxDQUFDVyxPQUFPLENBQUMsRUFBRSxDQUFDO2NBQ3BCWCxRQUFRLENBQUNvQixZQUFZLENBQUMsMEJBQTBCLENBQUM7Y0FDakRwQixRQUFRLENBQUNZLFNBQVMsQ0FBQyx5Q0FBeUMsQ0FBQztjQUM3RFosUUFBUSxDQUFDVyxPQUFPLENBQUMsRUFBRSxDQUFDO2NBQUNILFFBQUEsQ0FBQUUsSUFBQTtjQUFBO1lBQUE7Y0FBQUYsUUFBQSxDQUFBQyxJQUFBO2NBQUFELFFBQUEsQ0FBQWEsRUFBQSxHQUFBYixRQUFBO2NBRXJCO2NBQ0EsSUFBSVAsY0FBYyxFQUFFO2dCQUNoQkEsY0FBYyxDQUFDYyxLQUFLLENBQUNDLE1BQU0sR0FBR2QsY0FBYyxJQUFJLEVBQUU7Y0FDdEQ7Y0FDQUYsUUFBUSxDQUFDc0IsVUFBVSxDQUFDLDhCQUE4QixHQUFHZCxRQUFBLENBQUFhLEVBQUEsQ0FBTUUsT0FBTyxDQUFDO1lBQUM7WUFBQTtjQUFBLE9BQUFmLFFBQUEsQ0FBQWdCLElBQUE7VUFBQTtRQUFBLEdBQUExQixPQUFBO01BQUEsQ0FFM0U7TUFBQSxTQUFBMkIsUUFBQUMsRUFBQSxFQUFBQyxHQUFBO1FBQUEsT0FBQWpDLFFBQUEsQ0FBQWtDLEtBQUEsT0FBQUMsU0FBQTtNQUFBO01BQUEsT0FBQUosT0FBQTtJQUFBO0VBQUE7QUFBQTtBQUdMLGlFQUFlcEMsZ0JBQWdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvdGVybWluYWwvY29tbWFuZHMvQWxpZW5Cb290Q29tbWFuZC5qcz9kOWY4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBBbGllbkJvb3RDb21tYW5kIC0gU2hvdyBBQkRVTE1FTElOSyBib290IHNjcmVlblxyXG4gKi9cclxuY2xhc3MgQWxpZW5Cb290Q29tbWFuZCB7XHJcbiAgICBhc3luYyBleGVjdXRlKGFyZ3MsIHRlcm1pbmFsKSB7XHJcbiAgICAgICAgdGVybWluYWwud3JpdGVsbignJyk7XHJcbiAgICAgICAgdGVybWluYWwud3JpdGVJbmZvKCdJbml0aWF0aW5nIEFCRFVMTUVMSU5LIGJvb3Qgc2VxdWVuY2UuLi4nKTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBHZXQgdGVybWluYWwgd2luZG93IGZvciB6LWluZGV4IG1hbmlwdWxhdGlvblxyXG4gICAgICAgIGNvbnN0IHRlcm1pbmFsV2luZG93ID0gdGVybWluYWwuY29udGFpbmVyLmNsb3Nlc3QoJy5tYWNvcy13aW5kb3cnKTtcclxuICAgICAgICBjb25zdCBvcmlnaW5hbFpJbmRleCA9IHRlcm1pbmFsV2luZG93ID8gdGVybWluYWxXaW5kb3cuc3R5bGUuekluZGV4IDogbnVsbDtcclxuICAgICAgICBcclxuICAgICAgICAvLyBEeW5hbWljYWxseSBpbXBvcnQgQWxpZW5Cb290U2NyZWVuXHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgLy8gTG93ZXIgdGVybWluYWwgei1pbmRleCB0ZW1wb3JhcmlseSBzbyBib290IHNjcmVlbiBhcHBlYXJzIG9uIHRvcFxyXG4gICAgICAgICAgICBpZiAodGVybWluYWxXaW5kb3cpIHtcclxuICAgICAgICAgICAgICAgIHRlcm1pbmFsV2luZG93LnN0eWxlLnpJbmRleCA9ICcxMDAwJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgY29uc3QgQWxpZW5Cb290U2NyZWVuTW9kdWxlID0gYXdhaXQgaW1wb3J0KCcuLi8uLi9BbGllbkJvb3RTY3JlZW4uanMnKTtcclxuICAgICAgICAgICAgY29uc3QgQWxpZW5Cb290U2NyZWVuID0gQWxpZW5Cb290U2NyZWVuTW9kdWxlLmRlZmF1bHQ7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBjb25zdCBib290U2NyZWVuID0gbmV3IEFsaWVuQm9vdFNjcmVlbigpO1xyXG4gICAgICAgICAgICBhd2FpdCBib290U2NyZWVuLnNob3codGVybWluYWwuc291bmRTZXJ2aWNlKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vIFJlc3RvcmUgdGVybWluYWwgei1pbmRleCBhZnRlciBib290XHJcbiAgICAgICAgICAgIGlmICh0ZXJtaW5hbFdpbmRvdykge1xyXG4gICAgICAgICAgICAgICAgdGVybWluYWxXaW5kb3cuc3R5bGUuekluZGV4ID0gb3JpZ2luYWxaSW5kZXggfHwgJyc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlbG4oJycpO1xyXG4gICAgICAgICAgICB0ZXJtaW5hbC53cml0ZVN1Y2Nlc3MoJ+KckyBCb290IHNlcXVlbmNlIGNvbXBsZXRlJyk7XHJcbiAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlSW5mbygnU3lzdGVtIG9ubGluZSAtIEFCRFVMTUVMSU5LIG9wZXJhdGlvbmFsJyk7XHJcbiAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlbG4oJycpO1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIC8vIFJlc3RvcmUgei1pbmRleCBldmVuIG9uIGVycm9yXHJcbiAgICAgICAgICAgIGlmICh0ZXJtaW5hbFdpbmRvdykge1xyXG4gICAgICAgICAgICAgICAgdGVybWluYWxXaW5kb3cuc3R5bGUuekluZGV4ID0gb3JpZ2luYWxaSW5kZXggfHwgJyc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGVybWluYWwud3JpdGVFcnJvcignRmFpbGVkIHRvIGxvYWQgYm9vdCBzY3JlZW46ICcgKyBlcnJvci5tZXNzYWdlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEFsaWVuQm9vdENvbW1hbmQ7XHJcbiJdLCJuYW1lcyI6WyJBbGllbkJvb3RDb21tYW5kIiwiX2NsYXNzQ2FsbENoZWNrIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJfZXhlY3V0ZSIsIl9hc3luY1RvR2VuZXJhdG9yIiwiX3JlZ2VuZXJhdG9yUnVudGltZSIsIm1hcmsiLCJfY2FsbGVlIiwiYXJncyIsInRlcm1pbmFsIiwidGVybWluYWxXaW5kb3ciLCJvcmlnaW5hbFpJbmRleCIsIkFsaWVuQm9vdFNjcmVlbk1vZHVsZSIsIkFsaWVuQm9vdFNjcmVlbiIsImJvb3RTY3JlZW4iLCJ3cmFwIiwiX2NhbGxlZSQiLCJfY29udGV4dCIsInByZXYiLCJuZXh0Iiwid3JpdGVsbiIsIndyaXRlSW5mbyIsImNvbnRhaW5lciIsImNsb3Nlc3QiLCJzdHlsZSIsInpJbmRleCIsInNlbnQiLCJzaG93Iiwic291bmRTZXJ2aWNlIiwid3JpdGVTdWNjZXNzIiwidDAiLCJ3cml0ZUVycm9yIiwibWVzc2FnZSIsInN0b3AiLCJleGVjdXRlIiwiX3giLCJfeDIiLCJhcHBseSIsImFyZ3VtZW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3988\n");

/***/ }),

/***/ 6174:
/*!****************************************************************!*\
  !*** ./resources/js/components/terminal/commands/CDCommand.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n/**\r\n * CDCommand - Change directory\r\n */\nvar CDCommand = /*#__PURE__*/function () {\n  function CDCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, CDCommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(CDCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        var targetDir, path, newPath, pathToValidate, _terminal$fileSystem$, parts, current, _iterator, _step, part;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(args.length === 0)) {\n                _context.next = 4;\n                break;\n              }\n              // No arguments - go to home\n              terminal.currentDirectory = '~';\n              terminal.saveSessionData();\n              return _context.abrupt(\"return\");\n            case 4:\n              targetDir = args[0]; // Handle root directory\n              if (!(targetDir === '/')) {\n                _context.next = 8;\n                break;\n              }\n              terminal.writeError('cd: /: Permission denied (filesystem root not accessible)');\n              return _context.abrupt(\"return\");\n            case 8:\n              if (!(targetDir === '~' || targetDir === '/home' || targetDir === '$HOME')) {\n                _context.next = 12;\n                break;\n              }\n              terminal.currentDirectory = '~';\n              terminal.saveSessionData();\n              return _context.abrupt(\"return\");\n            case 12:\n              if (!(targetDir === '.')) {\n                _context.next = 14;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 14:\n              if (!(targetDir === '..')) {\n                _context.next = 18;\n                break;\n              }\n              terminal.navigateUp();\n              terminal.saveSessionData();\n              return _context.abrupt(\"return\");\n            case 18:\n              if (!targetDir.startsWith('~/')) {\n                _context.next = 32;\n                break;\n              }\n              path = targetDir.substring(2);\n              if (path) {\n                _context.next = 24;\n                break;\n              }\n              // Just ~/ means home\n              terminal.currentDirectory = '~';\n              _context.next = 30;\n              break;\n            case 24:\n              if (!terminal.validatePath(path)) {\n                _context.next = 28;\n                break;\n              }\n              terminal.currentDirectory = \"~/\".concat(path);\n              _context.next = 30;\n              break;\n            case 28:\n              terminal.writeError(\"cd: \".concat(targetDir, \": No such file or directory\"));\n              return _context.abrupt(\"return\");\n            case 30:\n              terminal.saveSessionData();\n              return _context.abrupt(\"return\");\n            case 32:\n              if (terminal.currentDirectory === '~') {\n                newPath = \"~/\".concat(targetDir);\n              } else {\n                newPath = \"\".concat(terminal.currentDirectory, \"/\").concat(targetDir);\n              }\n\n              // Validate the new path\n              pathToValidate = newPath === '~' ? '' : newPath.substring(2);\n              if (!terminal.validatePath(pathToValidate)) {\n                _context.next = 65;\n                break;\n              }\n              // Check if it's a directory, not a file\n              parts = pathToValidate.split('/').filter(function (p) {\n                return p;\n              });\n              current = (_terminal$fileSystem$ = terminal.fileSystem.home) === null || _terminal$fileSystem$ === void 0 || (_terminal$fileSystem$ = _terminal$fileSystem$.contents) === null || _terminal$fileSystem$ === void 0 || (_terminal$fileSystem$ = _terminal$fileSystem$.abdulmelik) === null || _terminal$fileSystem$ === void 0 ? void 0 : _terminal$fileSystem$.contents;\n              if (!(current && parts.length > 0)) {\n                _context.next = 61;\n                break;\n              }\n              _iterator = _createForOfIteratorHelper(parts);\n              _context.prev = 39;\n              _iterator.s();\n            case 41:\n              if ((_step = _iterator.n()).done) {\n                _context.next = 53;\n                break;\n              }\n              part = _step.value;\n              if (current[part]) {\n                _context.next = 45;\n                break;\n              }\n              return _context.abrupt(\"break\", 53);\n            case 45:\n              if (!(current[part].type === 'directory')) {\n                _context.next = 49;\n                break;\n              }\n              current = current[part].contents || {};\n              _context.next = 51;\n              break;\n            case 49:\n              // It's a file, not a directory\n              terminal.writeError(\"cd: \".concat(targetDir, \": Not a directory\"));\n              return _context.abrupt(\"return\");\n            case 51:\n              _context.next = 41;\n              break;\n            case 53:\n              _context.next = 58;\n              break;\n            case 55:\n              _context.prev = 55;\n              _context.t0 = _context[\"catch\"](39);\n              _iterator.e(_context.t0);\n            case 58:\n              _context.prev = 58;\n              _iterator.f();\n              return _context.finish(58);\n            case 61:\n              terminal.currentDirectory = newPath;\n              terminal.saveSessionData();\n              _context.next = 66;\n              break;\n            case 65:\n              terminal.writeError(\"cd: \".concat(targetDir, \": No such file or directory\"));\n            case 66:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[39, 55, 58, 61]]);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CDCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6174\n");

/***/ }),

/***/ 7829:
/*!*****************************************************************!*\
  !*** ./resources/js/components/terminal/commands/CatCommand.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n/**\r\n * CatCommand - Display file contents\r\n */\nvar CatCommand = /*#__PURE__*/function () {\n  function CatCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, CatCommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(CatCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        var fileName, currentPath, contents, fileItem, lines;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(args.length === 0)) {\n                _context.next = 4;\n                break;\n              }\n              terminal.writeError('cat: missing file operand');\n              terminal.writeInfo('Try \\'cat --help\\' for more information.');\n              return _context.abrupt(\"return\");\n            case 4:\n              fileName = args[0]; // Handle help flag\n              if (!(fileName === '--help' || fileName === '-h')) {\n                _context.next = 9;\n                break;\n              }\n              terminal.writeln('Usage: cat [FILE]...');\n              terminal.writeln('Concatenate FILE(s) to standard output.');\n              return _context.abrupt(\"return\");\n            case 9:\n              // Get file from current directory\n              currentPath = terminal.getCurrentPath();\n              contents = terminal.getDirectoryContents(currentPath);\n              if (!(!contents || !contents[fileName])) {\n                _context.next = 14;\n                break;\n              }\n              terminal.writeError(\"cat: \".concat(fileName, \": No such file or directory\"));\n              return _context.abrupt(\"return\");\n            case 14:\n              fileItem = contents[fileName];\n              if (!(fileItem.type === 'directory')) {\n                _context.next = 18;\n                break;\n              }\n              terminal.writeError(\"cat: \".concat(fileName, \": Is a directory\"));\n              return _context.abrupt(\"return\");\n            case 18:\n              if (fileItem.content) {\n                _context.next = 21;\n                break;\n              }\n              terminal.writeError(\"cat: \".concat(fileName, \": Permission denied or empty file\"));\n              return _context.abrupt(\"return\");\n            case 21:\n              // Display file content - split by newlines for proper formatting\n              lines = fileItem.content.split('\\n');\n              lines.forEach(function (line) {\n                return terminal.writeln(line);\n              });\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CatCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzgyOS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRkEsSUFHTUEsVUFBVTtFQUFBLFNBQUFBLFdBQUE7SUFBQUMsaUZBQUEsT0FBQUQsVUFBQTtFQUFBO0VBQUEsT0FBQUUsOEVBQUEsQ0FBQUYsVUFBQTtJQUFBRyxHQUFBO0lBQUFDLEtBQUE7TUFBQSxJQUFBQyxRQUFBLEdBQUFDLG1GQUFBLGVBQUFDLHNFQUFBLENBQ1osU0FBQUUsUUFBY0MsSUFBSSxFQUFFQyxRQUFRO1FBQUEsSUFBQUMsUUFBQSxFQUFBQyxXQUFBLEVBQUFDLFFBQUEsRUFBQUMsUUFBQSxFQUFBQyxLQUFBO1FBQUEsT0FBQVQsc0VBQUEsVUFBQVcsU0FBQUMsUUFBQTtVQUFBLGtCQUFBQSxRQUFBLENBQUFDLElBQUEsR0FBQUQsUUFBQSxDQUFBRSxJQUFBO1lBQUE7Y0FBQSxNQUNwQlgsSUFBSSxDQUFDWSxNQUFNLEtBQUssQ0FBQztnQkFBQUgsUUFBQSxDQUFBRSxJQUFBO2dCQUFBO2NBQUE7Y0FDakJWLFFBQVEsQ0FBQ1ksVUFBVSxDQUFDLDJCQUEyQixDQUFDO2NBQ2hEWixRQUFRLENBQUNhLFNBQVMsQ0FBQywwQ0FBMEMsQ0FBQztjQUFDLE9BQUFMLFFBQUEsQ0FBQU0sTUFBQTtZQUFBO2NBSTdEYixRQUFRLEdBQUdGLElBQUksQ0FBQyxDQUFDLENBQUMsRUFFeEI7Y0FBQSxNQUNJRSxRQUFRLEtBQUssUUFBUSxJQUFJQSxRQUFRLEtBQUssSUFBSTtnQkFBQU8sUUFBQSxDQUFBRSxJQUFBO2dCQUFBO2NBQUE7Y0FDMUNWLFFBQVEsQ0FBQ2UsT0FBTyxDQUFDLHNCQUFzQixDQUFDO2NBQ3hDZixRQUFRLENBQUNlLE9BQU8sQ0FBQyx5Q0FBeUMsQ0FBQztjQUFDLE9BQUFQLFFBQUEsQ0FBQU0sTUFBQTtZQUFBO2NBSWhFO2NBQ01aLFdBQVcsR0FBR0YsUUFBUSxDQUFDZ0IsY0FBYyxDQUFDLENBQUM7Y0FDdkNiLFFBQVEsR0FBR0gsUUFBUSxDQUFDaUIsb0JBQW9CLENBQUNmLFdBQVcsQ0FBQztjQUFBLE1BRXZELENBQUNDLFFBQVEsSUFBSSxDQUFDQSxRQUFRLENBQUNGLFFBQVEsQ0FBQztnQkFBQU8sUUFBQSxDQUFBRSxJQUFBO2dCQUFBO2NBQUE7Y0FDaENWLFFBQVEsQ0FBQ1ksVUFBVSxTQUFBTSxNQUFBLENBQVNqQixRQUFRLGdDQUE2QixDQUFDO2NBQUMsT0FBQU8sUUFBQSxDQUFBTSxNQUFBO1lBQUE7Y0FJakVWLFFBQVEsR0FBR0QsUUFBUSxDQUFDRixRQUFRLENBQUM7Y0FBQSxNQUUvQkcsUUFBUSxDQUFDZSxJQUFJLEtBQUssV0FBVztnQkFBQVgsUUFBQSxDQUFBRSxJQUFBO2dCQUFBO2NBQUE7Y0FDN0JWLFFBQVEsQ0FBQ1ksVUFBVSxTQUFBTSxNQUFBLENBQVNqQixRQUFRLHFCQUFrQixDQUFDO2NBQUMsT0FBQU8sUUFBQSxDQUFBTSxNQUFBO1lBQUE7Y0FBQSxJQUl2RFYsUUFBUSxDQUFDZ0IsT0FBTztnQkFBQVosUUFBQSxDQUFBRSxJQUFBO2dCQUFBO2NBQUE7Y0FDakJWLFFBQVEsQ0FBQ1ksVUFBVSxTQUFBTSxNQUFBLENBQVNqQixRQUFRLHNDQUFtQyxDQUFDO2NBQUMsT0FBQU8sUUFBQSxDQUFBTSxNQUFBO1lBQUE7Y0FJN0U7Y0FDTVQsS0FBSyxHQUFHRCxRQUFRLENBQUNnQixPQUFPLENBQUNDLEtBQUssQ0FBQyxJQUFJLENBQUM7Y0FDMUNoQixLQUFLLENBQUNpQixPQUFPLENBQUMsVUFBQUMsSUFBSTtnQkFBQSxPQUFJdkIsUUFBUSxDQUFDZSxPQUFPLENBQUNRLElBQUksQ0FBQztjQUFBLEVBQUM7WUFBQztZQUFBO2NBQUEsT0FBQWYsUUFBQSxDQUFBZ0IsSUFBQTtVQUFBO1FBQUEsR0FBQTFCLE9BQUE7TUFBQSxDQUNqRDtNQUFBLFNBQUEyQixRQUFBQyxFQUFBLEVBQUFDLEdBQUE7UUFBQSxPQUFBakMsUUFBQSxDQUFBa0MsS0FBQSxPQUFBQyxTQUFBO01BQUE7TUFBQSxPQUFBSixPQUFBO0lBQUE7RUFBQTtBQUFBO0FBR0wsaUVBQWVwQyxVQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvdGVybWluYWwvY29tbWFuZHMvQ2F0Q29tbWFuZC5qcz81MDljIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDYXRDb21tYW5kIC0gRGlzcGxheSBmaWxlIGNvbnRlbnRzXHJcbiAqL1xyXG5jbGFzcyBDYXRDb21tYW5kIHtcclxuICAgIGFzeW5jIGV4ZWN1dGUoYXJncywgdGVybWluYWwpIHtcclxuICAgICAgICBpZiAoYXJncy5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgdGVybWluYWwud3JpdGVFcnJvcignY2F0OiBtaXNzaW5nIGZpbGUgb3BlcmFuZCcpO1xyXG4gICAgICAgICAgICB0ZXJtaW5hbC53cml0ZUluZm8oJ1RyeSBcXCdjYXQgLS1oZWxwXFwnIGZvciBtb3JlIGluZm9ybWF0aW9uLicpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbnN0IGZpbGVOYW1lID0gYXJnc1swXTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBIYW5kbGUgaGVscCBmbGFnXHJcbiAgICAgICAgaWYgKGZpbGVOYW1lID09PSAnLS1oZWxwJyB8fCBmaWxlTmFtZSA9PT0gJy1oJykge1xyXG4gICAgICAgICAgICB0ZXJtaW5hbC53cml0ZWxuKCdVc2FnZTogY2F0IFtGSUxFXS4uLicpO1xyXG4gICAgICAgICAgICB0ZXJtaW5hbC53cml0ZWxuKCdDb25jYXRlbmF0ZSBGSUxFKHMpIHRvIHN0YW5kYXJkIG91dHB1dC4nKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAvLyBHZXQgZmlsZSBmcm9tIGN1cnJlbnQgZGlyZWN0b3J5XHJcbiAgICAgICAgY29uc3QgY3VycmVudFBhdGggPSB0ZXJtaW5hbC5nZXRDdXJyZW50UGF0aCgpO1xyXG4gICAgICAgIGNvbnN0IGNvbnRlbnRzID0gdGVybWluYWwuZ2V0RGlyZWN0b3J5Q29udGVudHMoY3VycmVudFBhdGgpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmICghY29udGVudHMgfHwgIWNvbnRlbnRzW2ZpbGVOYW1lXSkge1xyXG4gICAgICAgICAgICB0ZXJtaW5hbC53cml0ZUVycm9yKGBjYXQ6ICR7ZmlsZU5hbWV9OiBObyBzdWNoIGZpbGUgb3IgZGlyZWN0b3J5YCk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uc3QgZmlsZUl0ZW0gPSBjb250ZW50c1tmaWxlTmFtZV07XHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYgKGZpbGVJdGVtLnR5cGUgPT09ICdkaXJlY3RvcnknKSB7XHJcbiAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlRXJyb3IoYGNhdDogJHtmaWxlTmFtZX06IElzIGEgZGlyZWN0b3J5YCk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYgKCFmaWxlSXRlbS5jb250ZW50KSB7XHJcbiAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlRXJyb3IoYGNhdDogJHtmaWxlTmFtZX06IFBlcm1pc3Npb24gZGVuaWVkIG9yIGVtcHR5IGZpbGVgKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAvLyBEaXNwbGF5IGZpbGUgY29udGVudCAtIHNwbGl0IGJ5IG5ld2xpbmVzIGZvciBwcm9wZXIgZm9ybWF0dGluZ1xyXG4gICAgICAgIGNvbnN0IGxpbmVzID0gZmlsZUl0ZW0uY29udGVudC5zcGxpdCgnXFxuJyk7XHJcbiAgICAgICAgbGluZXMuZm9yRWFjaChsaW5lID0+IHRlcm1pbmFsLndyaXRlbG4obGluZSkpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDYXRDb21tYW5kO1xyXG4iXSwibmFtZXMiOlsiQ2F0Q29tbWFuZCIsIl9jbGFzc0NhbGxDaGVjayIsIl9jcmVhdGVDbGFzcyIsImtleSIsInZhbHVlIiwiX2V4ZWN1dGUiLCJfYXN5bmNUb0dlbmVyYXRvciIsIl9yZWdlbmVyYXRvclJ1bnRpbWUiLCJtYXJrIiwiX2NhbGxlZSIsImFyZ3MiLCJ0ZXJtaW5hbCIsImZpbGVOYW1lIiwiY3VycmVudFBhdGgiLCJjb250ZW50cyIsImZpbGVJdGVtIiwibGluZXMiLCJ3cmFwIiwiX2NhbGxlZSQiLCJfY29udGV4dCIsInByZXYiLCJuZXh0IiwibGVuZ3RoIiwid3JpdGVFcnJvciIsIndyaXRlSW5mbyIsImFicnVwdCIsIndyaXRlbG4iLCJnZXRDdXJyZW50UGF0aCIsImdldERpcmVjdG9yeUNvbnRlbnRzIiwiY29uY2F0IiwidHlwZSIsImNvbnRlbnQiLCJzcGxpdCIsImZvckVhY2giLCJsaW5lIiwic3RvcCIsImV4ZWN1dGUiLCJfeCIsIl94MiIsImFwcGx5IiwiYXJndW1lbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7829\n");

/***/ }),

/***/ 3502:
/*!*******************************************************************!*\
  !*** ./resources/js/components/terminal/commands/ClearCommand.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n/**\r\n * ClearCommand - Clear terminal screen\r\n */\nvar ClearCommand = /*#__PURE__*/function () {\n  function ClearCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, ClearCommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(ClearCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              terminal.clear();\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ClearCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzUwMi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRkEsSUFHTUEsWUFBWTtFQUFBLFNBQUFBLGFBQUE7SUFBQUMsaUZBQUEsT0FBQUQsWUFBQTtFQUFBO0VBQUEsT0FBQUUsOEVBQUEsQ0FBQUYsWUFBQTtJQUFBRyxHQUFBO0lBQUFDLEtBQUE7TUFBQSxJQUFBQyxRQUFBLEdBQUFDLG1GQUFBLGVBQUFDLHNFQUFBLENBQ2QsU0FBQUUsUUFBY0MsSUFBSSxFQUFFQyxRQUFRO1FBQUEsT0FBQUosc0VBQUEsVUFBQU0sU0FBQUMsUUFBQTtVQUFBLGtCQUFBQSxRQUFBLENBQUFDLElBQUEsR0FBQUQsUUFBQSxDQUFBRSxJQUFBO1lBQUE7Y0FDeEJMLFFBQVEsQ0FBQ00sS0FBSyxDQUFDLENBQUM7WUFBQztZQUFBO2NBQUEsT0FBQUgsUUFBQSxDQUFBSSxJQUFBO1VBQUE7UUFBQSxHQUFBVCxPQUFBO01BQUEsQ0FDcEI7TUFBQSxTQUFBVSxRQUFBQyxFQUFBLEVBQUFDLEdBQUE7UUFBQSxPQUFBaEIsUUFBQSxDQUFBaUIsS0FBQSxPQUFBQyxTQUFBO01BQUE7TUFBQSxPQUFBSixPQUFBO0lBQUE7RUFBQTtBQUFBO0FBR0wsaUVBQWVuQixZQUFZIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvdGVybWluYWwvY29tbWFuZHMvQ2xlYXJDb21tYW5kLmpzPzllZmQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENsZWFyQ29tbWFuZCAtIENsZWFyIHRlcm1pbmFsIHNjcmVlblxyXG4gKi9cclxuY2xhc3MgQ2xlYXJDb21tYW5kIHtcclxuICAgIGFzeW5jIGV4ZWN1dGUoYXJncywgdGVybWluYWwpIHtcclxuICAgICAgICB0ZXJtaW5hbC5jbGVhcigpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDbGVhckNvbW1hbmQ7XHJcbiJdLCJuYW1lcyI6WyJDbGVhckNvbW1hbmQiLCJfY2xhc3NDYWxsQ2hlY2siLCJfY3JlYXRlQ2xhc3MiLCJrZXkiLCJ2YWx1ZSIsIl9leGVjdXRlIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJfcmVnZW5lcmF0b3JSdW50aW1lIiwibWFyayIsIl9jYWxsZWUiLCJhcmdzIiwidGVybWluYWwiLCJ3cmFwIiwiX2NhbGxlZSQiLCJfY29udGV4dCIsInByZXYiLCJuZXh0IiwiY2xlYXIiLCJzdG9wIiwiZXhlY3V0ZSIsIl94IiwiX3gyIiwiYXBwbHkiLCJhcmd1bWVudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3502\n");

/***/ }),

/***/ 6927:
/*!******************************************************************!*\
  !*** ./resources/js/components/terminal/commands/ExitCommand.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _EventBus_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../EventBus.js */ 2454);\n\n\n/**\r\n * ExitCommand - Exit terminal or alien mode\r\n */\n\nvar ExitCommand = /*#__PURE__*/function () {\n  function ExitCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, ExitCommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(ExitCommand, [{\n    key: \"execute\",\n    value: function execute(args, terminal) {\n      terminal.writeln('');\n\n      // Check if we're in alien mode\n      if (window.alienTerminalActive) {\n        terminal.writeInfo('Exiting ABDULMELINK system...');\n        terminal.writeln('');\n\n        // Small delay for message to be visible\n        setTimeout(function () {\n          // Get the ThemeCommand instance to call exitAlienTerminal\n          var themeCommand = terminal.commandRegistry.get('theme');\n          if (themeCommand && themeCommand.exitAlienTerminal) {\n            themeCommand.exitAlienTerminal();\n          } else {\n            // Fallback: manually exit\n            if (window.alienTerminalContainer) {\n              window.alienTerminalContainer.remove();\n            }\n            window.alienTerminalActive = false;\n            window.alienTerminalInstance = null;\n            window.alienTerminalContainer = null;\n\n            // Restore desktop\n            var desktopContainer = document.getElementById('desktop');\n            if (desktopContainer) {\n              desktopContainer.style.display = '';\n            }\n            var dockContainer = document.querySelector('.dock');\n            if (dockContainer) {\n              dockContainer.style.display = '';\n            }\n\n            // Restore all windows\n            var allWindows = document.querySelectorAll('.LinkOS-window');\n            allWindows.forEach(function (win) {\n              win.style.display = '';\n            });\n          }\n        }, 500);\n      } else {\n        // Normal terminal mode - close the window via EventBus\n        terminal.writeInfo('Closing terminal...');\n        terminal.writeln('');\n        setTimeout(function () {\n          var terminalWindow = terminal.container.closest('.LinkOS-window');\n          if (terminalWindow) {\n            var _terminalWindow$id;\n            var windowId = (_terminalWindow$id = terminalWindow.id) === null || _terminalWindow$id === void 0 ? void 0 : _terminalWindow$id.replace('window-', '');\n            if (windowId) {\n              // Emit window close event so WindowManager can handle it properly\n              _EventBus_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].emit('window:close-requested', {\n                windowId: windowId\n              });\n            }\n          }\n        }, 300);\n      }\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ExitCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjkyNy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDeUM7QUFBQSxJQUVuQ0MsV0FBVztFQUFBLFNBQUFBLFlBQUE7SUFBQUMsaUZBQUEsT0FBQUQsV0FBQTtFQUFBO0VBQUEsT0FBQUUsOEVBQUEsQ0FBQUYsV0FBQTtJQUFBRyxHQUFBO0lBQUFDLEtBQUEsRUFDYixTQUFBQyxRQUFRQyxJQUFJLEVBQUVDLFFBQVEsRUFBRTtNQUNwQkEsUUFBUSxDQUFDQyxPQUFPLENBQUMsRUFBRSxDQUFDOztNQUVwQjtNQUNBLElBQUlDLE1BQU0sQ0FBQ0MsbUJBQW1CLEVBQUU7UUFDNUJILFFBQVEsQ0FBQ0ksU0FBUyxDQUFDLCtCQUErQixDQUFDO1FBQ25ESixRQUFRLENBQUNDLE9BQU8sQ0FBQyxFQUFFLENBQUM7O1FBRXBCO1FBQ0FJLFVBQVUsQ0FBQyxZQUFNO1VBQ2I7VUFDQSxJQUFNQyxZQUFZLEdBQUdOLFFBQVEsQ0FBQ08sZUFBZSxDQUFDQyxHQUFHLENBQUMsT0FBTyxDQUFDO1VBQzFELElBQUlGLFlBQVksSUFBSUEsWUFBWSxDQUFDRyxpQkFBaUIsRUFBRTtZQUNoREgsWUFBWSxDQUFDRyxpQkFBaUIsQ0FBQyxDQUFDO1VBQ3BDLENBQUMsTUFBTTtZQUNIO1lBQ0EsSUFBSVAsTUFBTSxDQUFDUSxzQkFBc0IsRUFBRTtjQUMvQlIsTUFBTSxDQUFDUSxzQkFBc0IsQ0FBQ0MsTUFBTSxDQUFDLENBQUM7WUFDMUM7WUFFQVQsTUFBTSxDQUFDQyxtQkFBbUIsR0FBRyxLQUFLO1lBQ2xDRCxNQUFNLENBQUNVLHFCQUFxQixHQUFHLElBQUk7WUFDbkNWLE1BQU0sQ0FBQ1Esc0JBQXNCLEdBQUcsSUFBSTs7WUFFcEM7WUFDQSxJQUFNRyxnQkFBZ0IsR0FBR0MsUUFBUSxDQUFDQyxjQUFjLENBQUMsU0FBUyxDQUFDO1lBQzNELElBQUlGLGdCQUFnQixFQUFFO2NBQ2xCQSxnQkFBZ0IsQ0FBQ0csS0FBSyxDQUFDQyxPQUFPLEdBQUcsRUFBRTtZQUN2QztZQUVBLElBQU1DLGFBQWEsR0FBR0osUUFBUSxDQUFDSyxhQUFhLENBQUMsT0FBTyxDQUFDO1lBQ3JELElBQUlELGFBQWEsRUFBRTtjQUNmQSxhQUFhLENBQUNGLEtBQUssQ0FBQ0MsT0FBTyxHQUFHLEVBQUU7WUFDcEM7O1lBRUE7WUFDQSxJQUFNRyxVQUFVLEdBQUdOLFFBQVEsQ0FBQ08sZ0JBQWdCLENBQUMsZUFBZSxDQUFDO1lBQzdERCxVQUFVLENBQUNFLE9BQU8sQ0FBQyxVQUFBQyxHQUFHLEVBQUk7Y0FDdEJBLEdBQUcsQ0FBQ1AsS0FBSyxDQUFDQyxPQUFPLEdBQUcsRUFBRTtZQUMxQixDQUFDLENBQUM7VUFDTjtRQUNKLENBQUMsRUFBRSxHQUFHLENBQUM7TUFDWCxDQUFDLE1BQU07UUFDSDtRQUNBakIsUUFBUSxDQUFDSSxTQUFTLENBQUMscUJBQXFCLENBQUM7UUFDekNKLFFBQVEsQ0FBQ0MsT0FBTyxDQUFDLEVBQUUsQ0FBQztRQUVwQkksVUFBVSxDQUFDLFlBQU07VUFDYixJQUFNbUIsY0FBYyxHQUFHeEIsUUFBUSxDQUFDeUIsU0FBUyxDQUFDQyxPQUFPLENBQUMsZUFBZSxDQUFDO1VBQ2xFLElBQUlGLGNBQWMsRUFBRTtZQUFBLElBQUFHLGtCQUFBO1lBQ2hCLElBQU1DLFFBQVEsSUFBQUQsa0JBQUEsR0FBR0gsY0FBYyxDQUFDSyxFQUFFLGNBQUFGLGtCQUFBLHVCQUFqQkEsa0JBQUEsQ0FBbUJHLE9BQU8sQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDO1lBQzFELElBQUlGLFFBQVEsRUFBRTtjQUNWO2NBQ0FwQyxvREFBUSxDQUFDdUMsSUFBSSxDQUFDLHdCQUF3QixFQUFFO2dCQUFFSCxRQUFRLEVBQVJBO2NBQVMsQ0FBQyxDQUFDO1lBQ3pEO1VBQ0o7UUFDSixDQUFDLEVBQUUsR0FBRyxDQUFDO01BQ1g7SUFDSjtFQUFDO0FBQUE7QUFHTCxpRUFBZW5DLFdBQVciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy90ZXJtaW5hbC9jb21tYW5kcy9FeGl0Q29tbWFuZC5qcz85NTM5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBFeGl0Q29tbWFuZCAtIEV4aXQgdGVybWluYWwgb3IgYWxpZW4gbW9kZVxyXG4gKi9cclxuaW1wb3J0IEV2ZW50QnVzIGZyb20gJy4uLy4uL0V2ZW50QnVzLmpzJztcclxuXHJcbmNsYXNzIEV4aXRDb21tYW5kIHtcclxuICAgIGV4ZWN1dGUoYXJncywgdGVybWluYWwpIHtcclxuICAgICAgICB0ZXJtaW5hbC53cml0ZWxuKCcnKTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBDaGVjayBpZiB3ZSdyZSBpbiBhbGllbiBtb2RlXHJcbiAgICAgICAgaWYgKHdpbmRvdy5hbGllblRlcm1pbmFsQWN0aXZlKSB7XHJcbiAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlSW5mbygnRXhpdGluZyBBQkRVTE1FTElOSyBzeXN0ZW0uLi4nKTtcclxuICAgICAgICAgICAgdGVybWluYWwud3JpdGVsbignJyk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvLyBTbWFsbCBkZWxheSBmb3IgbWVzc2FnZSB0byBiZSB2aXNpYmxlXHJcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgLy8gR2V0IHRoZSBUaGVtZUNvbW1hbmQgaW5zdGFuY2UgdG8gY2FsbCBleGl0QWxpZW5UZXJtaW5hbFxyXG4gICAgICAgICAgICAgICAgY29uc3QgdGhlbWVDb21tYW5kID0gdGVybWluYWwuY29tbWFuZFJlZ2lzdHJ5LmdldCgndGhlbWUnKTtcclxuICAgICAgICAgICAgICAgIGlmICh0aGVtZUNvbW1hbmQgJiYgdGhlbWVDb21tYW5kLmV4aXRBbGllblRlcm1pbmFsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhlbWVDb21tYW5kLmV4aXRBbGllblRlcm1pbmFsKCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIEZhbGxiYWNrOiBtYW51YWxseSBleGl0XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5hbGllblRlcm1pbmFsQ29udGFpbmVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5hbGllblRlcm1pbmFsQ29udGFpbmVyLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuYWxpZW5UZXJtaW5hbEFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5hbGllblRlcm1pbmFsSW5zdGFuY2UgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5hbGllblRlcm1pbmFsQ29udGFpbmVyID0gbnVsbDtcclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAvLyBSZXN0b3JlIGRlc2t0b3BcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBkZXNrdG9wQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Rlc2t0b3AnKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZGVza3RvcENvbnRhaW5lcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkZXNrdG9wQ29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAnJztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZG9ja0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5kb2NrJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRvY2tDb250YWluZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZG9ja0NvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIC8vIFJlc3RvcmUgYWxsIHdpbmRvd3NcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBhbGxXaW5kb3dzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm1hY29zLXdpbmRvdycpO1xyXG4gICAgICAgICAgICAgICAgICAgIGFsbFdpbmRvd3MuZm9yRWFjaCh3aW4gPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aW4uc3R5bGUuZGlzcGxheSA9ICcnO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LCA1MDApO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIE5vcm1hbCB0ZXJtaW5hbCBtb2RlIC0gY2xvc2UgdGhlIHdpbmRvdyB2aWEgRXZlbnRCdXNcclxuICAgICAgICAgICAgdGVybWluYWwud3JpdGVJbmZvKCdDbG9zaW5nIHRlcm1pbmFsLi4uJyk7XHJcbiAgICAgICAgICAgIHRlcm1pbmFsLndyaXRlbG4oJycpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB0ZXJtaW5hbFdpbmRvdyA9IHRlcm1pbmFsLmNvbnRhaW5lci5jbG9zZXN0KCcubWFjb3Mtd2luZG93Jyk7XHJcbiAgICAgICAgICAgICAgICBpZiAodGVybWluYWxXaW5kb3cpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCB3aW5kb3dJZCA9IHRlcm1pbmFsV2luZG93LmlkPy5yZXBsYWNlKCd3aW5kb3ctJywgJycpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh3aW5kb3dJZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBFbWl0IHdpbmRvdyBjbG9zZSBldmVudCBzbyBXaW5kb3dNYW5hZ2VyIGNhbiBoYW5kbGUgaXQgcHJvcGVybHlcclxuICAgICAgICAgICAgICAgICAgICAgICAgRXZlbnRCdXMuZW1pdCgnd2luZG93OmNsb3NlLXJlcXVlc3RlZCcsIHsgd2luZG93SWQgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LCAzMDApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgRXhpdENvbW1hbmQ7XHJcbiJdLCJuYW1lcyI6WyJFdmVudEJ1cyIsIkV4aXRDb21tYW5kIiwiX2NsYXNzQ2FsbENoZWNrIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJleGVjdXRlIiwiYXJncyIsInRlcm1pbmFsIiwid3JpdGVsbiIsIndpbmRvdyIsImFsaWVuVGVybWluYWxBY3RpdmUiLCJ3cml0ZUluZm8iLCJzZXRUaW1lb3V0IiwidGhlbWVDb21tYW5kIiwiY29tbWFuZFJlZ2lzdHJ5IiwiZ2V0IiwiZXhpdEFsaWVuVGVybWluYWwiLCJhbGllblRlcm1pbmFsQ29udGFpbmVyIiwicmVtb3ZlIiwiYWxpZW5UZXJtaW5hbEluc3RhbmNlIiwiZGVza3RvcENvbnRhaW5lciIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJzdHlsZSIsImRpc3BsYXkiLCJkb2NrQ29udGFpbmVyIiwicXVlcnlTZWxlY3RvciIsImFsbFdpbmRvd3MiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsIndpbiIsInRlcm1pbmFsV2luZG93IiwiY29udGFpbmVyIiwiY2xvc2VzdCIsIl90ZXJtaW5hbFdpbmRvdyRpZCIsIndpbmRvd0lkIiwiaWQiLCJyZXBsYWNlIiwiZW1pdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6927\n");

/***/ }),

/***/ 7604:
/*!*******************************************************************!*\
  !*** ./resources/js/components/terminal/commands/GamesCommand.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n/**\r\n * GamesCommand - Show available games\r\n */\nvar GamesCommand = /*#__PURE__*/function () {\n  function GamesCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, GamesCommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(GamesCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        var games;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              games = ['', '\\x1b[35m╭─────────────────────────────────────────╮\\x1b[0m', '\\x1b[35m│            Available Games              │\\x1b[0m', '\\x1b[35m╰─────────────────────────────────────────╯\\x1b[0m', '', '  \\x1b[33msnake\\x1b[0m     - Classic snake game', '  \\x1b[33mtetris\\x1b[0m    - Block puzzle game', '  \\x1b[33mtyping\\x1b[0m    - Typing speed test', '  \\x1b[33m2048\\x1b[0m      - Number puzzle game', '', '\\x1b[36mTip: Press ESC or Ctrl+C to exit any game\\x1b[0m', ''];\n              games.forEach(function (line) {\n                return terminal.writeln(line);\n              });\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GamesCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzYwNC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRkEsSUFHTUEsWUFBWTtFQUFBLFNBQUFBLGFBQUE7SUFBQUMsaUZBQUEsT0FBQUQsWUFBQTtFQUFBO0VBQUEsT0FBQUUsOEVBQUEsQ0FBQUYsWUFBQTtJQUFBRyxHQUFBO0lBQUFDLEtBQUE7TUFBQSxJQUFBQyxRQUFBLEdBQUFDLG1GQUFBLGVBQUFDLHNFQUFBLENBQ2QsU0FBQUUsUUFBY0MsSUFBSSxFQUFFQyxRQUFRO1FBQUEsSUFBQUMsS0FBQTtRQUFBLE9BQUFMLHNFQUFBLFVBQUFPLFNBQUFDLFFBQUE7VUFBQSxrQkFBQUEsUUFBQSxDQUFBQyxJQUFBLEdBQUFELFFBQUEsQ0FBQUUsSUFBQTtZQUFBO2NBQ2xCTCxLQUFLLEdBQUcsQ0FDVixFQUFFLEVBQ0YsNERBQTRELEVBQzVELDREQUE0RCxFQUM1RCw0REFBNEQsRUFDNUQsRUFBRSxFQUNGLGlEQUFpRCxFQUNqRCxnREFBZ0QsRUFDaEQsZ0RBQWdELEVBQ2hELGlEQUFpRCxFQUNqRCxFQUFFLEVBQ0YsMERBQTBELEVBQzFELEVBQUUsQ0FDTDtjQUVEQSxLQUFLLENBQUNNLE9BQU8sQ0FBQyxVQUFBQyxJQUFJO2dCQUFBLE9BQUlSLFFBQVEsQ0FBQ1MsT0FBTyxDQUFDRCxJQUFJLENBQUM7Y0FBQSxFQUFDO1lBQUM7WUFBQTtjQUFBLE9BQUFKLFFBQUEsQ0FBQU0sSUFBQTtVQUFBO1FBQUEsR0FBQVosT0FBQTtNQUFBLENBQ2pEO01BQUEsU0FBQWEsUUFBQUMsRUFBQSxFQUFBQyxHQUFBO1FBQUEsT0FBQW5CLFFBQUEsQ0FBQW9CLEtBQUEsT0FBQUMsU0FBQTtNQUFBO01BQUEsT0FBQUosT0FBQTtJQUFBO0VBQUE7QUFBQTtBQUdMLGlFQUFldEIsWUFBWSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy9jb21wb25lbnRzL3Rlcm1pbmFsL2NvbW1hbmRzL0dhbWVzQ29tbWFuZC5qcz82MGYyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBHYW1lc0NvbW1hbmQgLSBTaG93IGF2YWlsYWJsZSBnYW1lc1xyXG4gKi9cclxuY2xhc3MgR2FtZXNDb21tYW5kIHtcclxuICAgIGFzeW5jIGV4ZWN1dGUoYXJncywgdGVybWluYWwpIHtcclxuICAgICAgICBjb25zdCBnYW1lcyA9IFtcclxuICAgICAgICAgICAgJycsXHJcbiAgICAgICAgICAgICdcXHgxYlszNW3ila3ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDila5cXHgxYlswbScsXHJcbiAgICAgICAgICAgICdcXHgxYlszNW3ilIIgICAgICAgICAgICBBdmFpbGFibGUgR2FtZXMgICAgICAgICAgICAgIOKUglxceDFiWzBtJyxcclxuICAgICAgICAgICAgJ1xceDFiWzM1beKVsOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKVr1xceDFiWzBtJyxcclxuICAgICAgICAgICAgJycsXHJcbiAgICAgICAgICAgICcgIFxceDFiWzMzbXNuYWtlXFx4MWJbMG0gICAgIC0gQ2xhc3NpYyBzbmFrZSBnYW1lJyxcclxuICAgICAgICAgICAgJyAgXFx4MWJbMzNtdGV0cmlzXFx4MWJbMG0gICAgLSBCbG9jayBwdXp6bGUgZ2FtZScsXHJcbiAgICAgICAgICAgICcgIFxceDFiWzMzbXR5cGluZ1xceDFiWzBtICAgIC0gVHlwaW5nIHNwZWVkIHRlc3QnLFxyXG4gICAgICAgICAgICAnICBcXHgxYlszM20yMDQ4XFx4MWJbMG0gICAgICAtIE51bWJlciBwdXp6bGUgZ2FtZScsXHJcbiAgICAgICAgICAgICcnLFxyXG4gICAgICAgICAgICAnXFx4MWJbMzZtVGlwOiBQcmVzcyBFU0Mgb3IgQ3RybCtDIHRvIGV4aXQgYW55IGdhbWVcXHgxYlswbScsXHJcbiAgICAgICAgICAgICcnXHJcbiAgICAgICAgXTtcclxuICAgICAgICBcclxuICAgICAgICBnYW1lcy5mb3JFYWNoKGxpbmUgPT4gdGVybWluYWwud3JpdGVsbihsaW5lKSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEdhbWVzQ29tbWFuZDtcclxuIl0sIm5hbWVzIjpbIkdhbWVzQ29tbWFuZCIsIl9jbGFzc0NhbGxDaGVjayIsIl9jcmVhdGVDbGFzcyIsImtleSIsInZhbHVlIiwiX2V4ZWN1dGUiLCJfYXN5bmNUb0dlbmVyYXRvciIsIl9yZWdlbmVyYXRvclJ1bnRpbWUiLCJtYXJrIiwiX2NhbGxlZSIsImFyZ3MiLCJ0ZXJtaW5hbCIsImdhbWVzIiwid3JhcCIsIl9jYWxsZWUkIiwiX2NvbnRleHQiLCJwcmV2IiwibmV4dCIsImZvckVhY2giLCJsaW5lIiwid3JpdGVsbiIsInN0b3AiLCJleGVjdXRlIiwiX3giLCJfeDIiLCJhcHBseSIsImFyZ3VtZW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7604\n");

/***/ }),

/***/ 5730:
/*!******************************************************************!*\
  !*** ./resources/js/components/terminal/commands/HelpCommand.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n/**\r\n * HelpCommand - Display available terminal commands\r\n */\nvar HelpCommand = /*#__PURE__*/function () {\n  function HelpCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, HelpCommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(HelpCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        var commands;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              commands = ['', '\\x1b[32m╭─────────────────────────────────────────╮\\x1b[0m', '\\x1b[32m│          Available Commands             │\\x1b[0m', '\\x1b[32m╰─────────────────────────────────────────╯\\x1b[0m', '', '\\x1b[36mNavigation:\\x1b[0m', '  \\x1b[33mls\\x1b[0m        List directory contents', '  \\x1b[33mpwd\\x1b[0m       Print working directory', '  \\x1b[33mcd\\x1b[0m        Change directory', '  \\x1b[33mcat\\x1b[0m       Display file contents', '', '\\x1b[36mSystem Info:\\x1b[0m', '  \\x1b[33mwhoami\\x1b[0m    Display user information', '  \\x1b[33mneofetch\\x1b[0m  Display system information', '', '\\x1b[36mUtilities:\\x1b[0m', '  \\x1b[33mhelp\\x1b[0m      Show this help message', '  \\x1b[33mclear\\x1b[0m     Clear the terminal', '  \\x1b[33mtheme\\x1b[0m     Change terminal theme', '  \\x1b[33msound\\x1b[0m     Control sound effects', '  \\x1b[33malienboot\\x1b[0m Show ABDULMELINK boot screen', '  \\x1b[33mexit\\x1b[0m      Close terminal window', '', '\\x1b[36mGames:\\x1b[0m', '  \\x1b[33mgames\\x1b[0m     Show available games', '  \\x1b[33msnake\\x1b[0m     Classic snake game', '  \\x1b[33mtetris\\x1b[0m    Block puzzle game', '  \\x1b[33mtyping\\x1b[0m    Typing speed test', '  \\x1b[33m2048\\x1b[0m      Number puzzle game', ''];\n              commands.forEach(function (line) {\n                return terminal.writeln(line);\n              });\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HelpCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTczMC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRkEsSUFHTUEsV0FBVztFQUFBLFNBQUFBLFlBQUE7SUFBQUMsaUZBQUEsT0FBQUQsV0FBQTtFQUFBO0VBQUEsT0FBQUUsOEVBQUEsQ0FBQUYsV0FBQTtJQUFBRyxHQUFBO0lBQUFDLEtBQUE7TUFBQSxJQUFBQyxRQUFBLEdBQUFDLG1GQUFBLGVBQUFDLHNFQUFBLENBQ2IsU0FBQUUsUUFBY0MsSUFBSSxFQUFFQyxRQUFRO1FBQUEsSUFBQUMsUUFBQTtRQUFBLE9BQUFMLHNFQUFBLFVBQUFPLFNBQUFDLFFBQUE7VUFBQSxrQkFBQUEsUUFBQSxDQUFBQyxJQUFBLEdBQUFELFFBQUEsQ0FBQUUsSUFBQTtZQUFBO2NBQ2xCTCxRQUFRLEdBQUcsQ0FDYixFQUFFLEVBQ0YsNERBQTRELEVBQzVELDREQUE0RCxFQUM1RCw0REFBNEQsRUFDNUQsRUFBRSxFQUNGLDRCQUE0QixFQUM1QixvREFBb0QsRUFDcEQsb0RBQW9ELEVBQ3BELDZDQUE2QyxFQUM3QyxrREFBa0QsRUFDbEQsRUFBRSxFQUNGLDZCQUE2QixFQUM3QixxREFBcUQsRUFDckQsdURBQXVELEVBQ3ZELEVBQUUsRUFDRiwyQkFBMkIsRUFDM0IsbURBQW1ELEVBQ25ELCtDQUErQyxFQUMvQyxrREFBa0QsRUFDbEQsa0RBQWtELEVBQ2xELHlEQUF5RCxFQUN6RCxrREFBa0QsRUFDbEQsRUFBRSxFQUNGLHVCQUF1QixFQUN2QixpREFBaUQsRUFDakQsK0NBQStDLEVBQy9DLDhDQUE4QyxFQUM5Qyw4Q0FBOEMsRUFDOUMsK0NBQStDLEVBQy9DLEVBQUUsQ0FDTDtjQUVEQSxRQUFRLENBQUNNLE9BQU8sQ0FBQyxVQUFBQyxJQUFJO2dCQUFBLE9BQUlSLFFBQVEsQ0FBQ1MsT0FBTyxDQUFDRCxJQUFJLENBQUM7Y0FBQSxFQUFDO1lBQUM7WUFBQTtjQUFBLE9BQUFKLFFBQUEsQ0FBQU0sSUFBQTtVQUFBO1FBQUEsR0FBQVosT0FBQTtNQUFBLENBQ3BEO01BQUEsU0FBQWEsUUFBQUMsRUFBQSxFQUFBQyxHQUFBO1FBQUEsT0FBQW5CLFFBQUEsQ0FBQW9CLEtBQUEsT0FBQUMsU0FBQTtNQUFBO01BQUEsT0FBQUosT0FBQTtJQUFBO0VBQUE7QUFBQTtBQUdMLGlFQUFldEIsV0FBVyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy9jb21wb25lbnRzL3Rlcm1pbmFsL2NvbW1hbmRzL0hlbHBDb21tYW5kLmpzP2VjNTciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEhlbHBDb21tYW5kIC0gRGlzcGxheSBhdmFpbGFibGUgdGVybWluYWwgY29tbWFuZHNcclxuICovXHJcbmNsYXNzIEhlbHBDb21tYW5kIHtcclxuICAgIGFzeW5jIGV4ZWN1dGUoYXJncywgdGVybWluYWwpIHtcclxuICAgICAgICBjb25zdCBjb21tYW5kcyA9IFtcclxuICAgICAgICAgICAgJycsXHJcbiAgICAgICAgICAgICdcXHgxYlszMm3ila3ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDila5cXHgxYlswbScsXHJcbiAgICAgICAgICAgICdcXHgxYlszMm3ilIIgICAgICAgICAgQXZhaWxhYmxlIENvbW1hbmRzICAgICAgICAgICAgIOKUglxceDFiWzBtJyxcclxuICAgICAgICAgICAgJ1xceDFiWzMybeKVsOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKVr1xceDFiWzBtJyxcclxuICAgICAgICAgICAgJycsXHJcbiAgICAgICAgICAgICdcXHgxYlszNm1OYXZpZ2F0aW9uOlxceDFiWzBtJyxcclxuICAgICAgICAgICAgJyAgXFx4MWJbMzNtbHNcXHgxYlswbSAgICAgICAgTGlzdCBkaXJlY3RvcnkgY29udGVudHMnLFxyXG4gICAgICAgICAgICAnICBcXHgxYlszM21wd2RcXHgxYlswbSAgICAgICBQcmludCB3b3JraW5nIGRpcmVjdG9yeScsXHJcbiAgICAgICAgICAgICcgIFxceDFiWzMzbWNkXFx4MWJbMG0gICAgICAgIENoYW5nZSBkaXJlY3RvcnknLFxyXG4gICAgICAgICAgICAnICBcXHgxYlszM21jYXRcXHgxYlswbSAgICAgICBEaXNwbGF5IGZpbGUgY29udGVudHMnLFxyXG4gICAgICAgICAgICAnJyxcclxuICAgICAgICAgICAgJ1xceDFiWzM2bVN5c3RlbSBJbmZvOlxceDFiWzBtJyxcclxuICAgICAgICAgICAgJyAgXFx4MWJbMzNtd2hvYW1pXFx4MWJbMG0gICAgRGlzcGxheSB1c2VyIGluZm9ybWF0aW9uJyxcclxuICAgICAgICAgICAgJyAgXFx4MWJbMzNtbmVvZmV0Y2hcXHgxYlswbSAgRGlzcGxheSBzeXN0ZW0gaW5mb3JtYXRpb24nLFxyXG4gICAgICAgICAgICAnJyxcclxuICAgICAgICAgICAgJ1xceDFiWzM2bVV0aWxpdGllczpcXHgxYlswbScsXHJcbiAgICAgICAgICAgICcgIFxceDFiWzMzbWhlbHBcXHgxYlswbSAgICAgIFNob3cgdGhpcyBoZWxwIG1lc3NhZ2UnLFxyXG4gICAgICAgICAgICAnICBcXHgxYlszM21jbGVhclxceDFiWzBtICAgICBDbGVhciB0aGUgdGVybWluYWwnLFxyXG4gICAgICAgICAgICAnICBcXHgxYlszM210aGVtZVxceDFiWzBtICAgICBDaGFuZ2UgdGVybWluYWwgdGhlbWUnLFxyXG4gICAgICAgICAgICAnICBcXHgxYlszM21zb3VuZFxceDFiWzBtICAgICBDb250cm9sIHNvdW5kIGVmZmVjdHMnLFxyXG4gICAgICAgICAgICAnICBcXHgxYlszM21hbGllbmJvb3RcXHgxYlswbSBTaG93IEFCRFVMTUVMSU5LIGJvb3Qgc2NyZWVuJyxcclxuICAgICAgICAgICAgJyAgXFx4MWJbMzNtZXhpdFxceDFiWzBtICAgICAgQ2xvc2UgdGVybWluYWwgd2luZG93JyxcclxuICAgICAgICAgICAgJycsXHJcbiAgICAgICAgICAgICdcXHgxYlszNm1HYW1lczpcXHgxYlswbScsXHJcbiAgICAgICAgICAgICcgIFxceDFiWzMzbWdhbWVzXFx4MWJbMG0gICAgIFNob3cgYXZhaWxhYmxlIGdhbWVzJyxcclxuICAgICAgICAgICAgJyAgXFx4MWJbMzNtc25ha2VcXHgxYlswbSAgICAgQ2xhc3NpYyBzbmFrZSBnYW1lJyxcclxuICAgICAgICAgICAgJyAgXFx4MWJbMzNtdGV0cmlzXFx4MWJbMG0gICAgQmxvY2sgcHV6emxlIGdhbWUnLFxyXG4gICAgICAgICAgICAnICBcXHgxYlszM210eXBpbmdcXHgxYlswbSAgICBUeXBpbmcgc3BlZWQgdGVzdCcsXHJcbiAgICAgICAgICAgICcgIFxceDFiWzMzbTIwNDhcXHgxYlswbSAgICAgIE51bWJlciBwdXp6bGUgZ2FtZScsXHJcbiAgICAgICAgICAgICcnXHJcbiAgICAgICAgXTtcclxuICAgICAgICBcclxuICAgICAgICBjb21tYW5kcy5mb3JFYWNoKGxpbmUgPT4gdGVybWluYWwud3JpdGVsbihsaW5lKSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEhlbHBDb21tYW5kO1xyXG4iXSwibmFtZXMiOlsiSGVscENvbW1hbmQiLCJfY2xhc3NDYWxsQ2hlY2siLCJfY3JlYXRlQ2xhc3MiLCJrZXkiLCJ2YWx1ZSIsIl9leGVjdXRlIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJfcmVnZW5lcmF0b3JSdW50aW1lIiwibWFyayIsIl9jYWxsZWUiLCJhcmdzIiwidGVybWluYWwiLCJjb21tYW5kcyIsIndyYXAiLCJfY2FsbGVlJCIsIl9jb250ZXh0IiwicHJldiIsIm5leHQiLCJmb3JFYWNoIiwibGluZSIsIndyaXRlbG4iLCJzdG9wIiwiZXhlY3V0ZSIsIl94IiwiX3gyIiwiYXBwbHkiLCJhcmd1bWVudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5730\n");

/***/ }),

/***/ 2040:
/*!****************************************************************!*\
  !*** ./resources/js/components/terminal/commands/LSCommand.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ 9394);\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ 3453);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n/**\r\n * LSCommand - List directory contents\r\n */\nvar LSCommand = /*#__PURE__*/function () {\n  function LSCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this, LSCommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(LSCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().mark(function _callee(args, terminal) {\n        var flags, targetPath, _iterator, _step, arg, pathToCheck, currentPath, contents, parts, fileName, dirPath, parentContents;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              // Parse flags and target path\n              flags = {\n                longFormat: false,\n                showAll: false\n              };\n              targetPath = null;\n              _iterator = _createForOfIteratorHelper(args);\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  arg = _step.value;\n                  if (arg.startsWith('-')) {\n                    // Parse flags\n                    if (arg.includes('l')) flags.longFormat = true;\n                    if (arg.includes('a')) flags.showAll = true;\n                  } else {\n                    targetPath = arg;\n                  }\n                }\n\n                // Determine the actual path to list\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n              if (!targetPath) {\n                _context.next = 18;\n                break;\n              }\n              if (!targetPath.startsWith('~/')) {\n                _context.next = 9;\n                break;\n              }\n              pathToCheck = targetPath.substring(2);\n              _context.next = 16;\n              break;\n            case 9:\n              if (!targetPath.startsWith('/')) {\n                _context.next = 14;\n                break;\n              }\n              terminal.writeError(\"ls: cannot access '\".concat(targetPath, \"': No such file or directory\"));\n              return _context.abrupt(\"return\");\n            case 14:\n              // Relative path\n              currentPath = terminal.getCurrentPath();\n              pathToCheck = currentPath ? \"\".concat(currentPath, \"/\").concat(targetPath) : targetPath;\n            case 16:\n              _context.next = 19;\n              break;\n            case 18:\n              // No target specified, use current directory\n              pathToCheck = terminal.getCurrentPath();\n            case 19:\n              // Check if it's a file or directory\n              contents = terminal.getDirectoryContents(pathToCheck);\n              if (contents) {\n                // It's a directory, list its contents\n                this.listDirectory(contents, flags, terminal);\n              } else {\n                // Check if it's a file\n                parts = pathToCheck.split('/').filter(function (p) {\n                  return p;\n                });\n                fileName = parts.pop();\n                dirPath = parts.join('/');\n                parentContents = terminal.getDirectoryContents(dirPath);\n                if (parentContents && parentContents[fileName] && parentContents[fileName].type === 'file') {\n                  // It's a file, display it\n                  if (flags.longFormat) {\n                    this.displayLongFormat([{\n                      name: fileName,\n                      item: parentContents[fileName]\n                    }], terminal);\n                  } else {\n                    terminal.writeln(fileName);\n                  }\n                } else {\n                  terminal.writeError(\"ls: cannot access '\".concat(targetPath || pathToCheck, \"': No such file or directory\"));\n                }\n              }\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n    /**\r\n     * List directory contents\r\n     */\n  }, {\n    key: \"listDirectory\",\n    value: function listDirectory(contents, flags, terminal) {\n      if (Object.keys(contents).length === 0) {\n        return; // Empty directory\n      }\n\n      // Separate directories and files\n      var dirs = [];\n      var files = [];\n      for (var _i = 0, _Object$entries = Object.entries(contents); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_Object$entries[_i], 2),\n          name = _Object$entries$_i[0],\n          item = _Object$entries$_i[1];\n        // Skip hidden files unless -a flag\n        if (!flags.showAll && name.startsWith('.')) {\n          continue;\n        }\n        if (item.type === 'directory') {\n          dirs.push({\n            name: name,\n            item: item\n          });\n        } else {\n          files.push({\n            name: name,\n            item: item\n          });\n        }\n      }\n\n      // Sort alphabetically\n      dirs.sort(function (a, b) {\n        return a.name.localeCompare(b.name);\n      });\n      files.sort(function (a, b) {\n        return a.name.localeCompare(b.name);\n      });\n\n      // Display based on format\n      if (flags.longFormat) {\n        this.displayLongFormat([].concat(dirs, files), terminal);\n      } else {\n        this.displayShortFormat([].concat(dirs, files), terminal);\n      }\n    }\n\n    /**\r\n     * Display long format listing\r\n     */\n  }, {\n    key: \"displayLongFormat\",\n    value: function displayLongFormat(items, terminal) {\n      items.forEach(function (_ref) {\n        var name = _ref.name,\n          item = _ref.item;\n        var type = item.type === 'directory' ? 'd' : '-';\n        var permissions = 'rwxr-xr-x';\n        var size = String(item.size || 0).padStart(8);\n        var modified = item.modified || 'Jan 1 00:00';\n        var color = item.type === 'directory' ? '\\x1b[34m' : '\\x1b[0m';\n        terminal.writeln(\"\".concat(type).concat(permissions, \" 1 abdulmelik staff \").concat(size, \" \").concat(modified, \" \").concat(color).concat(name, \"\\x1B[0m\"));\n      });\n    }\n\n    /**\r\n     * Display short format (columns)\r\n     */\n  }, {\n    key: \"displayShortFormat\",\n    value: function displayShortFormat(items, terminal) {\n      var allItems = items.map(function (_ref2) {\n        var name = _ref2.name,\n          item = _ref2.item;\n        var color = item.type === 'directory' ? '\\x1b[34m' : '\\x1b[0m';\n        return {\n          display: \"\".concat(color).concat(name, \"\\x1B[0m\"),\n          actual: name\n        };\n      });\n      if (allItems.length === 0) return;\n\n      // Display in columns\n      var termWidth = terminal.terminal.cols;\n      var maxLen = Math.max.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(allItems.map(function (i) {\n        return i.actual.length;\n      }))) + 2;\n      var columns = Math.floor(termWidth / maxLen) || 1;\n      for (var i = 0; i < allItems.length; i += columns) {\n        var row = allItems.slice(i, i + columns);\n        var formattedRow = row.map(function (item, idx) {\n          var actualLen = item.actual.length;\n          var displayLen = item.display.length;\n          var padding = maxLen - actualLen;\n          return item.display + ' '.repeat(padding);\n        }).join('');\n        terminal.writeln(formattedRow);\n      }\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LSCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2040\n");

/***/ }),

/***/ 2101:
/*!**********************************************************************!*\
  !*** ./resources/js/components/terminal/commands/NeofetchCommand.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n/**\r\n * NeofetchCommand - Display system information\r\n */\nvar NeofetchCommand = /*#__PURE__*/function () {\n  function NeofetchCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, NeofetchCommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(NeofetchCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        var info;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              info = ['                   \\x1b[34m-`\\x1b[0m                    \\x1b[32mguest@abdulme.link\\x1b[0m', '                  \\x1b[34m.o+`\\x1b[0m                   \\x1b[32m-----------------\\x1b[0m', '                 \\x1b[34m`ooo/\\x1b[0m                   \\x1b[33mOS:\\x1b[0m Web Browser', '                \\x1b[34m`+oooo:\\x1b[0m                  \\x1b[33mBrowser:\\x1b[0m ' + this.getBrowserName(), '               \\x1b[34m`+oooooo:\\x1b[0m                 \\x1b[33mPlatform:\\x1b[0m ' + navigator.platform, '               \\x1b[34m-+oooooo+:\\x1b[0m                \\x1b[33mLanguage:\\x1b[0m ' + navigator.language, '             \\x1b[34m`/:-:++oooo+:\\x1b[0m               \\x1b[33mOnline:\\x1b[0m ' + navigator.onLine, '            \\x1b[34m`/++++/+++++++:\\x1b[0m              \\x1b[33mMemory:\\x1b[0m ' + (navigator.deviceMemory || 'Unknown') + 'GB', '           \\x1b[34m`/++++++++++++++:\\x1b[0m             \\x1b[33mCores:\\x1b[0m ' + navigator.hardwareConcurrency, '          \\x1b[34m`/+++ooooooooo+++/`\\x1b[0m            \\x1b[33mScreen:\\x1b[0m ' + screen.width + 'x' + screen.height, '         \\x1b[34m./ooosssso++osssssso+`\\x1b[0m          \\x1b[33mColors:\\x1b[0m 16777216', '        \\x1b[34m.oossssso-````/ossssss+`\\x1b[0m         \\x1b[33mTerminal:\\x1b[0m xterm.js', '       \\x1b[34m-osssssso.\\x1b[0m      \\x1b[34m:ssssssso.\\x1b[0m        \\x1b[33mShell:\\x1b[0m Web Terminal', '      \\x1b[34m:osssssss/\\x1b[0m        \\x1b[34mosssso+++.\\x1b[0m       \\x1b[33mUptime:\\x1b[0m ' + this.getUptime(), '     \\x1b[34m/ossssssss/\\x1b[0m        \\x1b[34m+ssssooo/-\\x1b[0m       ', '   \\x1b[34m`/ossssso+/:-\\x1b[0m        \\x1b[34m-:/+osssso+-\\x1b[0m     ', '  \\x1b[34m`+sso+:-`\\x1b[0m                 \\x1b[34m`.-/+oso:\\x1b[0m    ', ' \\x1b[34m`++:.\\x1b[0m                           \\x1b[34m`-/+/\\x1b[0m   ', ' \\x1b[34m.`\\x1b[0m                                 \\x1b[34m`/\\x1b[0m   '];\n              info.forEach(function (line) {\n                return terminal.writeln(line);\n              });\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n    /**\r\n     * Get browser name from user agent\r\n     */\n  }, {\n    key: \"getBrowserName\",\n    value: function getBrowserName() {\n      var ua = navigator.userAgent;\n      if (ua.includes('Chrome')) return 'Chrome';\n      if (ua.includes('Firefox')) return 'Firefox';\n      if (ua.includes('Safari')) return 'Safari';\n      if (ua.includes('Edge')) return 'Edge';\n      return 'Unknown';\n    }\n\n    /**\r\n     * Get formatted uptime\r\n     */\n  }, {\n    key: \"getUptime\",\n    value: function getUptime() {\n      var seconds = Math.floor(performance.now() / 1000);\n      var hours = Math.floor(seconds / 3600);\n      var minutes = Math.floor(seconds % 3600 / 60);\n      var secs = seconds % 60;\n      if (hours > 0) {\n        return \"\".concat(hours, \"h \").concat(minutes, \"m\");\n      } else if (minutes > 0) {\n        return \"\".concat(minutes, \"m \").concat(secs, \"s\");\n      } else {\n        return \"\".concat(secs, \"s\");\n      }\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NeofetchCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2101\n");

/***/ }),

/***/ 1768:
/*!*****************************************************************!*\
  !*** ./resources/js/components/terminal/commands/PWDCommand.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n/**\r\n * PWDCommand - Print working directory\r\n */\nvar PWDCommand = /*#__PURE__*/function () {\n  function PWDCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, PWDCommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(PWDCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              terminal.writeln(\"\\x1B[33m\".concat(terminal.currentDirectory, \"\\x1B[0m\"));\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PWDCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTc2OC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRkEsSUFHTUEsVUFBVTtFQUFBLFNBQUFBLFdBQUE7SUFBQUMsaUZBQUEsT0FBQUQsVUFBQTtFQUFBO0VBQUEsT0FBQUUsOEVBQUEsQ0FBQUYsVUFBQTtJQUFBRyxHQUFBO0lBQUFDLEtBQUE7TUFBQSxJQUFBQyxRQUFBLEdBQUFDLG1GQUFBLGVBQUFDLHNFQUFBLENBQ1osU0FBQUUsUUFBY0MsSUFBSSxFQUFFQyxRQUFRO1FBQUEsT0FBQUosc0VBQUEsVUFBQU0sU0FBQUMsUUFBQTtVQUFBLGtCQUFBQSxRQUFBLENBQUFDLElBQUEsR0FBQUQsUUFBQSxDQUFBRSxJQUFBO1lBQUE7Y0FDeEJMLFFBQVEsQ0FBQ00sT0FBTyxZQUFBQyxNQUFBLENBQVlQLFFBQVEsQ0FBQ1EsZ0JBQWdCLFlBQVMsQ0FBQztZQUFDO1lBQUE7Y0FBQSxPQUFBTCxRQUFBLENBQUFNLElBQUE7VUFBQTtRQUFBLEdBQUFYLE9BQUE7TUFBQSxDQUNuRTtNQUFBLFNBQUFZLFFBQUFDLEVBQUEsRUFBQUMsR0FBQTtRQUFBLE9BQUFsQixRQUFBLENBQUFtQixLQUFBLE9BQUFDLFNBQUE7TUFBQTtNQUFBLE9BQUFKLE9BQUE7SUFBQTtFQUFBO0FBQUE7QUFHTCxpRUFBZXJCLFVBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy90ZXJtaW5hbC9jb21tYW5kcy9QV0RDb21tYW5kLmpzPzgyNDMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIFBXRENvbW1hbmQgLSBQcmludCB3b3JraW5nIGRpcmVjdG9yeVxyXG4gKi9cclxuY2xhc3MgUFdEQ29tbWFuZCB7XHJcbiAgICBhc3luYyBleGVjdXRlKGFyZ3MsIHRlcm1pbmFsKSB7XHJcbiAgICAgICAgdGVybWluYWwud3JpdGVsbihgXFx4MWJbMzNtJHt0ZXJtaW5hbC5jdXJyZW50RGlyZWN0b3J5fVxceDFiWzBtYCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBXRENvbW1hbmQ7XHJcbiJdLCJuYW1lcyI6WyJQV0RDb21tYW5kIiwiX2NsYXNzQ2FsbENoZWNrIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJfZXhlY3V0ZSIsIl9hc3luY1RvR2VuZXJhdG9yIiwiX3JlZ2VuZXJhdG9yUnVudGltZSIsIm1hcmsiLCJfY2FsbGVlIiwiYXJncyIsInRlcm1pbmFsIiwid3JhcCIsIl9jYWxsZWUkIiwiX2NvbnRleHQiLCJwcmV2IiwibmV4dCIsIndyaXRlbG4iLCJjb25jYXQiLCJjdXJyZW50RGlyZWN0b3J5Iiwic3RvcCIsImV4ZWN1dGUiLCJfeCIsIl94MiIsImFwcGx5IiwiYXJndW1lbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1768\n");

/***/ }),

/***/ 1984:
/*!*******************************************************************!*\
  !*** ./resources/js/components/terminal/commands/SoundCommand.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n/**\r\n * SoundCommand - Control terminal sound effects\r\n */\nvar SoundCommand = /*#__PURE__*/function () {\n  function SoundCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, SoundCommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(SoundCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        var status, command, newState, stateText, volume, i;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (terminal.soundService) {\n                _context.next = 3;\n                break;\n              }\n              terminal.writeError('Sound service not available');\n              return _context.abrupt(\"return\");\n            case 3:\n              if (!(args.length === 0)) {\n                _context.next = 23;\n                break;\n              }\n              terminal.writeln('');\n              terminal.writeln('\\x1b[36m╭─────────────────────────────────────────╮\\x1b[0m');\n              terminal.writeln('\\x1b[36m│         Sound Settings                  │\\x1b[0m');\n              terminal.writeln('\\x1b[36m╰─────────────────────────────────────────╯\\x1b[0m');\n              terminal.writeln('');\n              status = terminal.soundService.enabled ? '\\x1b[32mEnabled\\x1b[0m' : '\\x1b[31mDisabled\\x1b[0m';\n              terminal.writeln(\"  Status: \".concat(status));\n              terminal.writeln(\"  Volume: \".concat(Math.round(terminal.soundService.volume * 100), \"%\"));\n              terminal.writeln('');\n              terminal.writeln('\\x1b[36mCommands:\\x1b[0m');\n              terminal.writeln('  \\x1b[33msound on\\x1b[0m       Enable sound effects');\n              terminal.writeln('  \\x1b[33msound off\\x1b[0m      Disable sound effects');\n              terminal.writeln('  \\x1b[33msound toggle\\x1b[0m   Toggle sound on/off');\n              terminal.writeln('  \\x1b[33msound volume <0-100>\\x1b[0m  Set volume');\n              terminal.writeln('  \\x1b[33msound test\\x1b[0m     Play test beeps');\n              terminal.writeln('  \\x1b[33msound boot\\x1b[0m     Play boot sound');\n              terminal.writeln('  \\x1b[33msound typing\\x1b[0m   Play typing sounds');\n              terminal.writeln('');\n              return _context.abrupt(\"return\");\n            case 23:\n              command = args[0].toLowerCase();\n              _context.t0 = command;\n              _context.next = _context.t0 === 'on' ? 27 : _context.t0 === 'enable' ? 27 : _context.t0 === 'off' ? 32 : _context.t0 === 'disable' ? 32 : _context.t0 === 'toggle' ? 36 : _context.t0 === 'volume' ? 41 : _context.t0 === 'test' ? 52 : _context.t0 === 'boot' ? 57 : _context.t0 === 'typing' ? 60 : 63;\n              break;\n            case 27:\n              terminal.soundService.enabled = true;\n              terminal.soundService.savePreference();\n              terminal.writeSuccess('✓ Sound effects enabled');\n              terminal.soundService.playBeep(terminal.currentTheme);\n              return _context.abrupt(\"break\", 65);\n            case 32:\n              terminal.soundService.enabled = false;\n              terminal.soundService.savePreference();\n              terminal.writeSuccess('✓ Sound effects disabled');\n              return _context.abrupt(\"break\", 65);\n            case 36:\n              newState = terminal.soundService.toggle();\n              stateText = newState ? 'enabled' : 'disabled';\n              terminal.writeSuccess(\"\\u2713 Sound effects \".concat(stateText));\n              if (newState) {\n                terminal.soundService.playBeep(terminal.currentTheme);\n              }\n              return _context.abrupt(\"break\", 65);\n            case 41:\n              if (!(args.length < 2)) {\n                _context.next = 44;\n                break;\n              }\n              terminal.writeError('Usage: sound volume <0-100>');\n              return _context.abrupt(\"return\");\n            case 44:\n              volume = parseInt(args[1]);\n              if (!(isNaN(volume) || volume < 0 || volume > 100)) {\n                _context.next = 48;\n                break;\n              }\n              terminal.writeError('Volume must be between 0 and 100');\n              return _context.abrupt(\"return\");\n            case 48:\n              terminal.soundService.setVolume(volume / 100);\n              terminal.writeSuccess(\"\\u2713 Volume set to \".concat(volume, \"%\"));\n              terminal.soundService.playBeep(terminal.currentTheme);\n              return _context.abrupt(\"break\", 65);\n            case 52:\n              terminal.writeInfo('Playing test sounds...');\n              setTimeout(function () {\n                return terminal.soundService.playBeep(terminal.currentTheme);\n              }, 100);\n              setTimeout(function () {\n                return terminal.soundService.playBeep(terminal.currentTheme);\n              }, 400);\n              setTimeout(function () {\n                return terminal.soundService.playBeep(terminal.currentTheme);\n              }, 700);\n              return _context.abrupt(\"break\", 65);\n            case 57:\n              terminal.writeInfo(\"Playing \".concat(terminal.currentTheme, \" boot sequence...\"));\n              terminal.soundService.playBootSound(terminal.currentTheme);\n              return _context.abrupt(\"break\", 65);\n            case 60:\n              terminal.writeInfo('Playing typing sounds...');\n              for (i = 0; i < 10; i++) {\n                setTimeout(function () {\n                  terminal.soundService.playKeypressSound(terminal.currentTheme);\n                }, i * 100);\n              }\n              return _context.abrupt(\"break\", 65);\n            case 63:\n              terminal.writeError(\"sound: unknown command '\".concat(command, \"'\"));\n              terminal.writeInfo('Type \\'sound\\' for help');\n            case 65:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SoundCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1984\n");

/***/ }),

/***/ 9902:
/*!*******************************************************************!*\
  !*** ./resources/js/components/terminal/commands/ThemeCommand.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ 3453);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n/**\r\n * ThemeCommand - Change terminal theme\r\n */\nvar ThemeCommand = /*#__PURE__*/function () {\n  function ThemeCommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, ThemeCommand);\n    this.themes = {\n      'default': {\n        name: 'Default (LinkOS Terminal)',\n        description: 'Classic LinkOS Terminal.app colors',\n        background: '#000000',\n        foreground: '#e0e0e0',\n        cursor: '#00ff00',\n        cursorAccent: '#000000',\n        selection: 'rgba(255, 255, 255, 0.3)',\n        black: '#2e3436',\n        red: '#ff5555',\n        green: '#50fa7b',\n        yellow: '#f1fa8c',\n        blue: '#4d9ef7',\n        magenta: '#ff79c6',\n        cyan: '#8be9fd',\n        white: '#e0e0e0',\n        brightBlack: '#888888',\n        brightRed: '#ff8888',\n        brightGreen: '#88ffaa',\n        brightYellow: '#ffffaa',\n        brightBlue: '#88ccff',\n        brightMagenta: '#ffaaff',\n        brightCyan: '#aaffff',\n        brightWhite: '#ffffff'\n      },\n      'alien': {\n        name: 'USCSS Nostromo',\n        description: 'Weyland-Yutani MU/TH/UR 6000 System',\n        background: '#000000',\n        foreground: '#39ff14',\n        cursor: '#39ff14',\n        cursorAccent: '#000000',\n        selection: 'rgba(57, 255, 20, 0.2)',\n        black: '#000000',\n        red: '#ff3b30',\n        green: '#39ff14',\n        yellow: '#ffcc00',\n        blue: '#00a6ff',\n        magenta: '#ff2d55',\n        cyan: '#00ffcc',\n        white: '#8fbc8f',\n        brightBlack: '#1a4d1a',\n        brightRed: '#ff6961',\n        brightGreen: '#6bff4d',\n        brightYellow: '#ffeb3b',\n        brightBlue: '#4fc3f7',\n        brightMagenta: '#ff80ab',\n        brightCyan: '#64ffda',\n        brightWhite: '#adff2f',\n        sound: 'alien'\n      },\n      'matrix': {\n        name: 'The Matrix',\n        description: 'Digital rain cascading code',\n        background: '#000000',\n        foreground: '#00ff41',\n        cursor: '#00ff41',\n        cursorAccent: '#000000',\n        selection: 'rgba(0, 255, 65, 0.3)',\n        black: '#000000',\n        red: '#ff073a',\n        green: '#00ff41',\n        yellow: '#fff113',\n        blue: '#0066ff',\n        magenta: '#ff00ff',\n        cyan: '#00ffff',\n        white: '#ffffff',\n        brightBlack: '#555555',\n        brightRed: '#ff6c60',\n        brightGreen: '#a8ff60',\n        brightYellow: '#ffffb6',\n        brightBlue: '#96cbfe',\n        brightMagenta: '#ff73fd',\n        brightCyan: '#c6c5fe',\n        brightWhite: '#ffffff'\n      },\n      'cyberpunk': {\n        name: 'Cyberpunk 2077',\n        description: 'Night City netrunner interface',\n        background: '#0a0014',\n        foreground: '#ff006e',\n        cursor: '#ff006e',\n        cursorAccent: '#0a0014',\n        selection: 'rgba(255, 0, 110, 0.3)',\n        black: '#0a0014',\n        red: '#ff006e',\n        green: '#00ffaa',\n        yellow: '#ffaa00',\n        blue: '#00aaff',\n        magenta: '#ff00ff',\n        cyan: '#00ffff',\n        white: '#ffffff',\n        brightBlack: '#555555',\n        brightRed: '#ff4499',\n        brightGreen: '#44ffcc',\n        brightYellow: '#ffcc44',\n        brightBlue: '#44ccff',\n        brightMagenta: '#ff44ff',\n        brightCyan: '#44ffff',\n        brightWhite: '#ffffff'\n      },\n      'retro': {\n        name: 'Retro Amber',\n        description: 'Vintage CRT monitor glow',\n        background: '#1a0f00',\n        foreground: '#ffb000',\n        cursor: '#ffb000',\n        cursorAccent: '#1a0f00',\n        selection: 'rgba(255, 176, 0, 0.3)',\n        black: '#1a0f00',\n        red: '#ff8c00',\n        green: '#ffb000',\n        yellow: '#ffd700',\n        blue: '#ff9f40',\n        magenta: '#ff7f50',\n        cyan: '#ffcc80',\n        white: '#ffe4b5',\n        brightBlack: '#8b4513',\n        brightRed: '#ffa54f',\n        brightGreen: '#ffc966',\n        brightYellow: '#ffe87c',\n        brightBlue: '#ffb766',\n        brightMagenta: '#ff9966',\n        brightCyan: '#ffd9a3',\n        brightWhite: '#fffacd'\n      },\n      'apple-ii': {\n        name: 'Apple II',\n        description: 'Green phosphor screen nostalgia',\n        background: '#0f380f',\n        foreground: '#33ff33',\n        cursor: '#33ff33',\n        cursorAccent: '#0f380f',\n        selection: 'rgba(51, 255, 51, 0.25)',\n        black: '#0f380f',\n        red: '#66ff66',\n        green: '#33ff33',\n        yellow: '#99ff99',\n        blue: '#44ff44',\n        magenta: '#77ff77',\n        cyan: '#88ff88',\n        white: '#ccffcc',\n        brightBlack: '#226622',\n        brightRed: '#77ff77',\n        brightGreen: '#55ff55',\n        brightYellow: '#aaffaa',\n        brightBlue: '#66ff66',\n        brightMagenta: '#88ff88',\n        brightCyan: '#99ff99',\n        brightWhite: '#eeffee'\n      },\n      'tron': {\n        name: 'TRON Legacy',\n        description: 'The Grid digital frontier',\n        background: '#000408',\n        foreground: '#6fc3df',\n        cursor: '#6fc3df',\n        cursorAccent: '#000408',\n        selection: 'rgba(111, 195, 223, 0.3)',\n        black: '#000408',\n        red: '#ff410d',\n        green: '#00e8c6',\n        yellow: '#ffb300',\n        blue: '#6fc3df',\n        magenta: '#ae81ff',\n        cyan: '#00e8ff',\n        white: '#a4c5d9',\n        brightBlack: '#1c2833',\n        brightRed: '#ff6f4f',\n        brightGreen: '#33ffd9',\n        brightYellow: '#ffd633',\n        brightBlue: '#8fd9f0',\n        brightMagenta: '#c8a0ff',\n        brightCyan: '#66f0ff',\n        brightWhite: '#dceef7'\n      },\n      'hacker': {\n        name: 'Black Hat',\n        description: 'Underground IRC green on black',\n        background: '#000000',\n        foreground: '#00ff00',\n        cursor: '#00ff00',\n        cursorAccent: '#000000',\n        selection: 'rgba(0, 255, 0, 0.25)',\n        black: '#000000',\n        red: '#ff0000',\n        green: '#00ff00',\n        yellow: '#ffff00',\n        blue: '#0000ff',\n        magenta: '#ff00ff',\n        cyan: '#00ffff',\n        white: '#ffffff',\n        brightBlack: '#808080',\n        brightRed: '#ff8080',\n        brightGreen: '#80ff80',\n        brightYellow: '#ffff80',\n        brightBlue: '#8080ff',\n        brightMagenta: '#ff80ff',\n        brightCyan: '#80ffff',\n        brightWhite: '#ffffff'\n      },\n      'dracula': {\n        name: 'Dracula',\n        description: 'Dark theme with purple accents',\n        background: '#282a36',\n        foreground: '#f8f8f2',\n        cursor: '#f8f8f2',\n        selection: 'rgba(68, 71, 90, 0.5)',\n        black: '#21222c',\n        red: '#ff5555',\n        green: '#50fa7b',\n        yellow: '#f1fa8c',\n        blue: '#bd93f9',\n        magenta: '#ff79c6',\n        cyan: '#8be9fd',\n        white: '#f8f8f2',\n        brightBlack: '#6272a4',\n        brightRed: '#ff6e6e',\n        brightGreen: '#69ff94',\n        brightYellow: '#ffffa5',\n        brightBlue: '#d6acff',\n        brightMagenta: '#ff92df',\n        brightCyan: '#a4ffff',\n        brightWhite: '#ffffff'\n      },\n      'monokai': {\n        name: 'Monokai',\n        description: 'Sublime Text classic',\n        background: '#272822',\n        foreground: '#f8f8f2',\n        cursor: '#f8f8f0',\n        selection: 'rgba(73, 72, 62, 0.8)',\n        black: '#272822',\n        red: '#f92672',\n        green: '#a6e22e',\n        yellow: '#f4bf75',\n        blue: '#66d9ef',\n        magenta: '#ae81ff',\n        cyan: '#a1efe4',\n        white: '#f8f8f2',\n        brightBlack: '#75715e',\n        brightRed: '#f92672',\n        brightGreen: '#a6e22e',\n        brightYellow: '#f4bf75',\n        brightBlue: '#66d9ef',\n        brightMagenta: '#ae81ff',\n        brightCyan: '#a1efe4',\n        brightWhite: '#f9f8f5'\n      },\n      'nord': {\n        name: 'Nord',\n        description: 'Arctic, north-bluish color palette',\n        background: '#2e3440',\n        foreground: '#d8dee9',\n        cursor: '#d8dee9',\n        selection: 'rgba(67, 76, 94, 0.5)',\n        black: '#3b4252',\n        red: '#bf616a',\n        green: '#a3be8c',\n        yellow: '#ebcb8b',\n        blue: '#81a1c1',\n        magenta: '#b48ead',\n        cyan: '#88c0d0',\n        white: '#e5e9f0',\n        brightBlack: '#4c566a',\n        brightRed: '#bf616a',\n        brightGreen: '#a3be8c',\n        brightYellow: '#ebcb8b',\n        brightBlue: '#81a1c1',\n        brightMagenta: '#b48ead',\n        brightCyan: '#8fbcbb',\n        brightWhite: '#eceff4'\n      }\n    };\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(ThemeCommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee(args, terminal) {\n        var _this = this;\n        var themeName, theme;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(args.length === 0)) {\n                _context.next = 11;\n                break;\n              }\n              terminal.writeln('');\n              terminal.writeln('\\x1b[36m╭─────────────────────────────────────────╮\\x1b[0m');\n              terminal.writeln('\\x1b[36m│          Available Themes               │\\x1b[0m');\n              terminal.writeln('\\x1b[36m╰─────────────────────────────────────────╯\\x1b[0m');\n              terminal.writeln('');\n              Object.entries(this.themes).forEach(function (_ref) {\n                var _ref2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref, 2),\n                  key = _ref2[0],\n                  theme = _ref2[1];\n                terminal.writeln(\"  \\x1B[33m\".concat(key.padEnd(15), \"\\x1B[0m \").concat(theme.name));\n                terminal.writeln(\"  \".concat(''.padEnd(15), \" \\x1B[90m\").concat(theme.description, \"\\x1B[0m\"));\n                terminal.writeln('');\n              });\n              terminal.writeln('\\x1b[36mUsage:\\x1b[0m theme <name>');\n              terminal.writeln('\\x1b[36mExample:\\x1b[0m theme alien');\n              terminal.writeln('');\n              return _context.abrupt(\"return\");\n            case 11:\n              themeName = args[0].toLowerCase();\n              if (this.themes[themeName]) {\n                _context.next = 16;\n                break;\n              }\n              terminal.writeError(\"theme: '\".concat(themeName, \"' not found\"));\n              terminal.writeInfo('Available themes: ' + Object.keys(this.themes).join(', '));\n              return _context.abrupt(\"return\");\n            case 16:\n              // Apply theme\n              theme = this.themes[themeName];\n              if (terminal.terminal && terminal.terminal.options) {\n                terminal.terminal.options.theme = theme;\n\n                // Update current theme in terminal\n                if (terminal.currentTheme !== undefined) {\n                  terminal.currentTheme = themeName;\n                }\n\n                // Save to localStorage\n                try {\n                  localStorage.setItem('terminal_theme', themeName);\n                } catch (e) {\n                  console.warn('Failed to save theme preference:', e);\n                }\n\n                // Play theme-specific beep sound\n                if (terminal.soundService) {\n                  terminal.soundService.playBeep(themeName);\n                }\n                terminal.writeSuccess(\"\\u2713 Theme changed to '\".concat(theme.name, \"'\"));\n\n                // Special handling for alien theme - create new fullscreen terminal\n                if (themeName === 'alien') {\n                  terminal.writeInfo('Activating ABDULMELINK interface...');\n\n                  // Create new alien terminal and close current one\n                  setTimeout(function () {\n                    _this.createAlienTerminal(terminal);\n                  }, 100);\n                } else {\n                  // Check if we're exiting from alien mode\n                  if (window.alienTerminalActive) {\n                    this.exitAlienTerminal();\n                  }\n                  terminal.writeInfo('Type \\'clear\\' to see theme changes');\n                }\n              } else {\n                terminal.writeError('Failed to apply theme');\n              }\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n    /**\r\n     * Create new alien fullscreen terminal\r\n     */\n  }, {\n    key: \"createAlienTerminal\",\n    value: function () {\n      var _createAlienTerminal = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee2(originalTerminal) {\n        var desktopContainer, dockContainer, allWindows, AlienBootScreenModule, AlienBootScreen, bootScreen, alienContainer, contentWrapper, terminalContainer, scanlines, vignette, crtEffect, Terminal, alienTerminal;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              // Hide all desktop elements immediately\n              desktopContainer = document.getElementById('desktop');\n              if (desktopContainer) {\n                desktopContainer.style.display = 'none';\n              }\n              dockContainer = document.querySelector('.dock');\n              if (dockContainer) {\n                dockContainer.style.display = 'none';\n              }\n\n              // Hide all windows\n              allWindows = document.querySelectorAll('.LinkOS-window');\n              allWindows.forEach(function (win) {\n                win.style.display = 'none';\n              });\n\n              // Show boot screen\n              _context2.prev = 6;\n              _context2.next = 9;\n              return __webpack_require__.e(/*! import() */ \"resources_js_components_AlienBootScreen_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../AlienBootScreen.js */ 2181));\n            case 9:\n              AlienBootScreenModule = _context2.sent;\n              AlienBootScreen = AlienBootScreenModule[\"default\"];\n              bootScreen = new AlienBootScreen();\n              _context2.next = 14;\n              return bootScreen.show(originalTerminal.soundService);\n            case 14:\n              _context2.next = 19;\n              break;\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](6);\n              console.warn('Failed to load boot screen:', _context2.t0);\n            case 19:\n              // Create fullscreen alien terminal container\n              alienContainer = document.createElement('div');\n              alienContainer.id = 'alien-terminal-container';\n              alienContainer.className = 'alien-fullscreen';\n              alienContainer.style.cssText = \"\\n            position: fixed;\\n            top: 0;\\n            left: 0;\\n            width: 100vw;\\n            height: 100vh;\\n            background: #1a1a1a;\\n            z-index: 999999;\\n        \";\n\n              // Create terminal content wrapper\n              contentWrapper = document.createElement('div');\n              contentWrapper.className = 'window-content';\n              contentWrapper.style.cssText = \"\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n            background: #000000;\\n            padding: 40px;\\n            box-sizing: border-box;\\n        \";\n\n              // Create terminal container\n              terminalContainer = document.createElement('div');\n              terminalContainer.className = 'terminal-container';\n              terminalContainer.style.cssText = \"\\n            width: 100%;\\n            height: 100%;\\n            background: #000000;\\n        \";\n              contentWrapper.appendChild(terminalContainer);\n              alienContainer.appendChild(contentWrapper);\n\n              // Add CRT effects\n              scanlines = document.createElement('div');\n              scanlines.className = 'scanlines';\n              alienContainer.appendChild(scanlines);\n              vignette = document.createElement('div');\n              vignette.className = 'vignette';\n              alienContainer.appendChild(vignette);\n              crtEffect = document.createElement('div');\n              crtEffect.className = 'crt-effect';\n              alienContainer.appendChild(crtEffect);\n              document.body.appendChild(alienContainer);\n\n              // Create new terminal instance with alien theme\n              _context2.next = 43;\n              return Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../Terminal.js */ 5431));\n            case 43:\n              Terminal = _context2.sent[\"default\"];\n              alienTerminal = new Terminal(terminalContainer); // Wait for terminal to initialize\n              _context2.next = 47;\n              return new Promise(function (resolve) {\n                var checkInit = setInterval(function () {\n                  if (alienTerminal.isInitialized) {\n                    clearInterval(checkInit);\n                    resolve();\n                  }\n                }, 50);\n              });\n            case 47:\n              // Apply alien theme to the xterm instance\n              if (alienTerminal.terminal && alienTerminal.terminal.options) {\n                alienTerminal.terminal.options.theme = this.themes.alien;\n                alienTerminal.currentTheme = 'alien';\n                localStorage.setItem('terminal_theme', 'alien');\n              }\n\n              // Store reference\n              window.alienTerminalActive = true;\n              window.alienTerminalInstance = alienTerminal;\n              window.alienTerminalContainer = alienContainer;\n\n              // Show welcome message\n              alienTerminal.writeln('');\n              alienTerminal.writeSuccess('✓ ABDULMELINK system online');\n              alienTerminal.writeInfo('Type \"exit\" or \"theme default\" to exit alien mode');\n              alienTerminal.writeln('');\n              alienTerminal.showPrompt();\n            case 56:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[6, 16]]);\n      }));\n      function createAlienTerminal(_x3) {\n        return _createAlienTerminal.apply(this, arguments);\n      }\n      return createAlienTerminal;\n    }()\n    /**\r\n     * Exit alien terminal and restore normal desktop\r\n     */\n  }, {\n    key: \"exitAlienTerminal\",\n    value: function exitAlienTerminal() {\n      if (window.alienTerminalContainer) {\n        window.alienTerminalContainer.remove();\n      }\n      window.alienTerminalActive = false;\n      window.alienTerminalInstance = null;\n      window.alienTerminalContainer = null;\n\n      // Restore desktop\n      var desktopContainer = document.getElementById('desktop');\n      if (desktopContainer) {\n        desktopContainer.style.display = '';\n      }\n      var dockContainer = document.querySelector('.dock');\n      if (dockContainer) {\n        dockContainer.style.display = '';\n      }\n\n      // Restore all windows\n      var allWindows = document.querySelectorAll('.LinkOS-window');\n      allWindows.forEach(function (win) {\n        win.style.display = '';\n      });\n    }\n\n    /**\r\n     * Hide all desktop elements (deprecated - kept for compatibility)\r\n     */\n  }, {\n    key: \"hideDesktopElements\",\n    value: function hideDesktopElements(terminalWindow) {\n      // Hide desktop container\n      var desktopContainer = document.getElementById('desktop');\n      if (desktopContainer) {\n        desktopContainer.style.display = 'none';\n        desktopContainer.setAttribute('data-hidden-by-alien', 'true');\n      }\n\n      // Hide dock\n      var dockContainer = document.querySelector('.dock');\n      if (dockContainer) {\n        dockContainer.style.display = 'none';\n        dockContainer.setAttribute('data-hidden-by-alien', 'true');\n      }\n\n      // Hide all other windows except the terminal\n      var allWindows = document.querySelectorAll('.LinkOS-window');\n      allWindows.forEach(function (win) {\n        if (win !== terminalWindow) {\n          win.style.display = 'none';\n          win.setAttribute('data-hidden-by-alien', 'true');\n        }\n      });\n    }\n\n    /**\r\n     * Make terminal fullscreen and headless\r\n     */\n  }, {\n    key: \"makeTerminalFullscreen\",\n    value: function makeTerminalFullscreen(terminal) {\n      // Find the terminal window\n      var terminalWindow = terminal.container.closest('.LinkOS-window');\n      if (terminalWindow) {\n        terminalWindow.classList.add('alien-fullscreen');\n        terminalWindow.style.cssText = \"\\n                position: fixed !important;\\n                top: 0 !important;\\n                left: 0 !important;\\n                width: 100vw !important;\\n                height: 100vh !important;\\n                max-width: 100vw !important;\\n                max-height: 100vh !important;\\n                border: none !important;\\n                border-radius: 0 !important;\\n                box-shadow: none !important;\\n                z-index: 999999 !important;\\n            \";\n\n        // Titlebar already hidden, but ensure it stays hidden\n        var titlebar = terminalWindow.querySelector('.window-titlebar');\n        if (titlebar) {\n          titlebar.style.display = 'none';\n        }\n\n        // Make terminal container fill window\n        var terminalContainer = terminalWindow.querySelector('.terminal-container');\n        if (terminalContainer) {\n          terminalContainer.style.cssText = \"\\n                    width: 100% !important;\\n                    height: 100% !important;\\n                \";\n        }\n\n        // Add CRT monitor effects (scanlines, vignette, pixel grid)\n        if (!terminalWindow.querySelector('.scanlines')) {\n          var scanlines = document.createElement('div');\n          scanlines.className = 'scanlines';\n          terminalWindow.appendChild(scanlines);\n        }\n        if (!terminalWindow.querySelector('.vignette')) {\n          var vignette = document.createElement('div');\n          vignette.className = 'vignette';\n          terminalWindow.appendChild(vignette);\n        }\n        if (!terminalWindow.querySelector('.crt-effect')) {\n          var crtEffect = document.createElement('div');\n          crtEffect.className = 'crt-effect';\n          terminalWindow.appendChild(crtEffect);\n        }\n\n        // Trigger resize\n        if (terminal.fitAddon) {\n          setTimeout(function () {\n            return terminal.fitAddon.fit();\n          }, 100);\n        }\n      }\n    }\n\n    /**\r\n     * Restore normal terminal window\r\n     */\n  }, {\n    key: \"restoreTerminalWindow\",\n    value: function restoreTerminalWindow(terminal) {\n      var terminalWindow = terminal.container.closest('.LinkOS-window');\n      if (terminalWindow && terminalWindow.classList.contains('alien-fullscreen')) {\n        // Remove alien fullscreen class (this handles most CSS resets)\n        terminalWindow.classList.remove('alien-fullscreen');\n\n        // Reset specific inline styles that were added for fullscreen\n        terminalWindow.style.position = '';\n        terminalWindow.style.top = '';\n        terminalWindow.style.left = '';\n        terminalWindow.style.width = '';\n        terminalWindow.style.height = '';\n        terminalWindow.style.maxWidth = '';\n        terminalWindow.style.maxHeight = '';\n        terminalWindow.style.border = '';\n        terminalWindow.style.borderRadius = '';\n        terminalWindow.style.boxShadow = '';\n        terminalWindow.style.zIndex = '';\n\n        // Show window titlebar\n        var titlebar = terminalWindow.querySelector('.window-titlebar');\n        if (titlebar) {\n          titlebar.style.display = '';\n        }\n\n        // Reset window-content padding that was added for bezel\n        var windowContent = terminalWindow.querySelector('.window-content');\n        if (windowContent) {\n          windowContent.style.position = '';\n          windowContent.style.top = '';\n          windowContent.style.left = '';\n          windowContent.style.right = '';\n          windowContent.style.bottom = '';\n          windowContent.style.width = '';\n          windowContent.style.height = '';\n          windowContent.style.padding = '';\n          windowContent.style.boxSizing = '';\n          windowContent.style.background = '';\n        }\n\n        // Reset terminal container\n        var terminalContainer = terminalWindow.querySelector('.terminal-container');\n        if (terminalContainer) {\n          terminalContainer.style.position = '';\n          terminalContainer.style.width = '';\n          terminalContainer.style.height = '';\n          terminalContainer.style.padding = '';\n          terminalContainer.style.margin = '';\n          terminalContainer.style.background = '';\n        }\n\n        // Restore ALL desktop elements\n        var desktopContainer = document.getElementById('desktop');\n        if (desktopContainer && desktopContainer.getAttribute('data-hidden-by-alien') === 'true') {\n          desktopContainer.style.display = '';\n          desktopContainer.removeAttribute('data-hidden-by-alien');\n        }\n        var dockContainer = document.querySelector('.dock');\n        if (dockContainer && dockContainer.getAttribute('data-hidden-by-alien') === 'true') {\n          dockContainer.style.display = '';\n          dockContainer.removeAttribute('data-hidden-by-alien');\n        }\n\n        // Restore all other windows\n        var allWindows = document.querySelectorAll('.LinkOS-window[data-hidden-by-alien=\"true\"]');\n        allWindows.forEach(function (win) {\n          win.style.display = '';\n          win.removeAttribute('data-hidden-by-alien');\n        });\n\n        // Remove CRT monitor effects\n        var scanlines = terminalWindow.querySelector('.scanlines');\n        if (scanlines) {\n          scanlines.remove();\n        }\n        var vignette = terminalWindow.querySelector('.vignette');\n        if (vignette) {\n          vignette.remove();\n        }\n        var crtEffect = terminalWindow.querySelector('.crt-effect');\n        if (crtEffect) {\n          crtEffect.remove();\n        }\n\n        // Trigger resize to fit terminal properly\n        if (terminal.fitAddon) {\n          setTimeout(function () {\n            return terminal.fitAddon.fit();\n          }, 100);\n        }\n      }\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ThemeCommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9902\n");

/***/ }),

/***/ 5568:
/*!********************************************************************!*\
  !*** ./resources/js/components/terminal/commands/WhoAmICommand.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n/**\r\n * WhoAmICommand - Display user information\r\n */\nvar WhoAmICommand = /*#__PURE__*/function () {\n  function WhoAmICommand() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, WhoAmICommand);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(WhoAmICommand, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        var profile;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              profile = ['', '    \\x1b[36m╭─────────────────────────────────╮\\x1b[0m', '    \\x1b[36m│\\x1b[0m           \\x1b[32mABDULMELIK\\x1b[0m            \\x1b[36m│\\x1b[0m', '    \\x1b[36m│\\x1b[0m      \\x1b[33mFull Stack Developer\\x1b[0m       \\x1b[36m│\\x1b[0m', '    \\x1b[36m╰─────────────────────────────────╯\\x1b[0m', '', '  \\x1b[32m🚀 Skills:\\x1b[0m Laravel, Vue.js, React, Node.js', '  \\x1b[32m💼 Experience:\\x1b[0m 5+ years web development', '  \\x1b[32m🌐 Portfolio:\\x1b[0m https://abdulme.link', '  \\x1b[32m📧 Email:\\x1b[0m contact@abdulme.link', '  \\x1b[32m🐙 GitHub:\\x1b[0m https://github.com/abdulmalik', ''];\n              profile.forEach(function (line) {\n                return terminal.writeln(line);\n              });\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WhoAmICommand);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTU2OC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRkEsSUFHTUEsYUFBYTtFQUFBLFNBQUFBLGNBQUE7SUFBQUMsaUZBQUEsT0FBQUQsYUFBQTtFQUFBO0VBQUEsT0FBQUUsOEVBQUEsQ0FBQUYsYUFBQTtJQUFBRyxHQUFBO0lBQUFDLEtBQUE7TUFBQSxJQUFBQyxRQUFBLEdBQUFDLG1GQUFBLGVBQUFDLHNFQUFBLENBQ2YsU0FBQUUsUUFBY0MsSUFBSSxFQUFFQyxRQUFRO1FBQUEsSUFBQUMsT0FBQTtRQUFBLE9BQUFMLHNFQUFBLFVBQUFPLFNBQUFDLFFBQUE7VUFBQSxrQkFBQUEsUUFBQSxDQUFBQyxJQUFBLEdBQUFELFFBQUEsQ0FBQUUsSUFBQTtZQUFBO2NBQ2xCTCxPQUFPLEdBQUcsQ0FDWixFQUFFLEVBQ0Ysd0RBQXdELEVBQ3hELHNGQUFzRixFQUN0RixzRkFBc0YsRUFDdEYsd0RBQXdELEVBQ3hELEVBQUUsRUFDRiw2REFBNkQsRUFDN0QsMERBQTBELEVBQzFELHFEQUFxRCxFQUNyRCxpREFBaUQsRUFDakQsMkRBQTJELEVBQzNELEVBQUUsQ0FDTDtjQUVEQSxPQUFPLENBQUNNLE9BQU8sQ0FBQyxVQUFBQyxJQUFJO2dCQUFBLE9BQUlSLFFBQVEsQ0FBQ1MsT0FBTyxDQUFDRCxJQUFJLENBQUM7Y0FBQSxFQUFDO1lBQUM7WUFBQTtjQUFBLE9BQUFKLFFBQUEsQ0FBQU0sSUFBQTtVQUFBO1FBQUEsR0FBQVosT0FBQTtNQUFBLENBQ25EO01BQUEsU0FBQWEsUUFBQUMsRUFBQSxFQUFBQyxHQUFBO1FBQUEsT0FBQW5CLFFBQUEsQ0FBQW9CLEtBQUEsT0FBQUMsU0FBQTtNQUFBO01BQUEsT0FBQUosT0FBQTtJQUFBO0VBQUE7QUFBQTtBQUdMLGlFQUFldEIsYUFBYSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy9jb21wb25lbnRzL3Rlcm1pbmFsL2NvbW1hbmRzL1dob0FtSUNvbW1hbmQuanM/NmQ1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogV2hvQW1JQ29tbWFuZCAtIERpc3BsYXkgdXNlciBpbmZvcm1hdGlvblxyXG4gKi9cclxuY2xhc3MgV2hvQW1JQ29tbWFuZCB7XHJcbiAgICBhc3luYyBleGVjdXRlKGFyZ3MsIHRlcm1pbmFsKSB7XHJcbiAgICAgICAgY29uc3QgcHJvZmlsZSA9IFtcclxuICAgICAgICAgICAgJycsXHJcbiAgICAgICAgICAgICcgICAgXFx4MWJbMzZt4pWt4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pWuXFx4MWJbMG0nLFxyXG4gICAgICAgICAgICAnICAgIFxceDFiWzM2beKUglxceDFiWzBtICAgICAgICAgICBcXHgxYlszMm1BQkRVTE1FTElLXFx4MWJbMG0gICAgICAgICAgICBcXHgxYlszNm3ilIJcXHgxYlswbScsXHJcbiAgICAgICAgICAgICcgICAgXFx4MWJbMzZt4pSCXFx4MWJbMG0gICAgICBcXHgxYlszM21GdWxsIFN0YWNrIERldmVsb3BlclxceDFiWzBtICAgICAgIFxceDFiWzM2beKUglxceDFiWzBtJyxcclxuICAgICAgICAgICAgJyAgICBcXHgxYlszNm3ilbDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDila9cXHgxYlswbScsXHJcbiAgICAgICAgICAgICcnLFxyXG4gICAgICAgICAgICAnICBcXHgxYlszMm3wn5qAIFNraWxsczpcXHgxYlswbSBMYXJhdmVsLCBWdWUuanMsIFJlYWN0LCBOb2RlLmpzJyxcclxuICAgICAgICAgICAgJyAgXFx4MWJbMzJt8J+SvCBFeHBlcmllbmNlOlxceDFiWzBtIDUrIHllYXJzIHdlYiBkZXZlbG9wbWVudCcsXHJcbiAgICAgICAgICAgICcgIFxceDFiWzMybfCfjJAgUG9ydGZvbGlvOlxceDFiWzBtIGh0dHBzOi8vYWJkdWxtZS5saW5rJyxcclxuICAgICAgICAgICAgJyAgXFx4MWJbMzJt8J+TpyBFbWFpbDpcXHgxYlswbSBjb250YWN0QGFiZHVsbWUubGluaycsXHJcbiAgICAgICAgICAgICcgIFxceDFiWzMybfCfkJkgR2l0SHViOlxceDFiWzBtIGh0dHBzOi8vZ2l0aHViLmNvbS9hYmR1bG1hbGlrJyxcclxuICAgICAgICAgICAgJydcclxuICAgICAgICBdO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHByb2ZpbGUuZm9yRWFjaChsaW5lID0+IHRlcm1pbmFsLndyaXRlbG4obGluZSkpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBXaG9BbUlDb21tYW5kO1xyXG4iXSwibmFtZXMiOlsiV2hvQW1JQ29tbWFuZCIsIl9jbGFzc0NhbGxDaGVjayIsIl9jcmVhdGVDbGFzcyIsImtleSIsInZhbHVlIiwiX2V4ZWN1dGUiLCJfYXN5bmNUb0dlbmVyYXRvciIsIl9yZWdlbmVyYXRvclJ1bnRpbWUiLCJtYXJrIiwiX2NhbGxlZSIsImFyZ3MiLCJ0ZXJtaW5hbCIsInByb2ZpbGUiLCJ3cmFwIiwiX2NhbGxlZSQiLCJfY29udGV4dCIsInByZXYiLCJuZXh0IiwiZm9yRWFjaCIsImxpbmUiLCJ3cml0ZWxuIiwic3RvcCIsImV4ZWN1dGUiLCJfeCIsIl94MiIsImFwcGx5IiwiYXJndW1lbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5568\n");

/***/ }),

/***/ 5383:
/*!************************************************************!*\
  !*** ./resources/js/components/terminal/games/Game2048.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ 9394);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n/**\r\n * 2048 Game - Number puzzle game for the terminal\r\n * WASD or Arrow Keys to move tiles, Q to quit\r\n * Combine tiles with the same number to reach 2048!\r\n * @class\r\n */\nvar Game2048 = /*#__PURE__*/function () {\n  /**\r\n   * Initialize 2048 Game\r\n   * @constructor\r\n   */\n  function Game2048() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, Game2048);\n    this.gameState = {\n      board: [],\n      score: 0,\n      gameRunning: false,\n      paused: false,\n      size: 4\n    };\n    this.terminal = null;\n    this.colors = {\n      2: '\\x1b[47m\\x1b[30m',\n      // White bg, black text\n      4: '\\x1b[46m\\x1b[30m',\n      // Cyan bg, black text  \n      8: '\\x1b[43m\\x1b[30m',\n      // Yellow bg, black text\n      16: '\\x1b[42m\\x1b[30m',\n      // Green bg, black text\n      32: '\\x1b[45m\\x1b[30m',\n      // Magenta bg, black text\n      64: '\\x1b[41m\\x1b[37m',\n      // Red bg, white text\n      128: '\\x1b[44m\\x1b[37m',\n      // Blue bg, white text\n      256: '\\x1b[40m\\x1b[33m',\n      // Black bg, yellow text\n      512: '\\x1b[40m\\x1b[32m',\n      // Black bg, green text\n      1024: '\\x1b[40m\\x1b[36m',\n      // Black bg, cyan text\n      2048: '\\x1b[40m\\x1b[31m' // Black bg, red text\n    };\n  }\n\n  /**\r\n   * Execute game from terminal command\r\n   * @param {Array} args - Command arguments\r\n   * @param {Terminal} terminal - Terminal instance\r\n   * @returns {Promise<void>}\r\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Game2048, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee(args, terminal) {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                this.terminal = terminal;\n                this.startGame();\n              } catch (error) {\n                console.error('Game2048: Failed to start:', error);\n                terminal.writeln('\\x1b[31mError: Failed to start 2048 game\\x1b[0m');\n              }\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }, {\n    key: \"startGame\",\n    value: function startGame() {\n      this.terminal.clear();\n      this.gameState.gameRunning = true;\n      this.gameState.score = 0;\n      this.initBoard();\n      this.addRandomTile();\n      this.addRandomTile();\n      this.terminal.writeln('\\x1b[36m🎯 2048 GAME\\x1b[0m');\n      this.terminal.writeln('\\x1b[33mUse WASD or Arrow Keys to move tiles. Q to quit.\\x1b[0m');\n      this.terminal.writeln('\\x1b[33mCombine tiles with the same number to reach 2048!\\x1b[0m\\n');\n      this.setupInputHandler();\n      this.renderGame();\n    }\n  }, {\n    key: \"initBoard\",\n    value: function initBoard() {\n      var _this = this;\n      this.gameState.board = Array(this.gameState.size).fill().map(function () {\n        return Array(_this.gameState.size).fill(0);\n      });\n    }\n  }, {\n    key: \"addRandomTile\",\n    value: function addRandomTile() {\n      var emptyCells = [];\n      for (var row = 0; row < this.gameState.size; row++) {\n        for (var col = 0; col < this.gameState.size; col++) {\n          if (this.gameState.board[row][col] === 0) {\n            emptyCells.push({\n              row: row,\n              col: col\n            });\n          }\n        }\n      }\n      if (emptyCells.length > 0) {\n        var randomCell = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n        var value = Math.random() < 0.9 ? 2 : 4;\n        this.gameState.board[randomCell.row][randomCell.col] = value;\n      }\n    }\n  }, {\n    key: \"setupInputHandler\",\n    value: function setupInputHandler() {\n      var _this2 = this;\n      this.keyDisposable = this.terminal.terminal.onKey(function (event) {\n        if (!_this2.gameState.gameRunning) return;\n        var key = event.key.toLowerCase();\n\n        // Prevent the key from being echoed to terminal\n        event.domEvent.preventDefault();\n        event.domEvent.stopPropagation();\n        var moved = false;\n        switch (key) {\n          case 'q':\n            _this2.endGame();\n            return;\n          case 'w':\n          case 'arrowup':\n            moved = _this2.move('up');\n            break;\n          case 's':\n          case 'arrowdown':\n            moved = _this2.move('down');\n            break;\n          case 'a':\n          case 'arrowleft':\n            moved = _this2.move('left');\n            break;\n          case 'd':\n          case 'arrowright':\n            moved = _this2.move('right');\n            break;\n        }\n        if (moved) {\n          _this2.addRandomTile();\n          _this2.renderGame();\n          if (_this2.checkWin()) {\n            _this2.winGame();\n          } else if (_this2.checkGameOver()) {\n            _this2.endGame();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"move\",\n    value: function move(direction) {\n      var newBoard = this.gameState.board.map(function (row) {\n        return (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(row);\n      });\n      var moved = false;\n      var scoreIncrease = 0;\n      if (direction === 'left' || direction === 'right') {\n        for (var row = 0; row < this.gameState.size; row++) {\n          var line = direction === 'left' ? newBoard[row] : newBoard[row].slice().reverse();\n          var _this$mergeLine = this.mergeLine(line),\n            newLine = _this$mergeLine.newLine,\n            score = _this$mergeLine.score;\n          scoreIncrease += score;\n          var finalLine = direction === 'left' ? newLine : newLine.reverse();\n          if (!this.arraysEqual(newBoard[row], finalLine)) {\n            moved = true;\n            newBoard[row] = finalLine;\n          }\n        }\n      } else {\n        for (var col = 0; col < this.gameState.size; col++) {\n          var _line = [];\n          for (var _row = 0; _row < this.gameState.size; _row++) {\n            _line.push(newBoard[direction === 'up' ? _row : this.gameState.size - 1 - _row][col]);\n          }\n          var _this$mergeLine2 = this.mergeLine(_line),\n            _newLine = _this$mergeLine2.newLine,\n            _score = _this$mergeLine2.score;\n          scoreIncrease += _score;\n          for (var _row2 = 0; _row2 < this.gameState.size; _row2++) {\n            var newValue = _newLine[_row2];\n            var boardRow = direction === 'up' ? _row2 : this.gameState.size - 1 - _row2;\n            if (newBoard[boardRow][col] !== newValue) {\n              moved = true;\n              newBoard[boardRow][col] = newValue;\n            }\n          }\n        }\n      }\n      if (moved) {\n        this.gameState.board = newBoard;\n        this.gameState.score += scoreIncrease;\n      }\n      return moved;\n    }\n  }, {\n    key: \"mergeLine\",\n    value: function mergeLine(line) {\n      // Remove zeros\n      var filtered = line.filter(function (val) {\n        return val !== 0;\n      });\n      var score = 0;\n\n      // Merge adjacent equal values\n      for (var i = 0; i < filtered.length - 1; i++) {\n        if (filtered[i] === filtered[i + 1]) {\n          filtered[i] *= 2;\n          score += filtered[i];\n          filtered.splice(i + 1, 1);\n        }\n      }\n\n      // Add zeros to fill the line\n      while (filtered.length < this.gameState.size) {\n        filtered.push(0);\n      }\n      return {\n        newLine: filtered,\n        score: score\n      };\n    }\n  }, {\n    key: \"arraysEqual\",\n    value: function arraysEqual(a, b) {\n      return a.length === b.length && a.every(function (val, i) {\n        return val === b[i];\n      });\n    }\n  }, {\n    key: \"checkWin\",\n    value: function checkWin() {\n      for (var row = 0; row < this.gameState.size; row++) {\n        for (var col = 0; col < this.gameState.size; col++) {\n          if (this.gameState.board[row][col] === 2048) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }, {\n    key: \"checkGameOver\",\n    value: function checkGameOver() {\n      // Check for empty cells\n      for (var row = 0; row < this.gameState.size; row++) {\n        for (var col = 0; col < this.gameState.size; col++) {\n          if (this.gameState.board[row][col] === 0) {\n            return false;\n          }\n        }\n      }\n\n      // Check for possible merges\n      for (var _row3 = 0; _row3 < this.gameState.size; _row3++) {\n        for (var _col = 0; _col < this.gameState.size; _col++) {\n          var current = this.gameState.board[_row3][_col];\n\n          // Check right neighbor\n          if (_col < this.gameState.size - 1 && this.gameState.board[_row3][_col + 1] === current) {\n            return false;\n          }\n\n          // Check bottom neighbor\n          if (_row3 < this.gameState.size - 1 && this.gameState.board[_row3 + 1][_col] === current) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"renderGame\",\n    value: function renderGame() {\n      // Clear screen and move cursor to home\n      this.terminal.terminal.write('\\x1b[2J\\x1b[H');\n      this.terminal.writeln('\\x1b[36m🎯 2048 GAME\\x1b[0m');\n      this.terminal.writeln('\\x1b[90mWASD/Arrow Keys: Move tiles | SPACE: Pause | Q/ESC: Quit\\x1b[0m');\n      this.terminal.writeln('\\x1b[90mCombine tiles with the same number to reach 2048!\\x1b[0m');\n      this.terminal.writeln('');\n      if (this.gameState.paused) {\n        this.terminal.writeln('\\x1b[43m\\x1b[30m ⏸️  PAUSED - Press SPACE to continue \\x1b[0m');\n        this.terminal.writeln('');\n      }\n      this.terminal.writeln(\"Score: \\x1B[36m\".concat(this.gameState.score, \"\\x1B[0m\"));\n      this.terminal.writeln('');\n\n      // Draw board with more compact layout\n      this.terminal.writeln('┌' + '────┬'.repeat(this.gameState.size - 1) + '────┐');\n      for (var row = 0; row < this.gameState.size; row++) {\n        var line = '│';\n        for (var col = 0; col < this.gameState.size; col++) {\n          var value = this.gameState.board[row][col];\n          var cellContent = void 0;\n          if (value === 0) {\n            cellContent = '    ';\n          } else {\n            var color = this.colors[value] || '\\x1b[37m';\n            var text = value.toString().padStart(4);\n            cellContent = \"\".concat(color).concat(text, \"\\x1B[0m\");\n          }\n          line += cellContent;\n          if (col < this.gameState.size - 1) line += '│';\n        }\n        line += '│';\n        this.terminal.writeln(line);\n        if (row < this.gameState.size - 1) {\n          this.terminal.writeln('├' + '────┼'.repeat(this.gameState.size - 1) + '────┤');\n        }\n      }\n      this.terminal.writeln('└' + '────┴'.repeat(this.gameState.size - 1) + '────┘');\n    }\n  }, {\n    key: \"winGame\",\n    value: function winGame() {\n      this.gameState.gameRunning = false;\n\n      // Dispose of the key handler\n      if (this.keyDisposable) {\n        this.keyDisposable.dispose();\n      }\n      this.saveHighScore();\n      this.terminal.writeln('\\n\\x1b[32m🎉 CONGRATULATIONS! YOU REACHED 2048! 🎉\\x1b[0m');\n      this.terminal.writeln(\"Final Score: \\x1B[36m\".concat(this.gameState.score, \"\\x1B[0m\"));\n      this.terminal.writePrompt();\n    }\n  }, {\n    key: \"endGame\",\n    value: function endGame() {\n      this.gameState.gameRunning = false;\n\n      // Dispose of the key handler\n      if (this.keyDisposable) {\n        this.keyDisposable.dispose();\n      }\n      var highScore = this.saveHighScore();\n      this.terminal.writeln('\\n\\x1b[31mGame Over!\\x1b[0m');\n      this.terminal.writeln(\"Final Score: \\x1B[36m\".concat(this.gameState.score, \"\\x1B[0m\"));\n      this.terminal.writeln(\"High Score: \\x1B[33m\".concat(highScore, \"\\x1B[0m\"));\n      this.terminal.writePrompt();\n    }\n  }, {\n    key: \"saveHighScore\",\n    value: function saveHighScore() {\n      try {\n        var stored = localStorage.getItem('2048_high_score');\n        var currentHigh = stored ? parseInt(stored) : 0;\n        var newHigh = Math.max(currentHigh, this.gameState.score);\n        localStorage.setItem('2048_high_score', newHigh.toString());\n        return newHigh;\n      } catch (e) {\n        return this.gameState.score;\n      }\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Game2048);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5383\n");

/***/ }),

/***/ 8329:
/*!*************************************************************!*\
  !*** ./resources/js/components/terminal/games/SnakeGame.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 4467);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n\n/**\r\n * Snake Game - Classic snake game for the terminal\r\n * Arrow keys or WASD to move, Q to quit, SPACE to pause\r\n * @class\r\n */\nvar SnakeGame = /*#__PURE__*/function () {\n  /**\r\n   * Initialize Snake Game\r\n   * @constructor\r\n   */\n  function SnakeGame() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, SnakeGame);\n    this.gameState = {\n      board: [],\n      snake: [{\n        x: 10,\n        y: 10\n      }],\n      food: {\n        x: 15,\n        y: 10\n      },\n      direction: {\n        x: 1,\n        y: 0\n      },\n      score: 0,\n      gameRunning: false,\n      paused: false,\n      width: 30,\n      height: 20\n    };\n    this.gameInterval = null;\n    this.terminal = null;\n    this.keyDisposable = null;\n  }\n\n  /**\r\n   * Execute game from terminal command\r\n   * @param {Array} args - Command arguments\r\n   * @param {Terminal} terminal - Terminal instance\r\n   * @returns {Promise<void>}\r\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(SnakeGame, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee(args, terminal) {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                this.terminal = terminal;\n                this.startGame();\n              } catch (error) {\n                console.error('SnakeGame: Failed to start:', error);\n                terminal.writeln('\\x1b[31mError: Failed to start Snake game\\x1b[0m');\n              }\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }, {\n    key: \"startGame\",\n    value: function startGame() {\n      var _this = this;\n      // Completely clear terminal and disable input\n      this.terminal.terminal.write('\\x1b[2J\\x1b[H'); // Clear screen and home cursor\n      this.terminal.setGameRunning(true);\n      this.gameState.gameRunning = true;\n      this.gameState.paused = false;\n\n      // Initialize snake in the center of the board\n      var centerX = Math.floor(this.gameState.width / 2);\n      var centerY = Math.floor(this.gameState.height / 2);\n      this.gameState.snake = [{\n        x: centerX,\n        y: centerY\n      }];\n      this.gameState.food = this.generateFood();\n      this.gameState.score = 0;\n      this.gameState.direction = {\n        x: 1,\n        y: 0\n      }; // Start moving right\n\n      // Initial render to show game immediately\n      this.renderGame();\n\n      // Set up input handler\n      this.setupInputHandler();\n\n      // Start game loop\n      this.gameInterval = setInterval(function () {\n        if (_this.gameState.gameRunning && !_this.gameState.paused) {\n          _this.updateGame();\n          _this.renderGame();\n        }\n      }, 150);\n    }\n  }, {\n    key: \"setupInputHandler\",\n    value: function setupInputHandler() {\n      var _this2 = this;\n      this.keyDisposable = this.terminal.terminal.onKey(function (event) {\n        var key = event.key.toLowerCase();\n\n        // Prevent the key from being echoed to terminal\n        event.domEvent.preventDefault();\n        event.domEvent.stopPropagation();\n        if (key === 'q' || key === '\\x1b') {\n          // Q or ESC\n          _this2.endGame();\n          return;\n        }\n        if (key === ' ') {\n          // Spacebar for pause\n          _this2.gameState.paused = !_this2.gameState.paused;\n          _this2.renderGame();\n          return;\n        }\n\n        // Direction controls - only change if not moving in opposite direction\n        switch (key) {\n          case 'w':\n          case 'arrowup':\n            if (_this2.gameState.direction.y === 0) {\n              _this2.gameState.direction = {\n                x: 0,\n                y: -1\n              };\n            }\n            break;\n          case 's':\n          case 'arrowdown':\n            if (_this2.gameState.direction.y === 0) {\n              _this2.gameState.direction = {\n                x: 0,\n                y: 1\n              };\n            }\n            break;\n          case 'a':\n          case 'arrowleft':\n            if (_this2.gameState.direction.x === 0) {\n              _this2.gameState.direction = {\n                x: -1,\n                y: 0\n              };\n            }\n            break;\n          case 'd':\n          case 'arrowright':\n            if (_this2.gameState.direction.x === 0) {\n              _this2.gameState.direction = {\n                x: 1,\n                y: 0\n              };\n            }\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"updateGame\",\n    value: function updateGame() {\n      // Don't update if game is not running\n      if (!this.gameState.gameRunning) {\n        return;\n      }\n      var head = _objectSpread({}, this.gameState.snake[0]);\n      head.x += this.gameState.direction.x;\n      head.y += this.gameState.direction.y;\n\n      // Check wall collision\n      if (head.x < 0 || head.x >= this.gameState.width || head.y < 0 || head.y >= this.gameState.height) {\n        this.endGame();\n        return;\n      }\n\n      // Check self collision - check if new head position collides with body segments (excluding current head)\n      for (var i = 1; i < this.gameState.snake.length; i++) {\n        var segment = this.gameState.snake[i];\n        if (segment.x === head.x && segment.y === head.y) {\n          this.endGame();\n          return;\n        }\n      }\n\n      // Add new head\n      this.gameState.snake.unshift(head);\n\n      // Check food collision\n      if (head.x === this.gameState.food.x && head.y === this.gameState.food.y) {\n        this.gameState.score += 10;\n        this.gameState.food = this.generateFood();\n        // Don't remove tail when eating food (snake grows)\n      } else {\n        // Remove tail when not eating food (snake moves)\n        this.gameState.snake.pop();\n      }\n    }\n  }, {\n    key: \"generateFood\",\n    value: function generateFood() {\n      var food;\n      do {\n        food = {\n          x: Math.floor(Math.random() * this.gameState.width),\n          y: Math.floor(Math.random() * this.gameState.height)\n        };\n      } while (this.gameState.snake.some(function (segment) {\n        return segment.x === food.x && segment.y === food.y;\n      }));\n      return food;\n    }\n  }, {\n    key: \"renderGame\",\n    value: function renderGame() {\n      var _this3 = this;\n      // Clear screen and move cursor to home\n      this.terminal.terminal.write('\\x1b[2J\\x1b[H');\n      this.terminal.writeln('\\x1b[32m🐍 SNAKE GAME\\x1b[0m');\n      this.terminal.writeln('\\x1b[90mWASD/Arrow Keys: Move | SPACE: Pause | Q/ESC: Quit\\x1b[0m');\n      this.terminal.writeln(\"Score: \\x1B[36m\".concat(this.gameState.score, \"\\x1B[0m | Length: \\x1B[33m\").concat(this.gameState.snake.length, \"\\x1B[0m\"));\n      if (this.gameState.paused) {\n        this.terminal.writeln('\\x1b[43m\\x1b[30m ⏸️  PAUSED - Press SPACE to continue \\x1b[0m');\n      }\n      this.terminal.writeln('');\n\n      // Draw game board with borders\n      this.terminal.writeln('┌' + '─'.repeat(this.gameState.width) + '┐');\n      var _loop = function _loop(y) {\n        var line = '│';\n        var _loop2 = function _loop2(x) {\n          if (_this3.gameState.snake.some(function (segment) {\n            return segment.x === x && segment.y === y;\n          })) {\n            if (x === _this3.gameState.snake[0].x && y === _this3.gameState.snake[0].y) {\n              line += '\\x1b[32m●\\x1b[0m'; // Head (solid circle)\n            } else {\n              line += '\\x1b[32m○\\x1b[0m'; // Body (hollow circle)\n            }\n          } else if (x === _this3.gameState.food.x && y === _this3.gameState.food.y) {\n            line += '\\x1b[31m♦\\x1b[0m'; // Food (diamond)\n          } else {\n            line += ' ';\n          }\n        };\n        for (var x = 0; x < _this3.gameState.width; x++) {\n          _loop2(x);\n        }\n        line += '│';\n        _this3.terminal.writeln(line);\n      };\n      for (var y = 0; y < this.gameState.height; y++) {\n        _loop(y);\n      }\n      this.terminal.writeln('└' + '─'.repeat(this.gameState.width) + '┘');\n    }\n  }, {\n    key: \"endGame\",\n    value: function endGame() {\n      var _this4 = this;\n      // Immediately stop the game to prevent further updates\n      this.gameState.gameRunning = false;\n\n      // Clear the game interval\n      if (this.gameInterval) {\n        clearInterval(this.gameInterval);\n        this.gameInterval = null;\n      }\n\n      // Dispose of the key handler\n      if (this.keyDisposable) {\n        this.keyDisposable.dispose();\n        this.keyDisposable = null;\n      }\n\n      // Wait a moment to ensure game loop stops, then show game over\n      setTimeout(function () {\n        // Clear screen and show game over\n        _this4.terminal.terminal.write('\\x1b[2J\\x1b[H');\n\n        // Restore normal terminal input handling\n        _this4.terminal.setGameRunning(false);\n\n        // Save high score\n        var highScore = _this4.saveHighScore();\n\n        // Big, visible game over display\n        _this4.terminal.writeln('');\n        _this4.terminal.writeln('\\x1b[41m\\x1b[37m                                    \\x1b[0m');\n        _this4.terminal.writeln('\\x1b[41m\\x1b[37m         🐍 GAME OVER! 🐍          \\x1b[0m');\n        _this4.terminal.writeln('\\x1b[41m\\x1b[37m                                    \\x1b[0m');\n        _this4.terminal.writeln('');\n        _this4.terminal.writeln(\"\\x1B[36m\\uD83D\\uDCCA Final Score: \\x1B[33m\".concat(_this4.gameState.score, \"\\x1B[0m\"));\n        _this4.terminal.writeln(\"\\x1B[36m\\uD83C\\uDFC6 High Score: \\x1B[33m\".concat(highScore, \"\\x1B[0m\"));\n        _this4.terminal.writeln(\"\\x1B[36m\\uD83D\\uDCCF Snake Length: \\x1B[33m\".concat(_this4.gameState.snake.length, \"\\x1B[0m\"));\n        if (_this4.gameState.score === highScore && _this4.gameState.score > 0) {\n          _this4.terminal.writeln('');\n          _this4.terminal.writeln('\\x1b[32m🎉 NEW HIGH SCORE! 🎉\\x1b[0m');\n        }\n        _this4.terminal.writeln('');\n        _this4.terminal.writeln('\\x1b[90mPress any key to return to terminal...\\x1b[0m');\n\n        // Set up a one-time key handler to return to terminal\n        var returnKeyHandler = _this4.terminal.terminal.onKey(function () {\n          returnKeyHandler.dispose();\n          _this4.terminal.writePrompt();\n        });\n      }, 100); // Small delay to ensure game loop has stopped\n    }\n  }, {\n    key: \"saveHighScore\",\n    value: function saveHighScore() {\n      var storageKey = 'snake_high_score';\n      var currentHigh = parseInt(localStorage.getItem(storageKey)) || 0;\n      var newHigh = Math.max(currentHigh, this.gameState.score);\n      localStorage.setItem(storageKey, newHigh.toString());\n      return newHigh;\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SnakeGame);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8329\n");

/***/ }),

/***/ 9040:
/*!**************************************************************!*\
  !*** ./resources/js/components/terminal/games/TetrisGame.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ 9394);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n/**\r\n * Tetris Game - Classic block puzzle game for the terminal\r\n * A/D to move, S for soft drop, W to rotate, Q to quit\r\n */\nvar TetrisGame = /*#__PURE__*/function () {\n  function TetrisGame() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, TetrisGame);\n    this.gameState = {\n      board: [],\n      currentPiece: null,\n      nextPiece: null,\n      score: 0,\n      level: 1,\n      lines: 0,\n      gameRunning: false,\n      width: 10,\n      height: 20,\n      pieceX: 0,\n      pieceY: 0\n    };\n    this.gameInterval = null;\n    this.terminal = null;\n    this.pieces = [\n    // I-piece (4x4 grid for consistency)\n    [[[0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0]],\n    // Horizontal\n    [[0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0]],\n    // Vertical\n    [[0, 0, 0, 0], [0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0]],\n    // Horizontal\n    [[0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0]] // Vertical\n    ],\n    // O-piece (2x2 - doesn't need rotation)\n    [[[1, 1], [1, 1]]],\n    // T-piece (3x3 grid)\n    [[[0, 1, 0], [1, 1, 1], [0, 0, 0]],\n    // Up\n    [[0, 1, 0], [0, 1, 1], [0, 1, 0]],\n    // Right\n    [[0, 0, 0], [1, 1, 1], [0, 1, 0]],\n    // Down\n    [[0, 1, 0], [1, 1, 0], [0, 1, 0]] // Left\n    ],\n    // S-piece (3x3 grid)\n    [[[0, 1, 1], [1, 1, 0], [0, 0, 0]],\n    // Horizontal\n    [[0, 1, 0], [0, 1, 1], [0, 0, 1]] // Vertical\n    ],\n    // Z-piece (3x3 grid)\n    [[[1, 1, 0], [0, 1, 1], [0, 0, 0]],\n    // Horizontal\n    [[0, 0, 1], [0, 1, 1], [0, 1, 0]] // Vertical\n    ],\n    // J-piece (3x3 grid)\n    [[[1, 0, 0], [1, 1, 1], [0, 0, 0]],\n    // Up\n    [[0, 1, 1], [0, 1, 0], [0, 1, 0]],\n    // Right\n    [[0, 0, 0], [1, 1, 1], [0, 0, 1]],\n    // Down\n    [[0, 1, 0], [0, 1, 0], [1, 1, 0]] // Left\n    ],\n    // L-piece (3x3 grid)\n    [[[0, 0, 1], [1, 1, 1], [0, 0, 0]],\n    // Up\n    [[0, 1, 0], [0, 1, 0], [0, 1, 1]],\n    // Right\n    [[0, 0, 0], [1, 1, 1], [1, 0, 0]],\n    // Down\n    [[1, 1, 0], [0, 1, 0], [0, 1, 0]] // Left\n    ]];\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(TetrisGame, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee(args, terminal) {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                this.terminal = terminal;\n                this.startGame();\n              } catch (error) {\n                console.error('TetrisGame: Failed to start:', error);\n                terminal.writeln('\\x1b[31mError: Failed to start Tetris game\\x1b[0m');\n              }\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }, {\n    key: \"startGame\",\n    value: function startGame() {\n      // Completely clear terminal and disable input\n      this.terminal.terminal.write('\\x1b[2J\\x1b[H'); // Clear screen and home cursor\n      this.terminal.setGameRunning(true);\n      this.gameState.gameRunning = true;\n      this.gameState.score = 0;\n      this.gameState.level = 1;\n      this.gameState.lines = 0;\n      this.initBoard();\n      this.spawnPiece();\n\n      // Initial render to show game immediately\n      this.renderGame();\n      this.setupInputHandler();\n      this.gameLoop();\n    }\n  }, {\n    key: \"initBoard\",\n    value: function initBoard() {\n      var _this = this;\n      this.gameState.board = Array(this.gameState.height).fill().map(function () {\n        return Array(_this.gameState.width).fill(0);\n      });\n    }\n  }, {\n    key: \"spawnPiece\",\n    value: function spawnPiece() {\n      var pieceIndex = Math.floor(Math.random() * this.pieces.length);\n      this.gameState.currentPiece = {\n        shape: this.pieces[pieceIndex][0],\n        type: pieceIndex,\n        rotation: 0\n      };\n\n      // Handle different piece sizes for proper centering\n      var pieceWidth;\n      if (pieceIndex === 0) {\n        // I-piece (4x4)\n        pieceWidth = 4;\n        this.gameState.pieceX = Math.floor((this.gameState.width - pieceWidth) / 2);\n        this.gameState.pieceY = -2; // Start higher for I-piece\n      } else if (pieceIndex === 1) {\n        // O-piece (2x2)\n        pieceWidth = 2;\n        this.gameState.pieceX = Math.floor((this.gameState.width - pieceWidth) / 2);\n        this.gameState.pieceY = 0;\n      } else {\n        // All other pieces (3x3)\n        pieceWidth = 3;\n        this.gameState.pieceX = Math.floor((this.gameState.width - pieceWidth) / 2);\n        this.gameState.pieceY = -1;\n      }\n\n      // Check for game over\n      if (this.checkCollision()) {\n        this.endGame();\n        return;\n      }\n\n      // Update the game loop speed based on level\n      this.updateGameSpeed();\n    }\n  }, {\n    key: \"setupInputHandler\",\n    value: function setupInputHandler() {\n      var _this2 = this;\n      this.keyDisposable = this.terminal.terminal.onKey(function (event) {\n        if (!_this2.gameState.gameRunning) return;\n        var key = event.key.toLowerCase();\n\n        // Prevent the key from being echoed to terminal\n        event.domEvent.preventDefault();\n        event.domEvent.stopPropagation();\n        var shouldRender = false;\n        switch (key) {\n          case 'q':\n          case '\\x1b':\n            // ESC\n            _this2.endGame();\n            return;\n          case 'a':\n          case 'arrowleft':\n            shouldRender = _this2.movePiece(-1, 0);\n            break;\n          case 'd':\n          case 'arrowright':\n            shouldRender = _this2.movePiece(1, 0);\n            break;\n          case 's':\n          case 'arrowdown':\n            shouldRender = _this2.movePiece(0, 1) || !_this2.gameState.gameRunning;\n            break;\n          case 'w':\n          case 'arrowup':\n            _this2.rotatePiece();\n            shouldRender = true;\n            break;\n        }\n\n        // Only render if something actually changed\n        if (shouldRender) {\n          _this2.renderGame();\n        }\n      });\n    }\n  }, {\n    key: \"movePiece\",\n    value: function movePiece(dx, dy) {\n      var oldX = this.gameState.pieceX;\n      var oldY = this.gameState.pieceY;\n      this.gameState.pieceX += dx;\n      this.gameState.pieceY += dy;\n      if (this.checkCollision()) {\n        // Revert movement\n        this.gameState.pieceX = oldX;\n        this.gameState.pieceY = oldY;\n\n        // If this was a downward movement that failed, place the piece\n        if (dy > 0) {\n          this.placePiece();\n          this.clearLines();\n          this.spawnPiece();\n          return false; // Indicate piece was placed\n        }\n        return false; // Movement failed\n      }\n      return true; // Movement successful\n    }\n  }, {\n    key: \"rotatePiece\",\n    value: function rotatePiece() {\n      var piece = this.gameState.currentPiece;\n      var rotations = this.pieces[piece.type];\n\n      // Skip rotation for O-piece (square) since it's the same in all rotations\n      if (piece.type === 1) return;\n      var newRotation = (piece.rotation + 1) % rotations.length;\n      var oldShape = piece.shape;\n      var oldRotation = piece.rotation;\n      var oldX = this.gameState.pieceX;\n\n      // Try the rotation\n      piece.shape = rotations[newRotation];\n      piece.rotation = newRotation;\n\n      // If collision, try wall kicks (simple adjustments)\n      if (this.checkCollision()) {\n        // Try moving left one space\n        this.gameState.pieceX = oldX - 1;\n        if (this.checkCollision()) {\n          // Try moving right one space from original position\n          this.gameState.pieceX = oldX + 1;\n          if (this.checkCollision()) {\n            // Try moving right two spaces from original position\n            this.gameState.pieceX = oldX + 2;\n            if (this.checkCollision()) {\n              // For I-piece, try moving left two spaces\n              if (piece.type === 0) {\n                this.gameState.pieceX = oldX - 2;\n                if (this.checkCollision()) {\n                  // Rotation failed completely, revert everything\n                  this.gameState.pieceX = oldX;\n                  piece.shape = oldShape;\n                  piece.rotation = oldRotation;\n                }\n              } else {\n                // Rotation failed, revert everything\n                this.gameState.pieceX = oldX;\n                piece.shape = oldShape;\n                piece.rotation = oldRotation;\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"checkCollision\",\n    value: function checkCollision() {\n      var piece = this.gameState.currentPiece.shape;\n      var px = this.gameState.pieceX;\n      var py = this.gameState.pieceY;\n      for (var y = 0; y < piece.length; y++) {\n        for (var x = 0; x < piece[y].length; x++) {\n          if (piece[y][x]) {\n            var newX = px + x;\n            var newY = py + y;\n            if (newX < 0 || newX >= this.gameState.width || newY >= this.gameState.height || newY >= 0 && this.gameState.board[newY][newX]) {\n              return true;\n            }\n          }\n        }\n      }\n      return false;\n    }\n  }, {\n    key: \"placePiece\",\n    value: function placePiece() {\n      var piece = this.gameState.currentPiece.shape;\n      var px = this.gameState.pieceX;\n      var py = this.gameState.pieceY;\n      for (var y = 0; y < piece.length; y++) {\n        for (var x = 0; x < piece[y].length; x++) {\n          if (piece[y][x] && py + y >= 0) {\n            this.gameState.board[py + y][px + x] = this.gameState.currentPiece.type + 1;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"clearLines\",\n    value: function clearLines() {\n      var linesCleared = 0;\n\n      // Check each row from bottom to top\n      for (var y = this.gameState.height - 1; y >= 0; y--) {\n        if (this.gameState.board[y].every(function (cell) {\n          return cell !== 0;\n        })) {\n          // Remove the completed line\n          this.gameState.board.splice(y, 1);\n          // Add a new empty line at the top\n          this.gameState.board.unshift(Array(this.gameState.width).fill(0));\n          linesCleared++;\n          y++; // Check the same row again since we removed one\n        }\n      }\n      if (linesCleared > 0) {\n        this.gameState.lines += linesCleared;\n\n        // Scoring system: more lines at once = more points\n        var baseScore = [0, 40, 100, 300, 1200][linesCleared] || 1200;\n        this.gameState.score += baseScore * this.gameState.level;\n\n        // Level up every 10 lines\n        var newLevel = Math.floor(this.gameState.lines / 10) + 1;\n        if (newLevel > this.gameState.level) {\n          this.gameState.level = newLevel;\n          this.updateGameSpeed(); // Increase speed for new level\n        }\n      }\n    }\n  }, {\n    key: \"updateGameSpeed\",\n    value: function updateGameSpeed() {\n      var _this3 = this;\n      if (this.gameInterval) {\n        clearInterval(this.gameInterval);\n      }\n\n      // Speed increases with level, minimum 50ms\n      var speed = Math.max(50, 800 - (this.gameState.level - 1) * 75);\n      this.gameInterval = setInterval(function () {\n        if (_this3.gameState.gameRunning) {\n          var moved = _this3.movePiece(0, 1);\n          // Only render if something changed\n          if (!moved || _this3.gameState.gameRunning) {\n            _this3.renderGame();\n          }\n        }\n      }, speed);\n    }\n  }, {\n    key: \"gameLoop\",\n    value: function gameLoop() {\n      this.updateGameSpeed();\n    }\n  }, {\n    key: \"renderGame\",\n    value: function renderGame() {\n      // Clear screen and move cursor to home\n      this.terminal.terminal.write('\\x1b[2J\\x1b[H');\n      this.terminal.writeln('\\x1b[35m🧩 TETRIS\\x1b[0m');\n      this.terminal.writeln('\\x1b[90mA/D: Move | S: Drop | W: Rotate | Q/ESC: Quit\\x1b[0m');\n      this.terminal.writeln(\"Score: \\x1B[36m\".concat(this.gameState.score, \"\\x1B[0m | Level: \\x1B[33m\").concat(this.gameState.level, \"\\x1B[0m | Lines: \\x1B[32m\").concat(this.gameState.lines, \"\\x1B[0m\"));\n      this.terminal.writeln('');\n\n      // Create display board\n      var display = this.gameState.board.map(function (row) {\n        return (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(row);\n      });\n\n      // Add current piece\n      if (this.gameState.currentPiece) {\n        var piece = this.gameState.currentPiece.shape;\n        var px = this.gameState.pieceX;\n        var py = this.gameState.pieceY;\n        for (var y = 0; y < piece.length; y++) {\n          for (var x = 0; x < piece[y].length; x++) {\n            if (piece[y][x] && py + y >= 0 && py + y < this.gameState.height && px + x >= 0 && px + x < this.gameState.width) {\n              display[py + y][px + x] = -1; // Current piece marker\n            }\n          }\n        }\n      }\n\n      // Render board\n      this.terminal.writeln('┌' + '─'.repeat(this.gameState.width) + '┐');\n      for (var _y = 0; _y < this.gameState.height; _y++) {\n        var line = '│';\n        for (var _x3 = 0; _x3 < this.gameState.width; _x3++) {\n          var cell = display[_y][_x3];\n          if (cell === -1) {\n            line += '\\x1b[43m \\x1b[0m'; // Current piece (yellow)\n          } else if (cell === 0) {\n            line += ' '; // Empty\n          } else {\n            var colors = ['\\x1b[41m \\x1b[0m',\n            // Red\n            '\\x1b[42m \\x1b[0m',\n            // Green  \n            '\\x1b[44m \\x1b[0m',\n            // Blue\n            '\\x1b[45m \\x1b[0m',\n            // Magenta\n            '\\x1b[46m \\x1b[0m',\n            // Cyan\n            '\\x1b[47m \\x1b[0m',\n            // White\n            '\\x1b[40m \\x1b[0m' // Black\n            ];\n            line += colors[(cell - 1) % colors.length];\n          }\n        }\n        line += '│';\n        this.terminal.writeln(line);\n      }\n      this.terminal.writeln('└' + '─'.repeat(this.gameState.width) + '┘');\n    }\n  }, {\n    key: \"endGame\",\n    value: function endGame() {\n      var _this4 = this;\n      this.gameState.gameRunning = false;\n      if (this.gameInterval) {\n        clearInterval(this.gameInterval);\n        this.gameInterval = null;\n      }\n\n      // Dispose of the key handler\n      if (this.keyDisposable) {\n        this.keyDisposable.dispose();\n        this.keyDisposable = null;\n      }\n\n      // Clear screen and show game over\n      this.terminal.terminal.write('\\x1b[2J\\x1b[H');\n\n      // Restore normal terminal input handling\n      this.terminal.setGameRunning(false);\n      this.terminal.writeln('');\n      this.terminal.writeln('\\x1b[41m\\x1b[37m                                    \\x1b[0m');\n      this.terminal.writeln('\\x1b[41m\\x1b[37m        🧩 GAME OVER! 🧩         \\x1b[0m');\n      this.terminal.writeln('\\x1b[41m\\x1b[37m                                    \\x1b[0m');\n      this.terminal.writeln('');\n      this.terminal.writeln(\"\\x1B[36m\\uD83D\\uDCCA Final Score: \\x1B[33m\".concat(this.gameState.score, \"\\x1B[0m\"));\n      this.terminal.writeln(\"\\x1B[36m\\uD83C\\uDFC6 Level Reached: \\x1B[33m\".concat(this.gameState.level, \"\\x1B[0m\"));\n      this.terminal.writeln(\"\\x1B[36m\\uD83D\\uDCC8 Lines Cleared: \\x1B[33m\".concat(this.gameState.lines, \"\\x1B[0m\"));\n      this.terminal.writeln('');\n      this.terminal.writeln('\\x1b[90mPress any key to return to terminal...\\x1b[0m');\n\n      // Set up a one-time key handler to return to terminal\n      var returnKeyHandler = this.terminal.terminal.onKey(function (event) {\n        event.domEvent.preventDefault();\n        event.domEvent.stopPropagation();\n        returnKeyHandler.dispose();\n        _this4.terminal.writePrompt();\n      });\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TetrisGame);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9040\n");

/***/ }),

/***/ 2942:
/*!**************************************************************!*\
  !*** ./resources/js/components/terminal/games/TypingGame.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n/**\r\n * Typing Test Game - Measure typing speed and accuracy\r\n * Type the displayed text as quickly and accurately as possible\r\n */\nvar TypingGame = /*#__PURE__*/function () {\n  function TypingGame() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, TypingGame);\n    this.gameState = {\n      text: '',\n      currentIndex: 0,\n      startTime: null,\n      endTime: null,\n      errors: 0,\n      correctChars: 0,\n      totalChars: 0,\n      wpm: 0,\n      accuracy: 100,\n      gameRunning: false,\n      userInput: ''\n    };\n    this.terminal = null;\n    this.keyDisposable = null;\n    this.difficulty = 'medium'; // easy, medium, hard\n    this.testTexts = {\n      easy: [\"The cat sat on the mat.\", \"A quick brown fox jumps over a lazy dog.\", \"Hello world! This is an easy typing test.\", \"Simple words make typing practice fun and easy.\"],\n      medium: [\"The quick brown fox jumps over the lazy dog. This pangram contains every letter of the English alphabet at least once.\", \"In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole filled with worms and oozy smells.\", \"Programming is the art of telling another human what one wants the computer to do. It requires logical thinking and creativity.\", \"Artificial intelligence is intelligence demonstrated by machines, in contrast to the natural intelligence displayed by humans.\", \"The best way to predict the future is to invent it. Technology advances through innovation and persistent effort.\"],\n      hard: [\"Code is like humor. When you have to explain it, it's bad. Good code should be self-documenting and elegant.\", \"Debugging is twice as hard as writing the code in the first place. Therefore, if you write code as cleverly as possible, you are not smart enough to debug it.\", \"The complexity of software is an essential property, not an accidental one. Hence, descriptions of a software entity that abstract away its complexity often abstract away its essence.\", \"Any fool can write code that a computer can understand. Good programmers write code that humans can understand. - Martin Fowler\", \"First, solve the problem. Then, write the code. Don't try to do both at the same time, or you'll end up with neither working properly.\"]\n    };\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(TypingGame, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().mark(function _callee(args, terminal) {\n        var diff;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                this.terminal = terminal;\n\n                // Check for difficulty argument\n                if (args.length > 0) {\n                  diff = args[0].toLowerCase();\n                  if (['easy', 'medium', 'hard'].includes(diff)) {\n                    this.difficulty = diff;\n                  }\n                }\n                this.showDifficultySelection();\n              } catch (error) {\n                console.error('TypingGame: Failed to start:', error);\n                terminal.writeln('\\x1b[31mError: Failed to start typing game\\x1b[0m');\n              }\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function execute(_x, _x2) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }, {\n    key: \"showDifficultySelection\",\n    value: function showDifficultySelection() {\n      this.terminal.terminal.write('\\x1b[2J\\x1b[H');\n      this.terminal.writeln('\\x1b[34m⌨️  TYPING SPEED TEST\\x1b[0m');\n      this.terminal.writeln('\\x1b[90mSelect difficulty or start with current setting\\x1b[0m');\n      this.terminal.writeln('');\n      this.terminal.writeln(\"Current difficulty: \\x1B[33m\".concat(this.difficulty.toUpperCase(), \"\\x1B[0m\"));\n      this.terminal.writeln('');\n      this.terminal.writeln('\\x1b[36m1\\x1b[0m - Easy (short, simple words)');\n      this.terminal.writeln('\\x1b[33m2\\x1b[0m - Medium (standard sentences)');\n      this.terminal.writeln('\\x1b[31m3\\x1b[0m - Hard (complex programming text)');\n      this.terminal.writeln('');\n      this.terminal.writeln('\\x1b[32mENTER\\x1b[0m - Start test with current difficulty');\n      this.terminal.writeln('\\x1b[90mESC\\x1b[0m - Return to terminal');\n      this.setupDifficultyHandler();\n    }\n  }, {\n    key: \"setupDifficultyHandler\",\n    value: function setupDifficultyHandler() {\n      var _this = this;\n      this.keyDisposable = this.terminal.terminal.onKey(function (event) {\n        var key = event.key;\n        event.domEvent.preventDefault();\n        event.domEvent.stopPropagation();\n        if (key === '\\x1b') {\n          // ESC\n          _this.terminal.setGameRunning(false);\n          _this.terminal.writePrompt();\n          return;\n        }\n        if (key === '\\r' || key === '\\n') {\n          // ENTER\n          if (_this.keyDisposable) {\n            _this.keyDisposable.dispose();\n            _this.keyDisposable = null;\n          }\n          _this.startTest();\n          return;\n        }\n        if (key === '1') {\n          _this.difficulty = 'easy';\n          _this.showDifficultySelection();\n        } else if (key === '2') {\n          _this.difficulty = 'medium';\n          _this.showDifficultySelection();\n        } else if (key === '3') {\n          _this.difficulty = 'hard';\n          _this.showDifficultySelection();\n        }\n      });\n    }\n  }, {\n    key: \"startTest\",\n    value: function startTest() {\n      // Completely clear terminal and disable input\n      this.terminal.terminal.write('\\x1b[2J\\x1b[H'); // Clear screen and home cursor\n      this.terminal.setGameRunning(true);\n\n      // Select random text based on difficulty\n      var texts = this.testTexts[this.difficulty];\n      this.gameState.text = texts[Math.floor(Math.random() * texts.length)];\n\n      // Reset all game state\n      this.gameState.gameRunning = true;\n      this.gameState.currentIndex = 0;\n      this.gameState.userInput = '';\n      this.gameState.errors = 0;\n      this.gameState.correctChars = 0;\n      this.gameState.totalChars = 0;\n      this.gameState.wpm = 0;\n      this.gameState.accuracy = 100;\n      this.gameState.startTime = null;\n      this.gameState.endTime = null;\n      this.setupInputHandler();\n      this.renderTest();\n    }\n  }, {\n    key: \"setupInputHandler\",\n    value: function setupInputHandler() {\n      var _this2 = this;\n      this.keyDisposable = this.terminal.terminal.onKey(function (event) {\n        if (!_this2.gameState.gameRunning) return;\n        var key = event.key;\n\n        // Prevent the key from being echoed to terminal\n        event.domEvent.preventDefault();\n        event.domEvent.stopPropagation();\n        if (key === '\\x1b') {\n          // ESC key\n          _this2.endTest();\n          return;\n        }\n        if (key === '\\x7f' || key === '\\b') {\n          // Backspace\n          if (_this2.gameState.userInput.length > 0) {\n            _this2.gameState.userInput = _this2.gameState.userInput.slice(0, -1);\n            if (_this2.gameState.currentIndex > 0) {\n              _this2.gameState.currentIndex--;\n            }\n            _this2.renderTest();\n          }\n          return;\n        }\n\n        // Regular character input\n        if (key.length === 1 && key.charCodeAt(0) >= 32) {\n          if (!_this2.gameState.startTime) {\n            _this2.gameState.startTime = Date.now();\n          }\n          _this2.gameState.userInput += key;\n          _this2.gameState.totalChars++;\n          if (key === _this2.gameState.text[_this2.gameState.currentIndex]) {\n            _this2.gameState.correctChars++;\n            _this2.gameState.currentIndex++;\n          } else {\n            _this2.gameState.errors++;\n            // Still advance to next character for continued typing\n            _this2.gameState.currentIndex++;\n          }\n          _this2.gameState.accuracy = Math.round(_this2.gameState.correctChars / _this2.gameState.totalChars * 100);\n\n          // Calculate WPM\n          if (_this2.gameState.startTime) {\n            var elapsed = (Date.now() - _this2.gameState.startTime) / 1000 / 60;\n            var wordsTyped = _this2.gameState.currentIndex / 5;\n            _this2.gameState.wpm = Math.round(wordsTyped / elapsed);\n          }\n          if (_this2.gameState.currentIndex >= _this2.gameState.text.length) {\n            _this2.gameState.endTime = Date.now();\n            _this2.endTest();\n            return;\n          }\n          _this2.renderTest();\n        }\n      });\n    }\n  }, {\n    key: \"renderTest\",\n    value: function renderTest() {\n      // Clear screen and move cursor to home\n      this.terminal.terminal.write('\\x1b[2J\\x1b[H');\n      this.terminal.writeln('\\x1b[34m⌨️  TYPING SPEED TEST\\x1b[0m \\x1b[90m(' + this.difficulty.toUpperCase() + ')\\x1b[0m');\n      this.terminal.writeln('\\x1b[90mType the text below as accurately and quickly as possible.\\x1b[0m');\n      this.terminal.writeln('\\x1b[90mPress ESC to quit.\\x1b[0m');\n      this.terminal.writeln('');\n\n      // Show stats\n      var wpm = this.gameState.wpm;\n      var accuracy = this.gameState.accuracy;\n      var progress = Math.round(this.gameState.currentIndex / this.gameState.text.length * 100);\n      this.terminal.writeln(\"WPM: \\x1B[36m\".concat(wpm, \"\\x1B[0m | Accuracy: \\x1B[32m\").concat(accuracy, \"%\\x1B[0m | Progress: \\x1B[36m\").concat(progress, \"%\\x1B[0m\"));\n      this.terminal.writeln(\"Errors: \\x1B[31m\".concat(this.gameState.errors, \"\\x1B[0m | Correct: \\x1B[32m\").concat(this.gameState.correctChars, \"\\x1B[0m\"));\n      this.terminal.writeln('');\n\n      // Show text with highlighting\n      var text = this.gameState.text;\n      var current = this.gameState.currentIndex;\n      var userInput = this.gameState.userInput;\n      this.terminal.writeln('📝 Text to type:');\n\n      // Build display with character-by-character comparison\n      var textDisplay = '';\n      for (var i = 0; i < text.length; i++) {\n        if (i < userInput.length) {\n          // Character has been typed\n          if (userInput[i] === text[i]) {\n            textDisplay += '\\x1b[32m' + text[i] + '\\x1b[0m'; // Correct (green)\n          } else {\n            textDisplay += '\\x1b[41m\\x1b[37m' + text[i] + '\\x1b[0m'; // Error (red background)\n          }\n        } else if (i === current) {\n          textDisplay += '\\x1b[43m\\x1b[30m' + text[i] + '\\x1b[0m'; // Current char (yellow highlight)\n        } else {\n          textDisplay += '\\x1b[90m' + text[i] + '\\x1b[0m'; // Not yet typed (gray)\n        }\n      }\n      this.terminal.writeln(textDisplay);\n      this.terminal.writeln('');\n\n      // Show user input with cursor\n      this.terminal.writeln('✍️  Your input:');\n      this.terminal.writeln('\\x1b[36m' + this.gameState.userInput + '\\x1b[33m▋\\x1b[0m'); // Cursor at end\n\n      // Show current WPM if typing has started\n      if (this.gameState.startTime && this.gameState.currentIndex > 0) {\n        var elapsed = (Date.now() - this.gameState.startTime) / 1000 / 60; // minutes\n        var wordsTyped = this.gameState.currentIndex / 5; // Standard: 5 characters = 1 word\n        var currentWpm = Math.round(wordsTyped / elapsed);\n        this.terminal.writeln('');\n        this.terminal.writeln(\"Current WPM: \\x1B[36m\".concat(currentWpm, \"\\x1B[0m\"));\n      }\n    }\n  }, {\n    key: \"endTest\",\n    value: function endTest() {\n      this.gameState.gameRunning = false;\n\n      // Dispose of the key handler\n      if (this.keyDisposable) {\n        this.keyDisposable.dispose();\n        this.keyDisposable = null;\n      }\n\n      // Clear screen and show results\n      this.terminal.terminal.write('\\x1b[2J\\x1b[H');\n\n      // Restore normal terminal input handling\n      this.terminal.setGameRunning(false);\n      if (this.gameState.startTime && this.gameState.endTime) {\n        var totalTime = (this.gameState.endTime - this.gameState.startTime) / 1000; // seconds\n        var totalChars = this.gameState.text.length;\n        var wordsTyped = totalChars / 5; // Standard: 5 characters = 1 word\n        var finalWPM = Math.round(wordsTyped / totalTime * 60);\n        var accuracy = Math.round((totalChars - this.gameState.errors) / totalChars * 100);\n        this.terminal.writeln('\\x1b[32m✓ TYPING TEST COMPLETED!\\x1b[0m');\n        this.terminal.writeln('');\n        this.terminal.writeln(\"\\x1B[36mFinal Results:\\x1B[0m\");\n        this.terminal.writeln(\"  WPM: \\x1B[33m\".concat(finalWPM, \"\\x1B[0m\"));\n        this.terminal.writeln(\"  Accuracy: \\x1B[32m\".concat(accuracy, \"%\\x1B[0m\"));\n        this.terminal.writeln(\"  Errors: \\x1B[31m\".concat(this.gameState.errors, \"\\x1B[0m\"));\n        this.terminal.writeln(\"  Time: \\x1B[36m\".concat(totalTime.toFixed(1), \"s\\x1B[0m\"));\n        this.terminal.writeln(\"  Difficulty: \\x1B[35m\".concat(this.difficulty.toUpperCase(), \"\\x1B[0m\"));\n        this.terminal.writeln('');\n\n        // Save and show best score\n        this.saveBestScore(finalWPM, accuracy);\n      } else {\n        this.terminal.writeln('\\x1b[33mTest cancelled.\\x1b[0m');\n      }\n      this.terminal.writeln('');\n      this.terminal.writePrompt();\n    }\n  }, {\n    key: \"saveBestScore\",\n    value: function saveBestScore(wpm, accuracy) {\n      var _this3 = this;\n      try {\n        var key = \"typing_best_\".concat(this.difficulty);\n        var stored = localStorage.getItem(key);\n        var currentBest = stored ? JSON.parse(stored) : {\n          wpm: 0,\n          accuracy: 0\n        };\n        if (wpm > currentBest.wpm) {\n          var newBest = {\n            wpm: wpm,\n            accuracy: accuracy,\n            date: new Date().toLocaleDateString()\n          };\n          localStorage.setItem(key, JSON.stringify(newBest));\n          this.terminal.writeln(\"\\x1B[32m\\uD83C\\uDF8A New personal best WPM for \".concat(this.difficulty.toUpperCase(), \"!\\x1B[0m\"));\n        } else {\n          this.terminal.writeln(\"\\x1B[36mYour best \".concat(this.difficulty.toUpperCase(), \" WPM: \").concat(currentBest.wpm, \"\\x1B[0m\"));\n        }\n\n        // Show all best scores\n        this.terminal.writeln('');\n        this.terminal.writeln('\\x1b[90m--- Personal Bests ---\\x1b[0m');\n        ['easy', 'medium', 'hard'].forEach(function (diff) {\n          var bestKey = \"typing_best_\".concat(diff);\n          var best = localStorage.getItem(bestKey);\n          if (best) {\n            var data = JSON.parse(best);\n            _this3.terminal.writeln(\"\".concat(diff.toUpperCase(), \": \\x1B[33m\").concat(data.wpm, \" WPM\\x1B[0m (\").concat(data.accuracy, \"%)\"));\n          } else {\n            _this3.terminal.writeln(\"\".concat(diff.toUpperCase(), \": \\x1B[90mNo record\\x1B[0m\"));\n          }\n        });\n      } catch (e) {\n        // localStorage not available\n        this.terminal.writeln('\\x1b[90m(Score saving not available)\\x1b[0m');\n      }\n    }\n  }]);\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TypingGame);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2942\n");

/***/ })

}]);