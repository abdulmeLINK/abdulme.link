"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["portfolio"],{

/***/ 7565:
/*!********************************************************!*\
  !*** ./resources/js/components/portfolio/Portfolio.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Portfolio)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ 9394);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 467);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 3029);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 2901);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/regenerator */ 4756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _EventBus_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../EventBus.js */ 2454);\n/* harmony import */ var fuse_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! fuse.js */ 5929);\n\n\n\n\n\n/**\r\n * Portfolio Application Component\r\n * \r\n * Features:\r\n * - Masonry CSS Grid layout (4→2→1 columns responsive)\r\n * - 6-category filtering system (Web, Mobile, AI, Games, Tools, Other)\r\n * - Fuse.js fuzzy search functionality\r\n * - Project detail modals with image carousels\r\n * - GitHub API integration for live stats\r\n * - Smooth animations and transitions\r\n * \r\n * @author AbdulmeLink Portfolio\r\n * @version 1.0.0\r\n */\n\n\n\nvar Portfolio = /*#__PURE__*/function () {\n  function Portfolio(container) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, Portfolio);\n    this.container = container;\n    this.projects = [];\n    this.filteredProjects = [];\n    this.categories = {};\n    this.currentFilter = 'all';\n    this.searchQuery = '';\n    this.fuse = null;\n    this.currentModal = null;\n\n    // Performance tracking\n    this.lastRenderTime = 0;\n    this.animationId = null;\n\n    // Element references\n    this.elements = {};\n    this.init();\n  }\n\n  /**\r\n   * Initialize portfolio component\r\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Portfolio, [{\n    key: \"init\",\n    value: function () {\n      var _init = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee() {\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              this.setupContainer();\n              this.createLayout();\n              _context.next = 5;\n              return this.loadPortfolioData();\n            case 5:\n              this.setupSearch();\n              this.setupEventListeners();\n              this.renderProjects();\n              _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('portfolio:ready', {\n                projectCount: this.projects.length\n              });\n              _context.next = 15;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Failed to initialize Portfolio:', _context.t0);\n              this.showError('Failed to load portfolio. Please try again.');\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 11]]);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n    /**\r\n     * Setup container with base styling\r\n     */\n  }, {\n    key: \"setupContainer\",\n    value: function setupContainer() {\n      this.container.className = 'portfolio-app';\n      this.container.innerHTML = ''; // Clear any existing content\n\n      // Add loading state\n      this.container.innerHTML = \"\\n            <div class=\\\"portfolio-loading\\\">\\n                <div class=\\\"loading-spinner\\\"></div>\\n                <p>Loading portfolio...</p>\\n            </div>\\n        \";\n    }\n\n    /**\r\n     * Create main layout structure\r\n     */\n  }, {\n    key: \"createLayout\",\n    value: function createLayout() {\n      this.container.innerHTML = \"\\n            <div class=\\\"portfolio-header\\\">\\n                <div class=\\\"portfolio-title\\\">\\n                    <h1>My Projects</h1>\\n                    <p class=\\\"portfolio-subtitle\\\">A showcase of my development work</p>\\n                </div>\\n                \\n                <div class=\\\"portfolio-controls\\\">\\n                    <div class=\\\"search-container\\\">\\n                        <input type=\\\"text\\\" \\n                               class=\\\"search-input\\\" \\n                               placeholder=\\\"Search projects...\\\"\\n                               aria-label=\\\"Search projects\\\">\\n                        <div class=\\\"search-icon\\\">\\uD83D\\uDD0D</div>\\n                    </div>\\n                    \\n                    <div class=\\\"filter-container\\\">\\n                        <button class=\\\"filter-btn active\\\" data-filter=\\\"all\\\">All</button>\\n                        <!-- Category buttons will be added dynamically -->\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"portfolio-main\\\">\\n                <div class=\\\"portfolio-grid\\\">\\n                    <!-- Project cards will be added dynamically -->\\n                </div>\\n                \\n                <div class=\\\"portfolio-empty hidden\\\">\\n                    <div class=\\\"empty-state\\\">\\n                        <div class=\\\"empty-icon\\\">\\uD83D\\uDCED</div>\\n                        <h3>No projects found</h3>\\n                        <p>Try adjusting your search or filter criteria</p>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <!-- Project detail modal -->\\n            <div class=\\\"portfolio-modal hidden\\\">\\n                <div class=\\\"modal-backdrop\\\"></div>\\n                <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                        <button class=\\\"modal-close\\\" aria-label=\\\"Close modal\\\">\\xD7</button>\\n                    </div>\\n                    <div class=\\\"modal-body\\\">\\n                        <!-- Modal content will be added dynamically -->\\n                    </div>\\n                </div>\\n            </div>\\n        \";\n\n      // Cache element references\n      this.elements = {\n        header: this.container.querySelector('.portfolio-header'),\n        searchInput: this.container.querySelector('.search-input'),\n        filterContainer: this.container.querySelector('.filter-container'),\n        grid: this.container.querySelector('.portfolio-grid'),\n        emptyState: this.container.querySelector('.portfolio-empty'),\n        modal: this.container.querySelector('.portfolio-modal'),\n        modalContent: this.container.querySelector('.modal-content'),\n        modalBody: this.container.querySelector('.modal-body'),\n        modalClose: this.container.querySelector('.modal-close')\n      };\n    }\n\n    /**\r\n     * Load portfolio data from API\r\n     */\n  }, {\n    key: \"loadPortfolioData\",\n    value: function () {\n      var _loadPortfolioData = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee2() {\n        var response, data;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch('/api/portfolio');\n            case 3:\n              response = _context2.sent;\n              if (response.ok) {\n                _context2.next = 6;\n                break;\n              }\n              throw new Error(\"HTTP \".concat(response.status, \": \").concat(response.statusText));\n            case 6:\n              _context2.next = 8;\n              return response.json();\n            case 8:\n              data = _context2.sent;\n              this.projects = data.projects || [];\n              this.categories = data.categories || {};\n              this.filteredProjects = (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.projects);\n\n              // Create category filter buttons\n              this.createCategoryFilters();\n              console.log(\"\\uD83D\\uDCC2 Loaded \".concat(this.projects.length, \" projects\"));\n              _context2.next = 20;\n              break;\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Failed to load portfolio data:', _context2.t0);\n              throw new Error('Portfolio data could not be loaded');\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 16]]);\n      }));\n      function loadPortfolioData() {\n        return _loadPortfolioData.apply(this, arguments);\n      }\n      return loadPortfolioData;\n    }()\n    /**\r\n     * Create category filter buttons\r\n     */\n  }, {\n    key: \"createCategoryFilters\",\n    value: function createCategoryFilters() {\n      var filterContainer = this.elements.filterContainer;\n\n      // Add category buttons\n      Object.values(this.categories).forEach(function (category) {\n        var button = document.createElement('button');\n        button.className = 'filter-btn';\n        button.dataset.filter = category.id;\n        button.textContent = category.name;\n        button.style.setProperty('--category-color', category.color);\n        filterContainer.appendChild(button);\n      });\n    }\n\n    /**\r\n     * Setup Fuse.js for fuzzy search\r\n     */\n  }, {\n    key: \"setupSearch\",\n    value: function setupSearch() {\n      // Fuse.js options for fuzzy search\n      var fuseOptions = {\n        keys: [{\n          name: 'title',\n          weight: 0.4\n        }, {\n          name: 'description',\n          weight: 0.3\n        }, {\n          name: 'technologies',\n          weight: 0.2\n        }, {\n          name: 'highlights',\n          weight: 0.1\n        }],\n        threshold: 0.4,\n        // How fuzzy the search is (0 = exact, 1 = very fuzzy)\n        includeScore: true,\n        includeMatches: true\n      };\n\n      // Initialize Fuse.js\n      this.fuse = new fuse_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this.projects, fuseOptions);\n    }\n\n    /**\r\n     * Setup event listeners\r\n     */\n  }, {\n    key: \"setupEventListeners\",\n    value: function setupEventListeners() {\n      var _this = this;\n      // Search input\n      this.elements.searchInput.addEventListener('input', function (e) {\n        _this.searchQuery = e.target.value.trim();\n        _this.debounceFilter();\n      });\n\n      // Filter buttons\n      this.elements.filterContainer.addEventListener('click', function (e) {\n        if (e.target.classList.contains('filter-btn')) {\n          _this.setActiveFilter(e.target);\n          _this.currentFilter = e.target.dataset.filter;\n          _this.filterProjects();\n        }\n      });\n\n      // Modal close\n      this.elements.modalClose.addEventListener('click', function () {\n        return _this.closeModal();\n      });\n      this.elements.modal.addEventListener('click', function (e) {\n        if (e.target.classList.contains('modal-backdrop')) {\n          _this.closeModal();\n        }\n      });\n\n      // Keyboard shortcuts\n      document.addEventListener('keydown', function (e) {\n        if (e.key === 'Escape' && _this.currentModal) {\n          _this.closeModal();\n        }\n      });\n\n      // Grid clicks for project details\n      this.elements.grid.addEventListener('click', function (e) {\n        var projectCard = e.target.closest('.project-card');\n        if (projectCard) {\n          var projectId = projectCard.dataset.projectId;\n          _this.openProjectModal(projectId);\n        }\n      });\n    }\n\n    /**\r\n     * Debounced filtering for search input\r\n     */\n  }, {\n    key: \"debounceFilter\",\n    value: function debounceFilter() {\n      var _this2 = this;\n      clearTimeout(this.filterTimeout);\n      this.filterTimeout = setTimeout(function () {\n        _this2.filterProjects();\n      }, 300);\n    }\n\n    /**\r\n     * Set active filter button\r\n     */\n  }, {\n    key: \"setActiveFilter\",\n    value: function setActiveFilter(activeButton) {\n      this.elements.filterContainer.querySelectorAll('.filter-btn').forEach(function (btn) {\n        btn.classList.remove('active');\n      });\n      activeButton.classList.add('active');\n    }\n\n    /**\r\n     * Filter projects based on category and search\r\n     */\n  }, {\n    key: \"filterProjects\",\n    value: function filterProjects() {\n      var _this3 = this;\n      var filtered = (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.projects);\n\n      // Apply category filter\n      if (this.currentFilter !== 'all') {\n        filtered = filtered.filter(function (project) {\n          return project.category === _this3.currentFilter;\n        });\n      }\n\n      // Apply search filter\n      if (this.searchQuery) {\n        if (this.fuse) {\n          // Use Fuse.js for fuzzy search\n          var searchResults = this.fuse.search(this.searchQuery);\n          var searchIds = new Set(searchResults.map(function (result) {\n            return result.item.id;\n          }));\n          filtered = filtered.filter(function (project) {\n            return searchIds.has(project.id);\n          });\n        } else {\n          // Fallback to basic search (should not happen since we have Fuse.js)\n          var query = this.searchQuery.toLowerCase();\n          filtered = filtered.filter(function (project) {\n            return project.title.toLowerCase().includes(query) || project.description.toLowerCase().includes(query) || project.technologies.some(function (tech) {\n              return tech.toLowerCase().includes(query);\n            });\n          });\n        }\n      }\n      this.filteredProjects = filtered;\n      this.renderProjects();\n    }\n\n    /**\r\n     * Render project cards in grid\r\n     */\n  }, {\n    key: \"renderProjects\",\n    value: function renderProjects() {\n      var _this4 = this;\n      var grid = this.elements.grid;\n      var emptyState = this.elements.emptyState;\n      if (this.filteredProjects.length === 0) {\n        grid.innerHTML = '';\n        emptyState.classList.remove('hidden');\n        return;\n      }\n      emptyState.classList.add('hidden');\n\n      // Create project cards\n      grid.innerHTML = this.filteredProjects.map(function (project) {\n        return _this4.createProjectCard(project);\n      }).join('');\n\n      // Add loading animation\n      requestAnimationFrame(function () {\n        grid.querySelectorAll('.project-card').forEach(function (card, index) {\n          card.style.animationDelay = \"\".concat(index * 100, \"ms\");\n          card.classList.add('animate-in');\n        });\n      });\n    }\n\n    /**\r\n     * Create individual project card HTML\r\n     */\n  }, {\n    key: \"createProjectCard\",\n    value: function createProjectCard(project) {\n      var category = this.categories[project.category];\n      var techBadges = project.technologies.slice(0, 4).map(function (tech) {\n        return \"<span class=\\\"tech-badge\\\">\".concat(tech, \"</span>\");\n      }).join('');\n      var extraTechCount = project.technologies.length > 4 ? \"<span class=\\\"tech-badge extra\\\">+\".concat(project.technologies.length - 4, \"</span>\") : '';\n      return \"\\n            <div class=\\\"project-card\\\" data-project-id=\\\"\".concat(project.id, \"\\\">\\n                <div class=\\\"project-image\\\">\\n                    <img src=\\\"\").concat(project.images.thumbnail, \"\\\" \\n                         alt=\\\"\").concat(project.title, \"\\\"\\n                         loading=\\\"lazy\\\"\\n                         onerror=\\\"this.src='/images/projects/placeholder.webp'\\\">\\n                    <div class=\\\"project-overlay\\\">\\n                        <div class=\\\"project-actions\\\">\\n                            <button class=\\\"btn btn-primary\\\">View Details</button>\\n                            \").concat(project.links.demo ? '<button class=\"btn btn-secondary\">Live Demo</button>' : '', \"\\n                        </div>\\n                    </div>\\n                </div>\\n                \\n                <div class=\\\"project-content\\\">\\n                    <div class=\\\"project-header\\\">\\n                        <div class=\\\"project-category\\\" style=\\\"background: \").concat(category.color, \"\\\">\\n                            \").concat(category.name, \"\\n                        </div>\\n                        \").concat(project.featured ? '<div class=\"project-featured\">⭐</div>' : '', \"\\n                    </div>\\n                    \\n                    <h3 class=\\\"project-title\\\">\").concat(project.title, \"</h3>\\n                    <p class=\\\"project-description\\\">\").concat(project.description, \"</p>\\n                    \\n                    <div class=\\\"project-tech\\\">\\n                        \").concat(techBadges, \"\\n                        \").concat(extraTechCount, \"\\n                    </div>\\n                    \\n                    <div class=\\\"project-meta\\\">\\n                        <span class=\\\"project-date\\\">\").concat(this.formatDate(project.publishedAt), \"</span>\\n                        <span class=\\\"project-status \").concat(project.status, \"\\\">\").concat(project.status, \"</span>\\n                    </div>\\n                </div>\\n            </div>\\n        \");\n    }\n\n    /**\r\n     * Open project detail modal\r\n     */\n  }, {\n    key: \"openProjectModal\",\n    value: function () {\n      var _openProjectModal = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee3(projectId) {\n        var _this5 = this;\n        var project;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              project = this.projects.find(function (p) {\n                return p.id === projectId;\n              });\n              if (project) {\n                _context3.next = 3;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 3:\n              this.currentModal = project;\n              this.elements.modal.classList.remove('hidden');\n              document.body.style.overflow = 'hidden';\n\n              // Create modal content\n              _context3.next = 8;\n              return this.createModalContent(project);\n            case 8:\n              this.elements.modalBody.innerHTML = _context3.sent;\n              // Setup modal interactions\n              this.setupModalInteractions();\n\n              // Animate in\n              requestAnimationFrame(function () {\n                _this5.elements.modal.classList.add('modal-active');\n              });\n              _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('portfolio:project-opened', {\n                projectId: projectId\n              });\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function openProjectModal(_x) {\n        return _openProjectModal.apply(this, arguments);\n      }\n      return openProjectModal;\n    }()\n    /**\r\n     * Create modal content HTML\r\n     */\n  }, {\n    key: \"createModalContent\",\n    value: function () {\n      var _createModalContent = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee4(project) {\n        var category, githubStats;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              category = this.categories[project.category]; // Get GitHub stats if available\n              githubStats = '';\n              if (!project.links.github) {\n                _context4.next = 6;\n                break;\n              }\n              _context4.next = 5;\n              return this.getGithubStats(project.links.github);\n            case 5:\n              githubStats = _context4.sent;\n            case 6:\n              return _context4.abrupt(\"return\", \"\\n            <div class=\\\"modal-project\\\">\\n                <div class=\\\"modal-gallery\\\">\\n                    <div class=\\\"gallery-main\\\">\\n                        <img src=\\\"\".concat(project.images.gallery[0] || project.images.thumbnail, \"\\\" \\n                             alt=\\\"\").concat(project.title, \"\\\"\\n                             class=\\\"gallery-main-image\\\">\\n                    </div>\\n                    \").concat(project.images.gallery.length > 1 ? \"\\n                        <div class=\\\"gallery-thumbnails\\\">\\n                            \".concat(project.images.gallery.map(function (img, index) {\n                return \"\\n                                <img src=\\\"\".concat(img, \"\\\" \\n                                     alt=\\\"\").concat(project.title, \" - Image \").concat(index + 1, \"\\\"\\n                                     class=\\\"gallery-thumb \").concat(index === 0 ? 'active' : '', \"\\\"\\n                                     data-index=\\\"\").concat(index, \"\\\">\\n                            \");\n              }).join(''), \"\\n                        </div>\\n                    \") : '', \"\\n                </div>\\n\\n                <div class=\\\"modal-details\\\">\\n                    <div class=\\\"modal-header-info\\\">\\n                        <div class=\\\"project-category-large\\\" style=\\\"background: \").concat(category.color, \"\\\">\\n                            \").concat(category.name, \"\\n                        </div>\\n                        <h2 class=\\\"modal-title\\\">\").concat(project.title, \"</h2>\\n                        <p class=\\\"modal-description\\\">\").concat(project.description, \"</p>\\n                    </div>\\n\\n                    <div class=\\\"modal-highlights\\\">\\n                        <h4>Key Features</h4>\\n                        <ul>\\n                            \").concat(project.highlights.map(function (highlight) {\n                return \"<li>\".concat(highlight, \"</li>\");\n              }).join(''), \"\\n                        </ul>\\n                    </div>\\n\\n                    <div class=\\\"modal-tech\\\">\\n                        <h4>Technologies Used</h4>\\n                        <div class=\\\"tech-grid\\\">\\n                            \").concat(project.technologies.map(function (tech) {\n                return \"\\n                                <span class=\\\"tech-badge-large\\\">\".concat(tech, \"</span>\\n                            \");\n              }).join(''), \"\\n                        </div>\\n                    </div>\\n\\n                    \").concat(githubStats, \"\\n\\n                    <div class=\\\"modal-actions\\\">\\n                        \").concat(project.links.demo ? \"\\n                            <a href=\\\"\".concat(project.links.demo, \"\\\" \\n                               target=\\\"_blank\\\" \\n                               class=\\\"btn btn-primary\\\">\\n                                <span>\\uD83C\\uDF10</span> Live Demo\\n                            </a>\\n                        \") : '', \"\\n                        \").concat(project.links.github ? \"\\n                            <a href=\\\"\".concat(project.links.github, \"\\\" \\n                               target=\\\"_blank\\\" \\n                               class=\\\"btn btn-secondary\\\">\\n                                <span>\\uD83D\\uDCC2</span> View Code\\n                            </a>\\n                        \") : '', \"\\n                    </div>\\n                </div>\\n            </div>\\n        \"));\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function createModalContent(_x2) {\n        return _createModalContent.apply(this, arguments);\n      }\n      return createModalContent;\n    }()\n    /**\r\n     * Get GitHub repository statistics\r\n     */\n  }, {\n    key: \"getGithubStats\",\n    value: function () {\n      var _getGithubStats = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee5(githubUrl) {\n        var repoPath, apiUrl, response, data;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              repoPath = githubUrl.replace('https://github.com/', '');\n              apiUrl = \"https://api.github.com/repos/\".concat(repoPath);\n              _context5.next = 5;\n              return fetch(apiUrl);\n            case 5:\n              response = _context5.sent;\n              if (response.ok) {\n                _context5.next = 8;\n                break;\n              }\n              return _context5.abrupt(\"return\", '');\n            case 8:\n              _context5.next = 10;\n              return response.json();\n            case 10:\n              data = _context5.sent;\n              return _context5.abrupt(\"return\", \"\\n                <div class=\\\"github-stats\\\">\\n                    <h4>GitHub Statistics</h4>\\n                    <div class=\\\"stats-grid\\\">\\n                        <div class=\\\"stat\\\">\\n                            <span class=\\\"stat-icon\\\">\\u2B50</span>\\n                            <span class=\\\"stat-value\\\">\".concat(data.stargazers_count, \"</span>\\n                            <span class=\\\"stat-label\\\">Stars</span>\\n                        </div>\\n                        <div class=\\\"stat\\\">\\n                            <span class=\\\"stat-icon\\\">\\uD83C\\uDF74</span>\\n                            <span class=\\\"stat-value\\\">\").concat(data.forks_count, \"</span>\\n                            <span class=\\\"stat-label\\\">Forks</span>\\n                        </div>\\n                        <div class=\\\"stat\\\">\\n                            <span class=\\\"stat-icon\\\">\\uD83D\\uDC41\\uFE0F</span>\\n                            <span class=\\\"stat-value\\\">\").concat(data.watchers_count, \"</span>\\n                            <span class=\\\"stat-label\\\">Watchers</span>\\n                        </div>\\n                        <div class=\\\"stat\\\">\\n                            <span class=\\\"stat-icon\\\">\\uD83D\\uDCC5</span>\\n                            <span class=\\\"stat-value\\\">\").concat(this.formatDate(data.updated_at), \"</span>\\n                            <span class=\\\"stat-label\\\">Updated</span>\\n                        </div>\\n                    </div>\\n                </div>\\n            \"));\n            case 14:\n              _context5.prev = 14;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.warn('Failed to load GitHub stats:', _context5.t0);\n              return _context5.abrupt(\"return\", '');\n            case 18:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[0, 14]]);\n      }));\n      function getGithubStats(_x3) {\n        return _getGithubStats.apply(this, arguments);\n      }\n      return getGithubStats;\n    }()\n    /**\r\n     * Setup modal interactions (gallery, etc.)\r\n     */\n  }, {\n    key: \"setupModalInteractions\",\n    value: function setupModalInteractions() {\n      var galleryThumbs = this.elements.modalBody.querySelectorAll('.gallery-thumb');\n      var mainImage = this.elements.modalBody.querySelector('.gallery-main-image');\n      galleryThumbs.forEach(function (thumb) {\n        thumb.addEventListener('click', function () {\n          // Update active thumbnail\n          galleryThumbs.forEach(function (t) {\n            return t.classList.remove('active');\n          });\n          thumb.classList.add('active');\n\n          // Update main image\n          mainImage.src = thumb.src;\n          mainImage.alt = thumb.alt;\n        });\n      });\n    }\n\n    /**\r\n     * Close project modal\r\n     */\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      var _this6 = this;\n      if (!this.currentModal) return;\n      this.elements.modal.classList.remove('modal-active');\n      setTimeout(function () {\n        _this6.elements.modal.classList.add('hidden');\n        document.body.style.overflow = '';\n        _this6.currentModal = null;\n      }, 300);\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('portfolio:project-closed');\n    }\n\n    /**\r\n     * Format date for display\r\n     */\n  }, {\n    key: \"formatDate\",\n    value: function formatDate(dateString) {\n      return new Date(dateString).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short'\n      });\n    }\n\n    /**\r\n     * Show error message\r\n     */\n  }, {\n    key: \"showError\",\n    value: function showError(message) {\n      this.container.innerHTML = \"\\n            <div class=\\\"portfolio-error\\\">\\n                <div class=\\\"error-icon\\\">\\u26A0\\uFE0F</div>\\n                <h3>Oops! Something went wrong</h3>\\n                <p>\".concat(message, \"</p>\\n                <button class=\\\"btn btn-primary\\\" onclick=\\\"location.reload()\\\">\\n                    Try Again\\n                </button>\\n            </div>\\n        \");\n    }\n\n    /**\r\n     * Cleanup when component is destroyed\r\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.animationId) {\n        cancelAnimationFrame(this.animationId);\n      }\n      clearTimeout(this.filterTimeout);\n      document.body.style.overflow = '';\n      _EventBus_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit('portfolio:destroyed');\n    }\n  }]);\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7565\n");

/***/ })

}]);